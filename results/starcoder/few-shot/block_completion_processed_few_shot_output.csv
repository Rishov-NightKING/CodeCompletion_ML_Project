eval_prompt,ground_truth,model_output
"def f(total,r,k):
    ans = ((pow(k-1,n,m)-(-1)**n)*pow(k,-1,m))%m
    if (r*n-total)%k == 0:
        ans += (-1)**n
    return ans
n,k,m = map(int,input().split())
ans = 0
if k % 2 == 1:
    for i in range(k):
        ans += pow(k,n-1,m)-f(2*i,i,k)
    print(ans%m)
else:
    for i in range(k//2):
        {{completion}}
    print(ans%m)","ans += pow(k,n-1,m)-f(2*i,i,k//2)*pow(2,n-1,m)","ans += pow(k, n - 1, m) - f(2 * i, i, k // 2) * pow(2, n - 1, m)"
"import math
def pow(n, m, p):
    if m==0:
        return 1
    else:
        if m%2==0:
            return (pow(n, m//2, p)**2)%p
        else:
            {{completion}}
n, k, p =map(int, input().split())
if k%2==1:
    print((pow(k, n, p) - pow(k-1, n, p)+(-1)**((n+1)%2)*(math.gcd(n-2, k)-1))%p)
else:
    print((pow(2, p-2, p)*(pow(k, n, p) - pow(k-2, n, p)) + (-1)**((n+1)%2)*(math.gcd(n-2, k//2)-1)*pow(2, n-1, p))%p)","return (n*pow(n, m//2, p)**2)%p","ans += pow(-1, n - 1, m) * pow(2, n - 1, m)
            ans %= m"
"def calculate_lucky_tickets(n, k, m):
    def f(total, r, k):
        ans = ((pow(k - 1, n, m) - (-1) ** n) * pow(k, -1, m)) % m
        if (r * n - total) % k == 0:
            ans += (-1) ** n
        return ans

    ans = 0

    if k % 2 == 1:
        for i in range(k):
            ans += pow(k, n - 1, m) - f(2 * i, i, k)
    else:
        for i in range(k // 2):
            {{completion}}

    return ans % m


n, k, m = map(int, input().split())
result = calculate_lucky_tickets(n, k, m)
print(result)
","ans += pow(k, n - 1, m) - f(2 * i, i, k // 2) * pow(2, n - 1, m)","ans += pow(k,n-1,m)-f(2*i,i,k//2)*pow(2,n-1,m)"
"import math
n,k,m = map(int,input().split())
ans = 0
if k % 2 == 1:
    print((pow(k,n,m)-pow(k-1,n,m)+(-1)**n*(1-math.gcd(n-2,k)))%m)
else:
    {{completion}}","print((pow(k//2,n,m)-pow(k//2-1,n,m)+(-1)**n*(1-math.gcd(n-2,k//2)))*pow(2,n-1,m)%m)","print((pow(k,n,m)*pow(2,-1,m)-pow(2,n-1,m)*(pow(k//2-1,n,m)+(-1)**n*(1-math.gcd(n-2,k//2))))%m)"
"n, k, m = input().split()
n = int(n)
k = int(k)
m = int(m)

if k % 2 == 1:
    ans = (pow(k, n, m) + pow(-1, n, m) - pow(k - 1, n, m)) % m
    for t in range(k):
        if n * t % k == 2 * t % k:
            ans += pow(-1, n - 1, m)
    ans = (ans % m + m) % m
    print(ans)
else:
    ans = ((pow(k, n, m) + pow(-2, n, m) - pow(k - 2, n, m)) * pow(2, m - 2, m)) % m
    for t in range(k // 2):
        if n * t % k == 2 * t % k or (n * t + k // 2) % k == 2 * t % k:
            {{completion}}
    ans = (ans % m + m) % m
    print(ans)","ans += pow(-1, n - 1, m) * pow(2, n - 1, m)
            ans %= m","ans += pow(-1, n - 1, m) * pow(2, m - 2, m)"
"from math import gcd
n,k,m=map(int,input().split())
if k&1:
    print((pow(k,n,m)-pow(k-1,n,m)-(-1)**n*(gcd(n-2,k)-1))%m)
else:
    {{completion}}","print((pow(k,n,m)*pow(2,-1,m)-pow(2,n-1,m)*(pow(k//2-1,n,m)+(-1)**n*(gcd(n-2,k//2)-1)))%m)","print((pow(k//2,n,m)-pow(k//2-1,n,m)-(-1)**n*(gcd(n-2,k//2)-1))*pow(2,n-1,m)%m)"
"import sys

input = sys.stdin.readline

t = int(input())
for _ in range(t):
    m,n,k = map(int,input().split())
    grid = [list(input().strip()) for _ in range(m)]
    if m > n:
        m,n = n,m
        grid = list(zip(*grid))
    SS = [[0] * (n+1) for _ in range(m)]
    for i in range(m):
        for j in range(n):
            SS[i][j + 1] = SS[i][j] + (grid[i][j] == '#')
    ans = 0
    for i in range(m):
        for j in range(n):
            # 往上扫
            ans1 = 0
            ans2 = 0
            for l in range(min(k + 1,i + 1)):
                {{completion}}
            ans3 = 0
            ans4 = 0
            for l in range(min(k + 1,m - i)):
                left = max(0,j - k + l)
                right = min(n,j + k - l + 1)
                ans3 += SS[i + l][j + 1] - SS[i + l][left]
                ans4 += SS[i + l][right] - SS[i + l][j]
            ans = max(ans,ans1,ans2,ans3,ans4)
    print(ans)","left = max(0,j - k + l)
                right = min(n,j + k - l + 1)
                ans1 += SS[i - l][j + 1] - SS[i - l][left]
                ans2 += SS[i - l][right] - SS[i - l][j]","ans1 = 0
ans2 = 0
ans3 = 0
ans4 = 0"
"def gcd(a, b):
  if a==0:
    return b
  return gcd(b%a, a)
def main():
  n = int(input())
  a = [int(i) for i in input().split()]
  ans = 0
  for k in range(1, n+1):
    if n%k==0:
      g = 0
      for i in range(n-k):
        {{completion}}
      ans += g!=1
  return ans

t = int(input())
while t:
  print(main())
  t -= 1","g = gcd(g, abs(a[i+k]-a[i]))","g=gcd(abs(l[k]-l[k-i]),g)"
"import math
import sys


def solute():
    n = int(sys.stdin.readline())
    a_list = list(map(int, sys.stdin.readline().split()))

    i = 1
    divs = []
    while i * i <= n:
        if n % i == 0:
            divs.append(i)
            if i != n // i:
                {{completion}}
        i += 1

    divs.sort()
    succ = set()
    ans = 0
    for div in divs:
        g = 0
        did = False
        for num in succ:
            if div % num == 0:
                ans += 1
                did = True
                break
        if did:
            continue
        for i in range(n):
            g = math.gcd(g, a_list[i] - a_list[i % div])
            if g == 1:
                break
        if g != 1:
            ans += 1
            succ.add(div)

    print(ans)

t = int(sys.stdin.readline())

for _ in range(t):
    solute()",divs.append(n // i),"g = gcd(g, abs(a[i+k]-a[i]))"
"def gcd(a,b):
    if b==None:
        return a
    if b==0:
        return a
    elif a==0:
        return b
    else:
        return gcd(b,a%b)
    

for i in range(int(input())):
    n=int(input())
    l = [int(i) for i in input().split()]
    c=1
    for i in range(1,n):
        if n%i!=0:
            continue
        
        g=None
        for j in range(i):
            for k in range(j+i,n,i):
                {{completion}}
            if g==1:
                break
        else:
            c+=1
    print(c)","g=gcd(abs(l[k]-l[k-i]),g)","g = gcd(g, abs(a[i+k]-a[i]))"
"for _ in range(int(input())):
    {{completion}}","a, b = map(int, input().split())
    s = int((a + b) ** 0.5)
    print(min(k - 1 + (a + k - 1) // k + (b + k - 1) // k for k in range(max(1, s - 1000), s + 1000)))",k+=1
"from math import ceil, floor, sqrt

t = int(input())

for _ in range(t):
  a, b = list(map(int, input().split()))
  estM = floor(sqrt(a+b))
  mi = 1e18
  for m in range(estM-100, estM+100):
    if m <= 0: {{completion}}
    cost = m - 1 + ceil(a/m) + ceil(b/m)
    if cost < mi:
      mi = cost
  print(mi)
",continue,"if m <= 0:
  cost = m - 1 + ceil(a/m) + ceil(b/m)"
"for x in range(int(input())):
	mm=999999999999
	a,b=map(int,input().split())
	for y in range(max(1,int((a+b)**0.5-100)),int((a+b)**0.5)+100):
		k=a//y+b//y
		if a%y:
			{{completion}}
		if b%y:
			k+=1
		mm=min(k+y-1,mm)
	print(mm)
		",k+=1,"a, b = map(int, input().split())
    s = int((a + b) ** 0.5)
    print(min(k - 1 + (a + k - 1) // k + (b + k - 1) // k for k in range(max(1, s - 1000), s + 1000)))"
"M=998244353
F=[1]
I=[1]
for i in range(1,300001):{{completion}}
n,m,k=map(int,input().split())
n-=m*(k+1)
print(sum((-1)**i*pow(2,m-i,M)*F[m]*I[i]*I[m-i]*F[n+m-k*i]*I[m]*I[n-k*i]for i in range(m+1)if n>=k*i)%M)
","F.append((F[-1]*i)%M);I.append(pow(F[-1],-1,M))","F[i]=F[i-1]*i%M
I[i]=I[i-1]*(M-M//i)%M
I[0]=1
F[0]=1
p2=[2]
for i in range(1,300001):
    p2.append(p2[-1]*2%M)"
"MOD, N = 998244353, int(3e5) + 5

fct, invfct, p2 = [N * [1] for _ in range(3)]

for i in range(1, N):
    {{completion}}

invfct[-1] = pow(fct[-1], MOD - 2, MOD)

for i in range(N - 2, 0, -1):
    invfct[i] = invfct[i + 1] * (i + 1) % MOD


def nCr(n, r):
    return fct[n] * invfct[n - r] % MOD * invfct[r] % MOD


n, m, k = map(int, input().split())

i, ans = 2 * [0]

while i <= m and n - k * (i + m) >= m:
    cur = 1 if i % 2 == 0 else MOD - 1

    cur = cur * nCr(n - k * (i + m), m) % MOD * nCr(m, i) % MOD * p2[m - i] % MOD

    ans = (ans + cur) % MOD

    i += 1

print(ans)","fct[i] = fct[i - 1] * i % MOD

    p2[i] = p2[i - 1] * 2 % MOD","fct[0] = 1
invfct[0] = 1
p2[0] = 1

for i in range(1, N):
    fct[i] = fct[i - 1] * i % MOD
    p2[i] = p2[i - 1] * 2 % MOD

invfct[-1] = pow(fct[-1], MOD - 2, MOD)

for i in range(N - 2, 0, -1"
"from math import comb

mod=998244353
nm=10**6
fact=[1]*(nm+1)
for i in range(2,nm+1):
    fact[i]=fact[i-1]*i % mod
 
inv=[1]*(nm+1)
inv[nm]=pow(fact[nm],mod-2,mod)
for i in range(nm-1,0,-1):
    inv[i]=inv[i+1]*(i+1) %mod
 
def comb(n, m):
    return fact[n]*inv[m] % mod*inv[n-m] % mod if 0 <= m <= n else 0
 
n, m, k = map(int, input().split())
if n<(m*(k+1)):
    print(0)
else:
    sn,ans=1,0
    for i in range(m+1):
        a=m-i
        c=n-a*(k+1)-i*(2*k+1)
        if c>=0:
            {{completion}}
        sn=-sn
    print(ans)
","ans+=sn*comb(a+i+c, a)*comb(i+c, i)*pow(2, a, mod)
            ans%=mod","ans+=comb(m,i)*sn*inv[i]"
"import sys
input = sys.stdin.readline
t = int(input())
for _ in range(t):
    k = int(input())
    s = input().strip()
    n = len(s)
    stack = []
    costs = []
    for i in range(n):
        if s[i] == '(':
            stack.append(i)
        else:
            {{completion}}
    print(sum(sorted(costs)[:max(0,len(costs)-k)]))
",costs.append((i - stack.pop()) // 2),")
costs.append(i - stack.pop())
("
"import sys
from collections import defaultdict, deque, Counter
t = int(sys.stdin.readline().strip())
for _ in range(t) : 
    k = int(sys.stdin.readline().strip())
    node = sys.stdin.readline().strip()
    n = len(node)
    open = []
    length = []
    answer, now = 0, 0
    for i in range(n) : 
        if node[i] == '(' : 
            open.append(i)
        else : 
            {{completion}}
    node = node + '.'
    for i in range(n-1, -1, -1) : 
        if node[i] == '(' : 
            now -= 1
        else : 
            answer += now
            now += 1
    length.sort(reverse = 1)
    print(answer - sum(length[:min(k, n)]))",length.append((i - open.pop() - 1) // 2),length.append(i - open.pop())
"import sys
ipt = sys.stdin.readline

def iin():
    return int(ipt())

def lmin():
    return list(map(int,ipt().split()))

MOD = 998244353

from heapq import heappop,heappush

for _ in range(iin()):
    
    K = iin()
    S = ipt()[:-1]
    N = len(S)
    cnt = [0,0,0,0,0,0,0,0]
    st = []
    ans = 0
    for i,s in enumerate(S):
        if s == ""("":
            ans += len(st)
            st.append(i)
        else:
            {{completion}}
            
    cnt.sort()
    if K:
        ans -= sum(cnt[-K:])
    print(ans)


    ",cnt.append((i-st.pop())//2),"st.pop()
cnt[len(st)] += 1"
"import sys
input = sys.stdin.readline 

for _ in range(int(input())):
    n = int(input()) 
    a = list(map(int, input().split())) 
    s = 0 
    for i in range(n):
        if(i % 2 == 0):
            s -= a[i] 
        else:
            {{completion}} 
    if(n % 2 or s >= 0):
        print(""YES"")
    else:
        print(""NO"")",s += a[i],s -= a[i]
"import sys

def semi_sortable(arr, n:int) -> bool:
    if n % 2 != 0:
        return True
    sign = 1
    s = 0
    for num in arr:
        s += sign * num
        sign = -sign
    if s > 0:
        return False
    else:
        return True


i = -1
for line in sys.stdin:
    nums = [int(x) for x in line.strip().split()]
    if i == -1:
        i += 1
    else:
        if i % 2 == 0:
            n = nums[0]
        else:
            if semi_sortable(nums, n):
                print(""Yes"")
            else:
                {{completion}}
        i += 1
","print(""No"")","if semi_sortable(nums, n):
    print(""Yes"")
else:
    print(""No"")"
"import sys
input = sys.stdin.readline

def solve():
    n = int(input())
    A = list(map(int, input().split()))

    for i in range(0, n, 2):
        if i == n - 1:
            {{completion}}
        if i == n - 2:
            return ""YES"" if A[i] <= A[i + 1] else ""NO""
        A[i + 2] -= A[i + 1] - A[i]
    
    return 
    
T = int(input())
out = [solve() for _ in range(T)]
print(""\n"".join(map(str, out)))","return ""YES""",A[i + 2] -= A[i + 1] - A[i]
"from sys import stdin
input = lambda: stdin.readline().rstrip('\r\n')


N = int(1e6)+1
f = [0]*N

for _ in range(int(input())):
    n = int(input())
    a = sorted(map(int, input().split()))
    ans = 0

    for x in a: f[x] += 1

    for i, x in enumerate(a):
        if i and a[i-1] == x: continue 
        ans += f[x] * (f[x]-1) * (f[x]-2)
        for k in range(2, N):
            if x*k*k >= N: {{completion}}
            ans += f[x] * f[x*k] * f[x*k*k]

    print(ans)
    for x in a: f[x] = 0",break,break
"# https://codeforces.com/contest/1822

import sys

input = lambda: sys.stdin.readline().rstrip()  # faster!

N = 10 ** 6 + 2
case = [-1] * N
cnt = [0] * N


def solve_case(t):
    global case, cnt

    _ = int(input())
    a = list(map(int, input().split()))  # 1 <= a[i] <= 10**6

    mx = max(a)
    v = []
    for x in a:
        if case[x] != t:
            case[x] = t
            cnt[x] = 1
            v += [x]
        else:
            cnt[x] += 1

    ans = 0
    for x in v:
        if cnt[x] >= 3:
            ans += cnt[x] * (cnt[x] - 1) * (cnt[x] - 2)
        b = 2
        while x * b * b <= mx:
            if case[x * b] == case[x * b * b] == t:
                {{completion}}
            b += 1

    print(ans)


for t in range(int(input())):
    solve_case(t)
",ans += cnt[x] * cnt[x * b] * cnt[x * b * b],break
"from sys import stdin
input = lambda: stdin.readline().rstrip('\r\n')
from array import array

N = int(1e6)+1
f = array('i', [0]*N)

for _ in range(int(input())):
    n = int(input())
    a = sorted(map(int, input().split()))
    ans = 0

    for x in a: f[x] += 1

    for i, x in enumerate(a):
        if i and a[i-1] == x: continue 
        ans += f[x] * (f[x]-1) * (f[x]-2)
        for k in range(2, N):
            if x*k*k >= N: {{completion}}
            ans += f[x] * f[x*k] * f[x*k*k]

    print(ans)
    for x in a: f[x] = 0",break,break
"import sys

# 1到1000的质数表
prime = [True] * 1001
prime[0] = prime[1] = False
ps = []
for i in range(2, 1001):
    if prime[i]:
        ps.append(i)
        for j in range(i * i, 1001, i):
            prime[j] = False

def doubleDiv(x):
    div = []
    for p in ps:
        if p * p > x:
            break
        c = 0
        while x % p == 0:
            c += 1
            x //= p
        if c > 1:
            div.append((p,c//2))
    if x > 1:
        sq = int(x ** 0.5)
        if sq * sq == x:
            div.append((sq, 1))
    ans = [1]
    for p,c in div:
        temp = [p ** i for i in range(1, c + 1)]
        ans += [a * b for a in ans for b in temp]
    # print(ans)
    return ans

t = int(sys.stdin.readline())
for _ in range(t):
    n = int(sys.stdin.readline())
    a = list(map(int, sys.stdin.readline().split()))
    from collections import Counter
    c = Counter(sorted(a))
    ans = 0
    for x in c.values():
        ans += x*(x - 1)*(x - 2)
    for x,v in c.items():
        for k in doubleDiv(x):
            if k != 1:
                {{completion}}
    print(ans)
",ans += v * c[x//k] * c[x//k//k],break
"import sys
input = sys.stdin.readline

def solve():
    {{completion}}

T = int(input())
out = [solve() for _ in range(T)]
print(""\n"".join(map(str, out)))","n = int(input())
    return 26 + (n - 4) * (n + 6)","n = int(input())
        solution(n)"
"import sys


def solution(n):
    res = 1 + n*4 + (n-1) + (2+(n-2)*2)*(n-2)//2
    sys.stdout.write(str(res)+""\n"")


def main():
    tests_n = int(sys.stdin.readline().strip())
    for t in range(tests_n):
        {{completion}}


if __name__ == ""__main__"":
    main()
","n = int(sys.stdin.readline().strip())
        solution(n)","n = int(input())
    return 26 + (n - 4) * (n + 6)"
"import sys

test_cases = int(sys.stdin.buffer.readline())
answers = [0] * test_cases

for answer in range(test_cases):
    {{completion}}

sys.stdout.write('\n'.join(map(str, answers)))","n = int(sys.stdin.buffer.readline())
    answers[answer] = n * 4 + n + (n - 1) * (n - 2)","n = int(input())
    return 26 + (n - 4) * (n + 6)"
"import sys
ci = sys.stdin.readline

for _ in range(int(ci())):
    n, k, x = list(map(int, ci().split()))
    a = sorted(map(int, ci().split()))
    total = sum(a)
    for i in range(min(x, n)):
        total -= a[n-1-i] * 2
    res = total
    for i in range(min(k, n)):
        total += a[n-1-i]
        if n - x - i - 1 >= 0:
            {{completion}}
        res = max(res, total)
    print(res)",total -= a[n-x-i-1] * 2,"total += a[n-1-i] * 2
res = max(res, total)"
"import sys

def solve():
    n,k,x = map(int, sys.stdin.readline().split())
    ls = list(map(int, sys.stdin.readline().split()))
    ls.sort(reverse=True)
    ls.append(0)

    res,idx = 0,x
    tmp = 0
    for i in range(k):
        if idx < n:
            tmp += ls[i]-2*ls[idx]
            res = max(tmp,res)
            idx += 1
        else:
            {{completion}}
    for i in range(x):
        ls[i] = -ls[i]
    print(sum(ls)+res)

for i in range(int(input())):
    solve()","tmp += ls[i]
            res = max(tmp,res)",tmp += ls[i]-2*ls[idx]
"import sys
t = int(sys.stdin.readline().strip())
for _ in range(t) : 
    n, k, x = map(int, sys.stdin.readline().strip().split())
    node = [*map(int, sys.stdin.readline().strip().split())]
    node.sort()
    node = [0] + node
    pres = [0 for i in range(n + 1)]
    for i in range(1, n + 1) : 
        {{completion}}
    ans = -(pres[n] - pres[n - x]) + pres[n - x]
    for i in range(n - 1, n - k - 1, -1) : 
        ans = max(ans, -(pres[i] - pres[max(0, i - x)]) + pres[max(i - x, 0)])
    print(ans)
    ",pres[i] = pres[i - 1] + node[i],pres[i] += node[i]
"for c,*s in[*open(0)][1:]:
    {{completion}}",print(10**s.count('?')*(8*(c>'9')+(c>'0'))),print(10**s.count('?')*(8*(c>'9')+(c>'0')))
"for x,*s in[*open(0)][1:]:{{completion}}",print(10**s.count('?')*(8*(x>'9')+(x>'0'))),print(10**s.count('?')*(8*(x>'9')+(x>'0')))
"for y,*p in[*open(0)][1:]:{{completion}}",print(10**p.count('?')*(8*(y>'9')+(y>'0'))),print(10**p.count('?')*(8*(y>'9')+(y>'0')))
"for s in[*open(0)][1:]:{{completion}}
			 	      			  								 	    	","print((max(map(len,(s[:-1]+s[:-2]).split('0')))+1)**2//4)","print((max(map(len,(s[:-1]+s[:-2]).split('0')))+1)**2//4)"
"#start for loop and print for output
for srt in[*open(0)][1:]:{{completion}}","print((max(map(len,(srt[:-1]+srt[:-2]).split('0')))+1)**2//4)","print((max(map(len,(s[:-1]+s[:-2]).split('0')))+1)**2//4)"
for p in[*open(0)][1:]:{{completion}},"print((max(map(len,(p[:-1]+p[:-2]).split('0')))+1)**2//4)","print((max(map(len,(p[:-1]+p[:-2]).split('0')))+1)**2//4)"
"for _ in range(int(input())):
    n, m = map(int, input().split())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))
    a.sort()
    b.sort()
    ans = 0
    for i in range(n):
        {{completion}}
    print(ans)","ans += max(a[i]-b[n-1-i], b[m-1-i]-a[i])",ans += abs(a[i] - b[i])
"a = int(input())
for _ in range(a):
    n ,m = tuple(map(int,input().split(' ')))
    a = list(map(int,input().split(' ')))
    b = list(map(int,input().split(' ')))
    a.sort()
    b.sort(reverse= True)
    i1 = 0
    i2 = n-1
    o1 = 0
    o2 = m-1
    ans = 0
    while i1 <= i2:
        mi = abs(a[i1]-b[o1])
        ma = abs(a[i2]-b[o2])
        if mi >= ma:
            ans += mi
            o1 +=1
            i1 +=1
        else:
            {{completion}}
    print(ans)


","ans += ma
            o2 -= 1
            i2 -= 1","ans += max(a[i]-b[n-1-i], b[m-1-i]-a[i])"
"t = int(input())
for _ in range(t):
    _ = input()
    a = [int(x) for x in input().split("" "")]
    b = [int(x) for x in input().split("" "")]
    a.sort()
    b.sort(reverse=True)
    left = 0
    right = -1
    total_diff = 0
    for _ in a:
        l_diff = abs(b[left]-a[left])
        r_diff = abs(a[right]-b[right])
        if l_diff > r_diff:
            total_diff += l_diff
            left += 1
        else:
            {{completion}}
    print (total_diff)
","total_diff += r_diff
            right -= 1",total_diff += abs(a[right]-b[right])
"# https://codeforces.com/contest/1821

import sys

input = lambda: sys.stdin.readline().rstrip()  # faster!


def solve_case():
    n = int(input())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))

    # a != b, i.e. we are guaranteed to find a position i with a[i] != b[i]
    first = 0
    while a[first] == b[first]:
        {{completion}}
    while first - 1 >= 0 and b[first] >= b[first - 1]:
        first -= 1

    last = n - 1
    while a[last] == b[last]:
        last -= 1
    while last + 1 < n and b[last] <= b[last + 1]:
        last += 1

    print(first + 1, last + 1)


for _ in range(int(input())):
    solve_case()
",first += 1,break
"import sys


def solve(a, a_dash, n):
    l, r = 0, n - 1

    # convergence
    for a_val, a_dash_val in zip(a, a_dash):
        if a_val != a_dash_val:
            {{completion}}
        l += 1
    for a_val, a_dash_val in zip(reversed(a), reversed(a_dash)):
        if a_val != a_dash_val:
            break
        r -= 1

    # divergence
    while l > 0 and a_dash[l - 1] <= a_dash[l]:
        l -= 1

    while r < n - 1 and a_dash[r] <= a_dash[r + 1]:
        r += 1

    return l, r


def main():
    t = int(sys.stdin.readline().strip())
    for _ in range(t):
        n = int(sys.stdin.readline().strip())
        a = [int(x) for x in sys.stdin.readline().split()]
        a_dash = [int(x) for x in sys.stdin.readline().split()]
        l, r = solve(a, a_dash, n)
        print(l + 1, r + 1)


if __name__ == '__main__':
    main()
",break,break
"import sys 
input = sys.stdin.buffer.readline 

def process(A, B):
    n = len(A)
    diff = []
    for i in range(n):
        if A[i] != B[i]:
            diff.append(i)
    l, r = diff[0], diff[-1]
    while l > 0:
        if B[l-1] <= B[l]:
            l-=1
        else:
            {{completion}}
    while r < n-1:
        if B[r] <= B[r+1]:
            r+=1 
        else:
            break
    sys.stdout.write(f'{l+1} {r+1}\n')
    

t = int(input())
for i in range(t):
    n = int(input())
    A = [int(x) for x in input().split()]
    B = [int(x) for x in input().split()]
    process(A, B)",break,first += 1
for s in[*open(0)][1:]:{{completion}},"a=[int(x)or 10for x
in s[:-1]];print(sum(1+abs(x-y)for x,y in zip([1]+a,a)))","a=[int(x)or 10for x
in s[:-1]];print(sum(1+abs(x-y)for x,y in zip([1]+a,a)))"
"for s in[*open(0)][1:]:{{completion}}
","a=[int(x)or 10for x
in s[:-1]];print(sum(1+abs(x-y)for x,y in zip([1]+a,a)))","a=[int(x)or 10for x
in s[:-1]];print(sum(1+abs(x-y)for x,y in zip([1]+a,a)))"
"def mani():
    n, t = map(int, input().split())
    durations = list(map(int, input().split()))
    values = list(map(int, input().split()))
    max_value = 0
    max_index = -1
    for i in range(n):
        if i + durations[i] <= t:
            if values[i] > max_value:
                {{completion}}
    print(max_index)
for _ in range(int(input())):
    mani()","max_value = values[i]
                max_index = i + 1","max_value = values[i]
max_index = i"
"import sys
from collections import defaultdict as dd
from sys import maxsize
import math

input = sys.stdin.readline


def inpt():
    return int(input())


def inpl():
    return list(map(int, input().split()))


def inps():
    s = input()
    return list(s[:len(s) - 1])


def main():
    n, t = inpl()
    dur = inpl()
    val = inpl()
    ans = -1
    max1 = -1
    for i in range(n):
        if dur[i] <= t and val[i] > max1:
            {{completion}}
        t -= 1
    return ans


for _ in range(inpt()):
    print(main())
","max1 = val[i]
            ans = i+1",")
ans = i
("
"def solve():
    n, t = map(int, input().split())
    a = [int(x) for x in input().split()]
    b = [int(x) for x in input().split()]
    bst = -2
    for i in range(n):
        if i + a[i] <= t and (bst == -2 or b[bst] < b[i]):
            {{completion}}
    print(bst + 1)
 
 
t = int(input())
for _ in range(t):
    solve()",bst = i,bst = i
"from sys import stdin
input = stdin.readline
for _ in range(int(input())):
    mi = 1
    mx = 10 ** 9
    t = [ ]
    for __ in range(int(input())):
        a, n = map(int, input().split())
        if a == 1:
            if n > mi:
                mi = n
        elif a == 2:
            if n < mx:
                {{completion}}
        else:
            t.append(n)
    ans = mx - mi + 1
    for x in t:
        if mx >= x >= mi:
            ans -= 1
    print(max(ans, 0)) ",mx = n,mx = n
"import sys
input = sys.stdin.readline

for _ in range (int(input())):
	one=[]
	two=[]
	thr=[]
	for i in range (int(input())):
	    x,y=[int(x) for x in input().split()]
	    if x==1:
	        one.append(y)
	    elif x==2:
	        two.append(y)
	    else:
	        thr.append(y)
# 	print(one,two,thr)
	ans=0
	l=max(one)
	u=min(two)
	if u>=l:
	    ans=u-l+1
	    for n in thr:
	        if n>=l and n<=u:
	            {{completion}}
	print(ans)
    ",ans-=1,"if n>=l and n<=u:
    ans-=1"
"import sys

def solve():
    inp = sys.stdin.readline
    n = int(inp())
    m = None
    M = None
    other = []
    for i in range(n):
        a, x = map(int, inp().split())
        if a == 1:
            if m is None or m < x:
                {{completion}}
        if a == 2:
            if M is None or M > x:
                M = x
        if a == 3:
            other.append(x)
    c = sum(m <= i <= M for i in other)
    if m <= M:
        print(M - m + 1 - c)
    else:
        print(0)

def main():
    for i in range(int(sys.stdin.readline())):
        solve()

if __name__ == '__main__':
    main()
",m = x,m = x
"for _ in range(int(input())):
	{{completion}}
	
	
	
	
	

	
	
	
	
	
	
","n = int(input())
	a = input()
	b = input()
	c = input()
	print ('yes' if any(a[i] != c[i] and b[i] != c[i] for i in range(n)) else 'no')",cnt += 1
"num = int(input())
ns = []
abcs = []
for z in range(num):
    ns.append(int(input()))
    abc = []
    for x in range(3):
        abc.append(input())
    abcs.append(abc)

for abc, n in zip(abcs, ns):
    ans = 'No'
    a, b, c = abc[0], abc[1], abc[2]
    for al, bl, cl in zip(a, b, c):
        if cl == al or cl == bl:
            {{completion}}
        ans = 'Yes'
        break
    print(ans)",continue,"for al, bl, cl in zip(a, b, c):
    if cl == al or cl == bl:
        ans = 'Yes'
        break
print(ans)"
"def solve():
    n = int(input())
    a1= input().strip()
    b1 = input().strip()
    c1= input().strip()

    cnt = 0

    for i in range(n):
        if a1[i] == c1[i] or b1[i] == c1[i]:
            {{completion}}

    if cnt == n:
        print(""NO"")
        return

    print(""YES"")

# Read the number of test cases
t1 = int(input())

# Solve each test case
for _ in range(t1):
    solve()",cnt += 1,"n = int(input())
	a = input()
	b = input()
	c = input()
	print ('yes' if any(a[i] != c[i] and b[i] != c[i] for i in range(n)) else 'no')"
"for s in[*open(0)][1:]:
     {{completion}}
",print((s<'^^')+s[:-1].split('_').count('')),print((s<'^^')+s[:-1].split('_').count(''))
"for _ in range(int(input())):
    s = input()
    if s=='^':
        print(1)
    else:
        {{completion}}
        ",print(s.split('_').count('')),print((s<'^^')+s[:-1].split('_').count(''))
for g in[*open(0)][1:]:{{completion}},print((g<'^^')+g[:-1].split('_').count('')),print((g<'^^')+g[:-1].split('_').count(''))
for s in[*open(0)][1:]:{{completion}},"n,k=map(int,s.split());print('YNEOS'[n&~k&1::2])","n, k = map(int, s.split());print('YNEOS'[n&~k&1::2])"
"for z in[*open(0)][1:]:
    {{completion}}","n, k = map(int, z.split());print('YNEOS'[n&~k&1::2])","n, k = map(int, z.split());print('YNEOS'[n&~k&1::2])"
for KP in[*open(0)][1:]:{{completion}},"f,y=map(int,KP.split());print('YNEOS'[f&~y&1::2])","n,k=map(int,KP.split());print('YNEOS'[n&~k&1::2])"
"import sys
input = sys.stdin.readline


for _ in range(int(input())):
    s = input()[:-1]
    for i in range(26):
        cur = 0
        for x in s.split(chr(97 + i)):
            op, l = 0, len(x)
            while l:
                {{completion}}
            cur = max(cur, op)
        ans = min(ans, cur) if i else cur
    print(ans)","l //= 2
                op += 1",cnt = 0
"import sys
input = sys.stdin.readline
for _ in range((int)(input())) :
    s = input().rstrip('\n')
    n = len(s)
    answer = n + 1
    for x in range(26) :
        star = chr(ord('a') + x)
        maxi = 0
        cnt = 0
        for _ in range(n) :
            if s[_] is not star : cnt += 1
            else : {{completion}}
            maxi = max(maxi , cnt)
        ans = 0
        pow = 1
        while pow <= maxi :
            pow *= 2
            ans += 1
        answer = min(answer , ans)
    print(answer)",cnt = 0,"l //= 2
                op += 1"
"import sys
input = sys.stdin.readline

INF = 99999999999
era = [INF]*1000001
for i in range(2, 1000001):
    if era[i] != INF:
        {{completion}}
    era[i] = i
    for j in range(i*i, 1000001, i):
        era[j] = min(era[j], i)

for _ in range(int(input())):
    
    n, m = map(int, input().split())
    print(""YES"" if era[n] > m else ""NO"")
    
",continue,")
era[j] = min(era[j], i)
("
"import sys
input = sys.stdin.readline
 
P = [0] * 1000001
for i in range(2, 1000001) :
    if P[i] == 0 :
        j = 1
        while i*j <= 1000000 :
            if P[i*j] == 0 : {{completion}}
            j += 1
 
for _ in range(int(input())) :
    a, b = map(int,input().split())
    if a == 1 or P[a] > b : print('YES')
    else : print('NO')",P[i*j] = i,"print(""YES"")"
"import sys
input=sys.stdin.readline
li=[0]*int(1e6+1)
for i in range(2,int(1e6+1)):
    if not li[i]:
        li[i]=i
        for j in range(i,int(1e6+1),i):
            if not li[j]:
                li[j]=i
for i in range(int(input())):
    n,m=map(int,input().split())
    if 1 in (n,m):
        print(""YES"")
    else:
        if m>=n:
            print(""NO"")
        else:
            if li[n]<=m:
                print(""NO"")
            else:
                {{completion}}","print(""YES"")","if li[n]<=m:
    print(""NO"")
else:
    print(""YES"")"
"for sdr in[*open(0)][2::2]:
    {{completion}}","pp=sorted(map(int,sdr.split()));
    print(max(pp[0]*pp[1],pp[~0]*pp[~1]))","x=sorted(map(int,sdr.split()));print(max(x[0]*x[1],x[~0]*x[~1]))"
"from sys import stdin
input = stdin.readline 
for chir in range(int(input())):
    {{completion}}","n_m = int(input())
    abr = list(map(int, input().split()))
    abr.sort()
    print(max(abr[-1] * abr[-2], abr[0] * abr[1]))","x=sorted(map(int,input().split()));print(max(x[0]*x[1],x[~0]*x[~1]))"
"for v in[*open(0)][2::2]:{{completion}}
","x=sorted(map(int,v.split()));print(max(x[0]*x[1],x[~0]*x[~1]))","n=int(v)
a=list(map(int,input().split()))
a.sort()
print(max(a[0]*a[1],a[-1]*a[-2]))"
"import sys
inp = sys.stdin.readline
for _ in range(int(inp())):
    n = int(inp())
    s = inp()
    A = [0]*26
    B = [0]*26
    for c in s[:-1]:
        B[ord(c)-97] += 1
    for i in range(n//2):
        if s[i] == s[n-i-1]:
            A[ord(s[i])-97] += 1
    if n%2 or max(B) > n//2:
        print(-1)
    else:
        if 2*max(A) > sum(A):
            print(max(A))
        else:
            {{completion}}

		     	 	 	  	 		 			  	 		",print((sum(A)+1)//2),"ans += 1
                    cnt[ord(line[i]) - 97] += 1"
"import sys
input = sys.stdin.readline
K = 26

def solve():
    n = int(input())
    s = input().rstrip()
    if n % 2 == 1:
        return -1
    
    cnt = [0] * K
    for i, char in enumerate(s):
        cnt[ord(char) - ord(""a"")] += 1
    
    if max(cnt) > n // 2:
        return -1
    
    cnt = [0] * K
    sm = 0
    for i in range(n // 2):
        if s[i] == s[n - 1 - i]:
            {{completion}}

    return max((sm + 1) //  2, max(cnt))


T = int(input())
out = [solve() for _ in range(T)]
print(""\n"".join(map(str, out)))","cnt[ord(s[i]) - ord(""a"")] += 1
            sm += 1","ans += 1
            cnt[ord(line[i]) - 97] += 1"
"from sys import stdin, stdout

if __name__ == '__main__':
    for _ in range(int(stdin.readline())):
        n = int(stdin.readline())
        line = stdin.readline()

        ans, cnt = 0, [0] * 30
        for i in range(n):
            cnt[ord(line[i]) - 97] += 1

        if n & 1 or max(cnt) > n >> 1:
            ans = -1
        else:
            cnt = [0] * 30
            for i in range(n >> 1):
                if line[i] == line[n - i - 1]:
                    {{completion}}
            ans = max(max(cnt), (ans + 1) >> 1)
        stdout.write(str(ans) + '\n')
","ans += 1
                    cnt[ord(line[i]) - 97] += 1","cnt[ord(line[i]) - 97] += 1
            ans += 1"
"def s():
      n = int(input())
      if n%2  :{{completion}}
      a = [0]*n
      p,im=n,n-1

      for i in range(0,n,2):
          a[i] = im
          a[i+1]=p
          im,p=im-2,p-2
      return a


      
for q in range(int(input())):
    print(*s())
          
    
",return [-1 + 2*(n==1)],"if n%2:
    a = [0]*n
    p,im=n,n-1

    for i in range(0,n,2):
        a[i] = im
        a[i+1]=p
        im,p=im-2,p-2
else:
    a = [0]*n
    p,im=n,n-1

    for i in range(0,n,2):
        a[i] = im
        a[i+1]=p
        im,p=im-1,p"
"I = lambda: map(int,input().split())
for _ in range(int(input())):
    {{completion}}","n,m= I();b = list(I())
    b.sort()
    print(max(b[-2]-b[0],b[-1]-b[1])*(min(n,m)-1)+(b[-1]-b[0])*(n*m-min(n,m)))","n,m = map(int,input().split())
    l = list(map(int,input().split()))
    low = min(l)
    high = max(l)
    l.remove(high)
    l.remove(low)
    low2 = min(l)
    high2 = max(l)
    
    indl = min(n,m)
    indh = max(n,m)
 
 
    jin = indl*(indh-1)*(high-low)
    jin = jin + (indl-1"
"t = int(input())
for i in range(t):
    h,w = map(int,input().split())
    if h > w: {{completion}}
    a = list(map(int,input().split()))
    a.sort()
    x = abs(a[h*w-1]-a[0])
    ans = x*h*(w-1)+(x-min(a[h*w-1]-a[h*w-2],a[1]-a[0]))*(h-1)
    print(ans)

 	 	        												  					","h,w = w,h","n,m= I();b = list(I())
    b.sort()
    print(max(b[-2]-b[0],b[-1]-b[1])*(min(n,m)-1)+(b[-1]-b[0])*(n*m-min(n,m)))"
"t = int(input())
for _ in range(t):
    {{completion}}
    ","n,m = map(int,input().split())
    l = list(map(int,input().split()))
    low = min(l)
    high = max(l)
    l.remove(high)
    l.remove(low)
    low2 = min(l)
    high2 = max(l)
    
    indl = min(n,m)
    indh = max(n,m)
 
 
    jin = indl*(indh-1)*(high-low)
    jin = jin + (indl-1)*(high2-low)
    
    rm = indl*(indh-1)*(high-low)
    rm = rm + (indl-1)*(high-low2)
    print(max(rm,jin))","n,m= I();b = list(I())
    b.sort()
    print(max(b[-2]-b[0],b[-1]-b[1])*(min(n,m)-1)+(b[-1]-b[0])*(n*m-min(n,m)))"
"import sys

input = sys.stdin.buffer.readline

from math import gcd

for _ in range(int(input())):
    n = int(input())
    a = list(map(int, input().split()))

    ans = 0

    for i in range(n//2):
        {{completion}}

    print(ans)
","ans = gcd(ans, a[i]-a[n-1-i])","ans = gcd(ans, abs(a[i] - a[n - i - 1]))"
"from sys import stdin, stdout
from math import gcd

for _ in range(int(stdin.buffer.readline())):
    n = int(stdin.buffer.readline())
    nums = list(map(int, stdin.buffer.readline().split()))

    answer = 0
    
    for index in range(n >> 1):
        {{completion}}

    stdout.write(f""{answer}\n"")
","answer = gcd(answer, abs(nums[index] - nums[n - 1 - index]))","answer = gcd(answer, nums[index] - nums[n - 1 - index])"
"from math import gcd
import sys
input = sys.stdin.readline

for _ in range(int(input())):
    n = int(input())
    A = list(map(int, input().split()))
    ans = 0
    for i in range(n // 2):
        if A[i] == A[n - i - 1]:
            continue
        if ans == 0:
            ans = abs(A[i] - A[n - i - 1])
        else:
            {{completion}}
    print(ans)
","ans = gcd(ans, abs(A[i] - A[n - i - 1]))","ans = gcd(ans, A[i] - A[n - 1 - i])"
"for _ in range(int(input())):
    ans = 0
    done = -1
    for i in range(4):
        a, b = map(int, input().split())
        if(done==-1):
            if (i == 0):
                ans = a
            elif (ans != a):
                {{completion}}
    print(ans*ans)
","ans -= a
                done = 1","ans = 0
done = -1
for i in range(4):
    a, b = map(int, input().split())
    if(done==-1):
        if (i == 0):
            ans = a
        elif (ans != a):
            done = i"
"
n=int(input())
l=[]
for i in range(n):
    t=[]
    for i in range(4):
        {{completion}}
    x=max(abs(t[0][0]-t[1][0]),abs(t[1][0]-t[2][0]))
    y=max(abs(t[0][1]-t[1][1]),abs(t[1][1]-t[2][1]))
    l.append(x*y)
for i in l:
    print(i)




    ","t.append(list(map(int,input().split())))","x=max(abs(t[0][0]-t[1][0]),abs(t[1][0]-t[2][0]))
y=max(abs(t[0][1]-t[1][1]),abs(t[1][1]-t[2][1]))
l.append(x*y)"
"
nbc=int(input())
for i in range (nbc):
    a1,a2=map(int,input().split())
    b1,b2=map(int,input().split())
    c1,c2=map(int,input().split())
    d1,d2=map(int,input().split())
    if a1==b1:
        s=((a2-b2)**2)
    elif a1==c1:
        {{completion}}
    elif a1==d1:
        s=((a2-d2)**2)
    print(s)",s=((a2-c2)**2),s=((a2-c2)**2)
"def solve():
    t = int(input())
    for _ in range(t):
        n = int(input())
        a = list(map(int, input().split()))
        b = list(map(int, input().split()))
        res = 0
        nums = [[] for _ in range(n * 2 + 1)]
        f = [0] * (n * 2 + 1)
        for i in range(n):
            nums[a[i]].append(b[i])
        for i in range(1, int((n * 2) ** 0.5 + 10 ** -6) + 1):
            for j in nums[i]:
                if i * i - j > 0:
                    res += f[i * i - j]
                f[j] += 1
            for k in range(i + 1, (n * 2) // i + 1):
                for j in nums[k]:
                    if i * k - j > 0:
                        {{completion}}
            for j in nums[i]:
                f[j] -= 1
        print(res)

solve()
",res += f[i * k - j],res += f[i * i - j]
"# https://codeforces.com/contest/1831

import sys
from math import isqrt

input = lambda: sys.stdin.readline().rstrip()  # faster!


def solve_case():
    n = int(input())  # 2 <= n <= 2*10**5
    a = list(map(int, input().split()))  # 1 <= a[i] <= n
    b = list(map(int, input().split()))  # 1 <= b[i] <= n

    mem = [[] for _ in range(n + 1)]
    for va, vb in zip(a, b):
        mem[va] += [vb]

    ans = 0
    cnt = [0] * (n + 1)

    for va1 in range(1, isqrt(2 * n) + 1):

        if not mem[va1]:
            continue

        for vb1 in mem[va1]:
            vb2 = va1 * va1 - vb1
            if 1 <= vb2 <= n:
                ans += cnt[vb2]
            cnt[vb1] += 1

        for va2 in range(va1 + 1, n + 1):
            if va1 * va2 > 2 * n:
                break
            for vb2 in mem[va2]:
                vb1 = va1 * va2 - vb2
                if 1 <= vb1 <= n:
                    {{completion}}

        # undo count (faster than recreating array)
        for vb1 in mem[va1]:
            cnt[vb1] -= 1

    print(ans)


for _ in range(int(input())):
    solve_case()
",ans += cnt[vb1],ans += cnt[vb2]
"import sys
input = sys.stdin.readline

from math import gcd, isqrt
# import bisect #-->For bisect.bisect_left=lower_bound and bisect_right=upper_bound)

t = 1
t = int(input())
for _ in range(t):
    n = int(input())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))

    D = [[] for _ in range(n+1)]
    for i in range(n):
        D[a[i]].append(b[i])

    mb = max(b)*2
    nm = isqrt(mb)
    ans = 0
    f = [0]*(n+1)
    for i in range(1, nm + 1):
        for j in D[i]:
            x = i * i - j
            if (0 < x <= n):
                ans += f[x]
            f[j] += 1
        for j in range(i+1, min(mb//i,n)+1):
            for k in D[j]:
                x = i * j - k
                if (0 < x <= n):
                    {{completion}}
        for j in D[i]:
            f[j] -= 1
    print(ans)",ans += f[x],ans += f[x]
"from sys import stdin
input = stdin.readline


MD = 10**9 + 7


f = [[i & j for j in range(64)] for i in range(64)]

for _ in range(int(input())):
    n, k = map(int, input().split())
    dp = [0]*64
    for i in map(int, input().split()):
        for j in range(64):
            {{completion}}
        dp[i] += 1
    ans = 0
    for i in range(64):
        if bin(i).count(""1"") == k:
            ans += dp[i]
    print(ans % MD)","dp[f[j][i]] += dp[j]
            dp[f[j][i]] %= MD","dp[j & lst[i]] += dp[j]
                dp[j & lst[i]] %= 1000000007"
"import sys

R = lambda:map(int, sys.stdin.readline().rstrip().split())

def find(lst):
    ans = 0
    for i in range(len(lst)):
        if lst[i] == '1':
            ans += 1
    return ans
    
def solve():
    n, k = R()
    lst = list(R())
    arr = set(lst)
    dp = [0] * 64
    for i in range(n):
        for j in range(64):
            if dp[j] != 0:
                {{completion}}
        dp[lst[i]] += 1
    ans = 0
    for i in range(64):
        now = i
        cntOne = 0
        while now:
            cntOne += now & 1
            now >>= 1
        if cntOne == k:
            ans += dp[i]
            ans %= 1000000007
    print(ans)

t ,= R()
for _ in range(t):
    solve()
","dp[j & lst[i]] += dp[j]
                dp[j & lst[i]] %= 1000000007","dp[f[j][i]] += dp[j]
            dp[f[j][i]] %= MD"
"import sys

input = lambda: sys.stdin.readline().rstrip()

MOD = 10 ** 9 + 7
d_cnt = [0] * 64  # d_cnt[i] -- кол-во единиц в двоичном представлении числа i

for i in range(1, 64):
    d_cnt[i] = d_cnt[i // 2] + (i & 1)


def solution(n, k, a):
    cnt = [0] * 64
    for i in a:
        cnt[i] += 1

    for j in range(6):
        bit = 1 << j
        for i in range(1 << 6):
            if i & bit == 0:
                {{completion}}

    dp = [2 ** cnt[i] for i in range(64)]

    for j in range(6):
        bit = 1 << j
        for i in range(1 << 6):
            if i & bit == 0:
                dp[i] -= dp[i | bit]

    res = sum([dp[i] for i in range(64) if d_cnt[i] == k])
    if k == 6:
        res -= 1

    return res % MOD


for _ in range(int(input())):
    n, k = [int(i) for i in input().split()]
    a = [int(i) for i in input().split()]
    print(solution(n, k, a))
",cnt[i] += cnt[i | bit],"dp[f[j][i]] += dp[j]
            dp[f[j][i]] %= MOD"
"import sys
input = sys.stdin.readline

for _ in range(int(input())):
    n = int(input())
    q = (n+1)*n//2
    if n == 1:
        print(1)
        continue
    if q % n == n//2 and n % 2 == 0:
        d = [n, n-1]
        for i in range(1, (n-2)//2+1):
            {{completion}}
        print(' '.join(map(str, d)))
    else:
        print(-1)","d.append(i*2)
            d.append(d[-2]-2)","print(n//2, n-1)"
"n_val, a_val, x_val, y_val, m_val, k_val = map(int, input().split())
mod = 998244353
dp = [0] * k_val
pref = 0
res = 0
for idx in range(n_val):
    for i in range(k_val - 1, 0, -1):
        {{completion}}
    pref += a_val
    pref %= mod
    dp[0] += pref
    for i in range(k_val):
        dp[i] %= mod
    res ^= dp[-1] * (idx + 1)
    a_val = (a_val * x_val + y_val) % m_val
print(res)
",dp[i] += dp[i - 1],"dp[i] += dp[i - 1]
        dp[i] %= mod"
"import sys
import collections
#import math
#import bisect
#import heapq
#import itertools
#import functools
input = sys.stdin.readline

n, a, x, y, m, k = map(int, input().split())
M = 998244353
arr = [a] * n
for i in range(1, n):
    arr[i] = (arr[i-1] * x + y) % m

def pre(ls):
    for i in range(1, n):
        {{completion}}

for _ in range(k + 1):
    pre(arr)
res = 0
for i in range(n-k+1):
    res ^= arr[i] * (i + k)
print(res)
",ls[i] = (ls[i] + ls[i-1]) % M,"for i in range(1, k+1):
    for j in range(i, n+1):
        arr[j] += arr[j-i]
        arr[j] %= M"
"from sys import stdin
input = stdin.readline

MOD = 998244353

from math import *
from collections import Counter, deque

n,a,x,y,m,k = map(int,input().split())

B = [0] * (k+1)

res = 0
for i in range(k, n+1):
    B[0] += a
    B[0] %= MOD

    for j in range(1, k+1):
        {{completion}}

    res ^= B[-1] * i

    # new a value
    a = (a*x + y) % m
    
print(res)","B[j] += B[j-1]
        B[j] %= MOD",B[j] = (B[j-1] + B[j]) % MOD
"n, q = map(int, input().split())
a = list(map(int, input().split()))
a.sort()

pr = [10**9 for i in range(n + 1)]
for i in range(n):
	pr[i + 1] = min(pr[i], a[i] - i)

s = sum(a) - n * (n - 1) // 2

ans = []
for k in map(int, input().split()):
	if k < n:
		ans.append(min(pr[k] + k, a[k]))
		continue
	if k % 2 == n % 2:
		ns = s - pr[n] * n
		ans.append(pr[n] + k - (max(0, (k - n) // 2 - ns) + n - 1) // n)
	else:
		{{completion}}

print(*ans)","nmn = min(pr[n - 1], a[n - 1] - k)
		ns = (s + (n - 1) - k) - nmn * n
		ans.append(nmn + k - (max(0, (k - (n - 1)) // 2 - ns) + n - 1) // n)","new_min = min(pr[n - 1], a[n - 1] - k)
ns = (s + (n - 1) - k) - new_min * n
ans.append(new_min + k - (max(0, (k - (n - 1)) // 2 - ns) + n - 1) // n)"
"from sys import stdin
input = stdin.buffer.readline
from math import ceil

n, _ = map(int, input().split())
a = sorted(map(int, input().split()))
mins = [0]
sum_ = a[0]
for i in range(1, n):
    if a[i] - i <= a[mins[-1]] - mins[-1]:
        mins.append(i)
    else:
        mins.append(mins[-1])
    sum_ += a[i] - i
sum_ -= a[n - 1] - (n - 1)

ans = []
for k in map(int, input().split()):
    if k <= n:
        m = a[mins[k - 1]] + k - mins[k - 1]
        if k != n:
            m = min(m, a[k])
    else:
        left = ( k - n + ((k - n) % 2)) // 2
        m = a[mins[n - 1]] + k - mins[n - 1]
        if (k - n) % 2:
            {{completion}}
        left -= sum_ + k * (n - 1) - m * (n - 1)
        left -= a[n - 1] - m
        if (k - n) % 2 == 0:
            left -= k - (n - 1)
        if left > 0:
            m -= ceil(left / n)
    ans.append(m)
print(*ans)
 		 			  			 	 	 	   	 	  	 	","m = min(m, a[n - 1])","m = a[mins[n - 1]] + k - mins[n - 1]
if (k - n) % 2:
    m = min(m, a[k])
left = (k - n + ((k - n) % 2)) // 2
left -= sum_ + k * (n - 1) - m * (n - 1)
left -= a[n - 1] - m
if (k - n) % 2 == 0:
    left -= k - (n"
"import sys 
input = sys.stdin.readline 
def solve():
    n, q = map(int, input().split())
    ls = sorted( list ( map(int, input().split() ) ) )
    ks = list(map(int,input().split()))
    mi,pre,ans,sm = 10e9,[10e9],[],0
    for i in range(n):
    	mi = min(mi,ls[i]-i)
    	pre.append(mi)
    	sm+=ls[i]-i
    
    for i in ks :
    	if i < n:
    		ans.append(pre[i+1]+i)
    		continue
    	if i % 2 == n % 2:
    		hsla  = sm - pre[n] * n
    		ans.append(pre[n] + i - (max(0, (i - n) // 2 - hsla) + n - 1) // n)
    	else:
    		{{completion}}
    print(*ans)
#for i in range(int(input())):
solve()","mi = min(pre[n - 1], ls[n - 1] - i)
    		hsla = (sm + (n - 1) - i) - mi * n
    		ans.append(mi + i - (max(0, (i - (n - 1)) // 2 - hsla) + n - 1) // n)","new_min = min(pre[n - 1], ls[n - 1] - i)
        hsla = (sm + (n - 1) - i) - new_min * n
        ans.append(new_min + i - (max(0, (i - (n - 1)) // 2 - hsla) + n - 1) // n)"
"# -*- coding: utf-8 -*-
""""""
Created on Fri Dec  1 17:46:36 2023

@author: Lenovo
""""""

from functools import lru_cache
@lru_cache(None)

def dfs(n,m):
    if n==m:
        {{completion}}
    if n%3!=0 or n<m:
        return 0
    return dfs(n//3,m)+dfs(n//3*2,m)

t=int(input())
for i in range(t):
    n,m=map(int,input().split())
    if n==m:
        print(""YES"")
        continue
    elif n<m:
        print(""NO"")
        continue
    else:
        flag=dfs(n,m)
        print(""YES"" if flag else ""NO"")",return 1,r -= 1
"for i in range(int(input())):
    n, k = map(int, input().split())
    if k <= n:
        x = [n]
        while(n%3 == 0):
            x.append(n//3)
            n = n//3
        if k % x[-1] == 0:
            r = len(x)
            for i in range(len(x)-1,-1,-1):
                if k%x[i] == 0:
                    {{completion}}
            t = k//x[r]
            for i in range(r+1):
                if t == 2**i:
                    print(""yes"")
                    break
            else:
                print(""no"")
        else:
            print(""no"")
    else:
        print(""no"")",r -= 1,return 1
"import sys

sys.setrecursionlimit(10**8)

INF = float(""inf"")

input = sys.stdin.readline
def read_str(): return input().rstrip()
def read_int(): return int(input().rstrip())
def read_lst(): return list(map(int, input().rstrip().split()))
def read_map(): return map(int, input().rstrip().split())
def ok(b): print(""YES"" if b else ""NO"")

mem = {}
def ck(n, m):
    if n == m:
        return True
    elif n % 3 != 0:
        {{completion}}
    elif (n, m) in mem:
        return mem[(n, m)]
    else:
        result = ck(n // 3, m) or ck(n // 3 * 2, m)
        mem[(n, m)] = result
        return result

def solve():
    n, m = read_map()
    ok(ck(n, m))

if __name__ == ""__main__"":
    for _ in range(read_int()):
        solve()
",return False,r -= 1
"n, q = map(int, input().split())
a = list(map(int, input().split()))
a.sort()
prefix = [10**9 for i in range(n + 1)]
for i in range(n):
    prefix[i + 1] = min(prefix[i], a[i] - i)
s = sum(a) - n * (n - 1) // 2
result = []
for k in map(int, input().split()):
    if k < n:
        result.append(prefix[k + 1] + k)
        continue
    if k % 2 == n % 2:
        new_sum = s - prefix[n] * n
        result.append(prefix[n] + k - (max(0, (k - n) // 2 - new_sum) + n - 1) // n)
    else:
        {{completion}}
print(*result)
","new_min = min(prefix[n - 1], a[n - 1] - k)
        new_sum = (s + (n - 1) - k) - new_min * n
        result.append(new_min + k - (max(0, (k - (n - 1)) // 2 - new_sum) + n - 1) // n)","new_sum = s - prefix[n - 1] * (n - 1)
result.append(prefix[n - 1] + k - (max(0, (k - (n - 1)) // 2 - new_sum) + n - 1) // n)"
"import os 
if os.path.exists('in.txt'):
    file = open('in.txt') 
    input =  file.readline 
from itertools import *  
from functools import * 
from heapq import *
from collections import * 
import math
inf = 1<<63
readi = lambda: int(input()) 
readis = lambda: list(map(int,input().split()))
reads = lambda: input().rstrip() 
readss = lambda: input().split()  
def solution(): 
    n , m = readis()  
    a = readis() 
    q = readis() 
    R = [] 
    if n == 1:
        for x in q:
            if x & 1 : R.append(a[0]+(x+1)//2) 
            else : {{completion}}  
        print(*R)
        return 
    a.sort() 
    s = sum(a) 
    mi0 = [inf] * (n+1)
    for i in range(n-1,-1,-1):
        mi0[i] = min(mi0[i+1],a[i])
    mi = [inf] * n  
    for i in range(n):
        a[i] -= i 
        mi[i] = min(a[i],mi[i-1])  
    for x in q:
        if x <= n : 
            res = min(mi[x-1] + x ,mi0[x])
        elif (x-n)&1:  
            d = (x-n+1)//2 
            res = min(mi[-2]+x,a[-1]+n-1,math.floor((s+(x+x-n+2)*(n-1)//2-d)/n))
        else : 
            d = (x-n) // 2 
            res = min(mi[-1]+x,math.floor((s+(x+x-n+1)*n//2-d)/n)) 
        R.append(res) 
    print(*R)
for i in range(1):
    solution() 
",R.append(a[0]-x//2),"mi0 = [inf] * (n+1)
    for i in range(n-1,-1,-1):
        mi0[i] = min(mi0[i+1],a[i])"
"n, q = map(int, input().split())

a = list(map(int, input().split()))
a = sorted(a)
ar_k = list(map(int, input().split()))
s = ''

prev_min = [0]
id_ = 0

for i in range(1, n):
    if a[i] + n - i < a[id_] + n - id_:
        id_ = i
    prev_min.append(id_)

sum_prev = sum(a)

for x in ar_k:
    if x < n:
        ans = min(a[prev_min[x - 1]] + x - prev_min[x - 1], a[x])

    else:
        if (x - n) % 2:
            sum_ = sum_prev + (x + (x - (n - 1) + 1)) * (n - 1) // 2
            mini = a[prev_min[n - 1 - 1]] + x - prev_min[n - 1 - 1]
            mini = min(mini, a[-1])
            k = x - (n - 1)
        else:
            {{completion}}

        ans = (sum_ - k // 2) // n
        ans = min(mini, ans)
    s += str(ans) + ' '

print(s)
","sum_ = sum_prev + (x + (x - n + 1)) * n // 2
            mini = a[prev_min[n - 1]] + x - prev_min[n - 1]
            k = x - n","sum_ = sum_prev + (x + (x - (n - 1) + 1)) * (n - 1) // 2
mini = a[prev_min[n - 1 - 1]] + x - prev_min[n - 1 - 1]
mini = min(mini, a[-1])
k = x - (n - 1)"
"import sys

input = sys.stdin.readline

for _ in range(int(input())):
    n, m = map(int, input().split())
    A = [list(map(int, input().split())) for _ in range(n)]
    best = 0
    for i in range(n):
        for j in range(m):
            if A[i][j]:
                current = A[i][j]
                A[i][j] = 0
                q = [(i, j)]
                while q:
                    x, y = q.pop()
                    for dx, dy in (x + 1, y), (x - 1, y), (x, y - 1), (x, y + 1):
                        if 0 <= dx < n and 0 <= dy < m and A[dx][dy]:
                            {{completion}}
                best = max(best, current)
    print(best)
","current += A[dx][dy]
                            A[dx][dy] = 0
                            q.append((dx, dy))","q.append((dx, dy))
A[dx][dy] = 0
q.append((dx, dy))"
"import sys
rln=sys.stdin.buffer.readline
rl=lambda:rln().rstrip(b'\r\n').rstrip(b'\n')
ri=lambda:int(rln())
rif=lambda:[*map(int,rln().split())]
rt=lambda:rl().decode()
rtf=lambda:rln().decode().split()
inf=float('inf')
dir4=[(-1,0),(0,1),(1,0),(0,-1)]
dir8=[(-1,-1),(0,-1),(1,-1),(-1,0),(1,0),(-1,1),(0,1),(1,1)]
YES,NO,Yes,No,yes,no='YES','NO','Yes','No','yes','no'
 
def solve():
  m,n=rif()
  g=[rif() for _ in range(m)]
 
  def bfs(si,sj):
    vol=g[si][sj]
    que=[(si,sj)]
    g[si][sj]=0
    for i,j in que:
      for di,dj in dir4:
        ni,nj=i+di,j+dj
        if not (0<=ni<m and 0<=nj<n):
          {{completion}}
        if g[ni][nj]==0:
          continue
        vol+=g[ni][nj]
        que.append((ni,nj))
        g[ni][nj]=0
    return vol
 
  ans=0
  for i in range(m):
    for j in range(n):
      if g[i][j]==0:
        continue
      ans=max(ans,bfs(i,j))
  print(ans)
 
t=ri()
for _ in range(t):
  solve()",continue,"vol+=g[ni][nj]
                            g[ni][nj]=0
                            que.append((ni,nj))"
"#!/usr/bin/python3

import bisect
import collections
import heapq
import io
import math
import os
import random
import sys

LO = 'abcdefghijklmnopqrstuvwxyz'
# Mod = 1000000007
Mod = 998244353

def gcd(x, y):
    while y:
        x, y = y, x % y
    return x

def euk(x, y):
    if y:
        p, q, g = euk(y, x % y)
        return (q, p - (x // y) * q, g)
    return (1, 0, x)

# _input = lambda: io.BytesIO(os.read(0, os.fstat(0).st_size)).readline().decode()
_input = lambda: sys.stdin.buffer.readline().strip().decode()

T = 1
T = int(_input())
for _ in range(T):
  n, m = map(int, _input().split())
  g = [list(map(int, _input().split())) for _ in range(n)]
  def go(r, c):
    if not g[r][c]:
      return 0
    q = [(r, c)]
    s = g[r][c]
    g[r][c] = 0
    for r, c in q:
      for r1, c1 in ((r - 1, c), (r, c + 1), (r + 1, c), (r, c - 1)):
        if 0 <= r1 < n and 0 <= c1 < m and g[r1][c1]:
          {{completion}}
    return s
  a = 0
  for r in range(n):
    for c in range(m):
      a = max(a, go(r, c))
  print(a)","s += g[r1][c1]
          g[r1][c1] = 0
          q.append((r1, c1))","for r1, c1 in ((r - 1, c), (r, c + 1), (r + 1, c), (r, c - 1)):
        if 0 <= r1 < n and 0 <= c1 < m and g[r1][c1]:
          g[r1][c1] = 0
          q.append((r1, c1))"
"import sys
input=sys.stdin.readline
can_value=[0]*1000001
for i in range(1,1415):
    last_value_in_last_row=i*(i-1)//2
    for j in range(1,i+1):
        current_can=last_value_in_last_row+j
        if current_can>10**6:
            break
        if j==1:
            can_value[current_can]=can_value[current_can-i+1]# right
        elif j==i:
            {{completion}}
        else:
            can_value[current_can]=can_value[current_can-i+1]+can_value[current_can-i]-can_value[current_can -2*i+2]
        can_value[current_can]+=current_can**2
for _ in range(int(input())):
    print(can_value[int(input())])","can_value[current_can]=can_value[current_can - i]# left","a[j][i - j] = (a[j - 1][i - j] + a[j][i - j - 1] - a[j - 1][i - j - 1] + curr * curr)
        ans[curr] = a[j][i - j]
        curr += 1"
"import sys
input = lambda: sys.stdin.readline()
fprint = lambda *args: print(*args, flush=True)
ii = lambda: int(input())
si = lambda: input().strip()
mint = lambda: map(int, input().split())
lint = lambda: list(mint())
from math import sqrt, ceil
T = ii()

for _ in range(T):
    n = ii()
    layer = ceil(sqrt(n * 2 + 0.25) - 0.5)
    ans = 0
    left, right = n, n
    for l in range(layer, 0, -1):
        {{completion}}
    print(ans)","ans += (right * (right + 1) * (right * 2 + 1) - left * (left - 1) * (left * 2 - 1)) // 6
        left = (l-1) * (l-2) // 2 + max(left - l * (l-1) // 2 - 1, 1)
        right = (l-1) * (l-2) // 2 + min(right - l * (l-1) // 2, l - 1)","ans += (left + right) * (left + right + 1) // 2
left -= 1
right += 1
for l in range(layer - 1, 0, -1):
    for i in range(l):
        ans += a[i][l - i] * 2
    left -= 1
    right += 1
print(ans)"
"import sys


def input():
    return sys.stdin.readline().strip()


ans = [0] * 2000007
a = [[0] * 1500 for _ in range(1500)]
curr = 1
for i in range(1, 1500):
    for j in range(i - 1, 0, -1):
        {{completion}}
for _ in range(int(input())):
    n = int(input())
    print(ans[n])
","a[j][i - j] = (a[j - 1][i - j] + a[j][i - j - 1] - a[j - 1][i - j - 1] + curr * curr)
        ans[curr] = a[j][i - j]
        curr += 1","for i in range(1, 1500):
    for j in range(i - 1, 0, -1):
        a[i][j] = curr
        curr += 1
ans[1] = 1
for i in range(2, 2000007):
    ans[i] = ans[i - 1]
    for j in range(1, 1500):
        if i - j * j >= 1:
            ans[i] += a[j]["
"import sys
input = sys.stdin.readline


def f(w):
    d = [0]*(2*n+1)
    a, c = 0, 0
    for i in range(n):
        if w[i] == a:
            c += 1
        else:
            {{completion}}
    d[a] = max(d[a], c)
    return d


for _ in range(int(input())):
    n = int(input())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))
    a1 = f(a)
    a2 = f(b)
    c = max(a1[i]+a2[i] for i in range(2*n+1))
    print(c)
","d[a] = max(d[a], c)
            c = 1
            a = w[i]",c += 1
"import sys

t=int(sys.stdin.readline())
for _ in range(t):
    n=int(sys.stdin.readline())
    a=list(map(int,sys.stdin.readline().split()))
    b=list(map(int,sys.stdin.readline().split()))

    la=[0]*(2*n+10)
    lb=[0]*(2*n+10)

    cnt=1
    for i in range(1,n):
        if a[i]==a[i-1]:
            cnt+=1
        else:
            {{completion}}
    la[a[n-1]]=max(la[a[n-1]],cnt)

    cnt=1
    for i in range(1,n):
        if b[i]==b[i-1]:
            cnt+=1
        else:
            lb[b[i-1]]=max(lb[b[i-1]],cnt)
            cnt=1
    lb[b[n-1]]=max(lb[b[n-1]],cnt)

    ans=0
    for i in range(1,2*n+1):
        ans=max(ans,la[i]+lb[i])
    print(ans)","la[a[i-1]]=max(la[a[i-1]],cnt)
            cnt=1","d[a] = max(d[a], c)
            c = 1
            a = w[i]"
"import sys

input = sys.stdin.readline

for _ in range(int(input())):
    n = int(input())
    A = list(map(int, input().split()))
    B = list(map(int, input().split()))
    cnt_r1 = [0] * (n * 2 + 1)
    cnt_r2 = [0] * (n * 2 + 1)

    prev = -1
    cnt = 0
    for x in A:
        if x == prev:
            cnt += 1
        else:
            {{completion}}
        cnt_r1[x] = max(cnt_r1[x], cnt)

    prev = -1
    cnt = 0
    for x in B:
        if x == prev:
            cnt += 1
        else:
            prev = x
            cnt = 1
        cnt_r2[x] = max(cnt_r2[x], cnt)

    print(max(x + y for x, y in zip(cnt_r1, cnt_r2)))","prev = x
            cnt = 1","cnt_r1[x] = max(cnt_r1[x], cnt)

    prev = -1
    cnt = 0
    for x in B:
        if x == prev:
            cnt += 1
        else:
            prev = x
            cnt = 1
        cnt_r2[x] = max(cnt_r2[x], cnt)

    print(max(x + y for x, y in zip(cnt_r1, cnt_r2)))"
"import sys
input = sys.stdin.readline

for _ in range(int(input())):
    n = int(input())
    d = [[] for i in range(n+1)]
    for i in range(n-1):
        a, b = map(int, input().split())
        d[a].append((b, i))
        d[b].append((a, i))
    x = [(0, 0) for i in range(n+1)]
    q = [(1, -1)]
    while q:
        a, b = q.pop()
        for i, j in d[a]:
            if i != b:
                if j < x[a][0]:
                    x[i] = (j, x[a][1]+1)
                else:
                    {{completion}}
                q.append((i, a))
    print(max(i[1] for i in x)+1)
","x[i] = (j, x[a][1])","x[i] = (j, x[a][1]+1)"
"from sys import stdin,stdout

for _ in range(int(stdin.readline())):
    n = int(stdin.readline())
    adjList = [[] for _ in range(n)];
    for i in range(n - 1):
        u,v = map(lambda x: int(x) - 1, stdin.readline().split())
        adjList[u].append((v,i + 1))
        adjList[v].append((u,i + 1))
    visited = [-1 for _ in range(n)]; visited[0] = 1
    entry = [-1 for _ in range(n)]
    frontier = [0]; ans = 0
    while frontier:
        immd = []
        for u in frontier:
            for v,t in adjList[u]:
                if visited[v] == -1:
                    if t > entry[u]:
                        visited[v] = visited[u]
                    else:
                        {{completion}}
                    entry[v] = t
                    immd.append(v)
                    ans = max(ans,visited[v])
        frontier = immd
    stdout.write(f""{ans}\n"")
    
    
    
        
    
",visited[v] = visited[u] + 1,visited[v] = visited[u] + 1
"import sys
from collections import deque
input = sys.stdin.readline

def solve():
    n = int(input())
    G = [[] for _ in range(n)]
    for i in range(n - 1):
        u, v = [int(x) - 1 for x in input().split()]
        G[u].append((i, v))
        G[v].append((i, u))
    
    drawn = [False] * n   
    q = deque([(-1, 0, 1)])
    ans = 0
    while q:
        e, u, d = q.popleft()
        if drawn[u]:
            continue
        
        drawn[u] = True
        ans = d
        for ne, v in G[u]:
            if drawn[v]:
                continue
            if ne > e:
                q.appendleft((ne, v, d))
            else:
                {{completion}}

    return ans

T = int(input())
out = [solve() for _ in range(T)]
print(""\n"".join(map(str, out)))","q.append((ne, v, d + 1))","q.append((ne, v, d+1))"
for s in[*open(0)][1:]:{{completion}},"print((len(s)-2,-1)[len({*s})<3])","print((len(s)-2,-1)[len({*s})<3])"
"test = int(input())

for _ in range(test):

    s = input()

    if len(set(s)) <= 1:
        {{completion}}
    
    l = len(s)

    print(l - 1)
           ","print(-1)
        continue","print((len(s)-2,-1)[len({*s})<3])"
"
for x in[*open(0)][1:]:{{completion}}","print((len(x)-2,-1)[len({*x})<3])","print((len(x)-2,-1)[len({*x})<3])"
"import sys
ip=sys.stdin.readline
R=lambda:list(map(int,ip().split()))
for _ in range(int(ip())):
    n=int(ip()); a=R(); dic=[0]*(n+1); t=0; ans,res=0,0
    for i in range(1,n+1):
        if not dic[i]:
            tmp=t; j=i
            while not dic[j]: dic[j]=t; t+=1; j=a[j-1]
            if dic[j]<tmp: continue
            if t-dic[j]==2: ans+=1
            else: {{completion}}
    print(res+int(ans>0), res+ans)
",res+=1,c += 1
"import sys

input = sys.stdin.buffer.readline

infinity = 10 ** 10

for _ in range(int(input())) :
    n = int(input())
    a = [int(x) - 1 for x in input().split()]

    mentioned = [False] * n
    for x in a :
        mentioned[x] = True

    minimum = 0
    maximum = 0
    visited = [0] * n
    once = False
    for i in range(n) :
        if mentioned[i]:
            continue
        j = i
        while visited[j] == 0 :
            visited[j] = 1
            j = a[j]

        if visited[j] == 1 :
            maximum += 1
            once = True

        j = i
        while visited[j] == 1 :
            visited[j] = 2
            j = a[j]

    for i in range(n) :
        if visited[i] == 2 :
            continue

        j = i
        while visited[j] == 0 :
            visited[j] = 2
            j = a[j]

        if a[a[j]] != j :
            minimum += 1
        else :
            {{completion}}

        maximum += 1

    print(minimum + once, maximum)
",once = True,maximum += 1
"import sys

input = sys.stdin.readline


############ ---- Input Functions ---- ############
def inp():
    return int(input())


def inlt():
    return list(map(int, input().split()))


def insr():
    s = input()
    return list(s[: len(s) - 1])


def invr():
    return map(int, input().split())


for _ in range(inp()):
    n = inp()
    a = inlt()
    dic = [0 for _ in range(n)]
    c = b = 0
    t = 0
    for i in range(n):
        if not dic[i]:
            temp = t
            j = i
            while not dic[j]:
                dic[j] = t
                t += 1
                j = a[j] - 1
            if dic[j] < temp:
                continue
            if t - dic[j] == 2:
                b += 1
            else:
                {{completion}}
    print(c + min(b, 1), c + b)
",c += 1,res += 1
"
for s in open(0).readlines()[2::2]:

    a = s.split()


    n = len(a)
    b = [0] * 101
    r = i = -1


    for x in a:
        {{completion}}


    for x in b:
        i += 1
        n -= x
        r = (r, i)[n == i]


    print(r)
",b[int(x)] += 1,b[i] += 1
"for _ in range(int(input())):
    n = int(input())
    res = n
    a =sorted([int(i)for i in input().split()])
    if a[-1] == 0:print(0)
    else:
      for i in range(n):
            
            if a[i] == n-i:{{completion}}
            if a[i] > n-i:res = n-i;break
      if a[-1] == 0:print(0)
      else:print(res)
  
      
",res = -1;break,a[i] == n-i
"n = int(input())
for i in range(n):
    a = int(input())
    b = [0] * (a + 10)
    res = list(map(int,input().split()))
    for q in res:
        b[q] += 1


    flag = 0
    sum1 = 0
    for j in range(a):
        sum1 += b[j]
        if a - sum1 == j:
            {{completion}}
    if flag == 0:
        print(""-1"")
","print(j)
            flag = 1
            break","if sum1 == a:
    flag = 1"
"import sys

input = sys.stdin.buffer.readline

MOD = 10**9 + 7

for _ in range(int(input())):
    n = int(input())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))

    a.sort()
    b.sort()

    ans = 1
    cnt = 0
    for i in range(n-1, -1, -1):
        while a and a[-1] > b[i]:
            {{completion}}

        ans = (ans * cnt) % MOD
        cnt -= 1

    print(ans)
","cnt += 1
            a.pop()",cnt += 1
"# يا لثارات الحسين
import bisect
from sys import stdin
input = lambda: stdin.readline().rstrip()
for _ in range(int(input())):
    n = int(input())
    a = list(map(int, input().strip().split()))[:n]
    a.sort()
    b = list(map(int, input().strip().split()))[:n]
    b.sort()
    possible = True

    # number of elements in a bigger than the ith element in b:
    # pointers: i and j
    j = 0
    i = 0
    ans = 1

    while i < n and j < n:
        if a[j] <= b[i]:
            j += 1
        else:
            {{completion}}
        if j == n:
            possible = False
    if possible is True:
        print(ans % (1000000007))
    else:
        print(0)
","ans *= (i - j + 1)
            ans %= 1000000007
            i += 1",ans = (ans * (j - i)) % (1000000007)
"import sys

input = sys.stdin.readline


def int_var(): return int(input())
def int_lt(): return list(map(int, input().split()))
def str_lt(): return list(input()[:-1])
def int_tup(): return map(int, input().split())


mod = 10 ** 9 + 7
def solve(n, a, b):
    a, b = sorted(a), sorted(b) + [float(""inf"")]
    i, j, res = 0, 0, 1
    while i < n and j <= n:
        if a[i] > b[j]:
            j += 1
        else:
            {{completion}}
    return res % mod


if __name__ == '__main__':
    for t in range(int_var()):
        n = int_var()
        a, b = int_lt(), int_lt()
        print(solve(n, a, b))
","res = res * (j - i) % mod
            i += 1","cnt += 1
            a.pop()"
for g in[*open(0)][2::2]:{{completion}},"print(max(map(len,g[::2].split(""1""))))","print(max(map(len,g[::2].split('1'))))"
"for s in[*open(0)][2::2]:
         {{completion}}","print(max(map(len,s[::2].split('1'))))","print(max(map(len,s[::2].split('1'))))"
for t in[*open(0)][2::2]:{{completion}},"print(max(map(len,t[::2].split('1'))))","print(max(map(len,s[::2].split('1'))))"
"import collections
import sys
import heapq

input = sys.stdin.readline

def inp():
    return (int(input()))
def inlt():
    return (list(map(int, input().split())))
def insr():
    s = input()
    return (list(s[:len(s) - 1]))
def invr():
    return (map(int, input().split()))


def solution():
    k = inp()
    galaxies = inlt()
    n = 2 << k
    pre_xor = [0]
    for num in galaxies:
        pre_xor.append(pre_xor[-1]^num)

    mem_high_bits = [-1] * (1 << k)
    mem_high_bits[0] = 0
    mem_low_bits = [(-1, -1) for _ in range(1 << k)]

    for i in range(1, n+1):
        if mem_high_bits[pre_xor[i] >> k] != -1:
            whole_xor = pre_xor[mem_high_bits[pre_xor[i] >> k]] ^ pre_xor[i]
            start, end = mem_low_bits[whole_xor]
            if start == -1:
                mem_low_bits[whole_xor] = (mem_high_bits[pre_xor[i] >> k], i)
            else:
                if end < mem_high_bits[pre_xor[i] >> k] + 1:
                    print(f""{start + 1} {end} {mem_high_bits[pre_xor[i] >> k] + 1} {i}"")
                else:
                    {{completion}}
                return
        mem_high_bits[pre_xor[i] >> k] = i


if __name__ == '__main__':
    t = inp()
    for i in range(t):
        solution()
","print(f""{min(start + 1, mem_high_bits[pre_xor[i] >> k] + 1)} {max(start + 1, mem_high_bits[pre_xor[i] >> k] + 1)-1} {end+1} {i}"")","print(f""{start + 1} {end} {mem_high_bits[pre_xor[i] >> k] + 1} {i}"")"
"import sys
def input():
    return sys.stdin.readline().strip()

for _ in range(int(input())):
    n,m = map(int,input().split())
    c = [0]*(n+1)
    for i in range(m):
        {{completion}}
    ones = c.count(1)
    x = n - ones - 1
    print(x, ones//x)
","u,v = map(int,input().split())
        c[u]+=1
        c[v]+=1","u, v = map(lambda x: int(x) - 1, input().split())
        order[u] += 1
        order[v] += 1"
"import sys
from math import gcd
input=sys.stdin.readline
for _ in range(int(input())):
    n,m=map(int,input().split())
    cnt=[0]*n
    for i in range(m):
        for j in map(int,input().split()):
            {{completion}}
    tmp = [i for i in cnt if i!=1]
    tmp.sort()
    if tmp[0]==tmp[1]:
        print(tmp[-1],tmp[0]-1)
    else:
        print(tmp[0],tmp[1]-1)",cnt[j-1]+=1,"u,v = map(int,input().split())
        c[u]+=1
        c[v]+=1"
"# https://codeforces.com/contest/1829

import sys

input = lambda: sys.stdin.readline().rstrip()  # faster!


def solve_case():
    n, m = map(int, input().split())
    order = [0] * n
    for _ in range(m):
        {{completion}}

    n_centre = 1
    n_leaves = sum(order[i] == 1 for i in range(n))
    n_middle = n - n_centre - n_leaves

    print(n_middle, n_leaves // n_middle)


for _ in range(int(input())):
    solve_case()
","u, v = map(lambda x: int(x) - 1, input().split())
        order[u] += 1
        order[v] += 1","u, v = map(int, input().split())
order[u] += 1
order[v] += 1"
"from sys import stdin
input = lambda: stdin.readline().rstrip('\r\n')


for _ in range(int(input())):
    n = int(input())
    g = [[] for _ in range(n+1)]

    for i in range(1, n):
        u, v = map(int, input().split())
        g[u] += [(v, i)]
        g[v] += [(u, i)]

    ans = []

    def dfs(u, p, i, ans):
        nodes = 1
        for v, j in g[u]:
            if v == p: {{completion}}
            nodes += dfs(v, u, j, ans)

        if nodes == 3:
            if i: ans += [i]
            return 0
        
        return nodes

    
    if dfs(1, 0, 0, ans):
        print(-1)
    else:
        print(len(ans))
        print(*ans)",continue,continue
"import sys
input = sys.stdin.readline


def solve():
    n = int(input())
    
    adj = [[] for vertice in range(n+1)]

    for edge in range(1, n):
        a,b = map(int, input().strip().split())
        adj[a].append((b,edge))
        adj[b].append((a, edge))
    if n%3:
        print(-1)
        return
    size = [0] * (n+1)
    cut = []
    def dfs(curr, par):
        for child, edgenum in adj[curr]:
            if child == par:
                {{completion}}
            
            dfs(child, curr)

            size[curr] += size[child]

            #if the size of the child is % 3 then we have to cut

            if size[child] % 3 == 0:
                cut.append(edgenum)
            
        size[curr] += 1

    dfs(1, -1)
    #a cut tree has to have n//3 - 1 cuts
    #print(cut)
    if len(cut) != (n//3) - 1:
        print(-1)
    else:
        print(len(cut))
        print(*cut)
                
            
            
        

for tc in range(int(input())):
    solve()",continue,continue
"from collections import *
from heapq import *
from bisect import *
from itertools import *
from functools import *
from math import *
from string import *
import operator
import sys

input = sys.stdin.readline


def solve():
    n = int(input())
    adj = [[] for _ in range(n)]
    for i in range(n - 1):
        a, b = map(int, input().split())
        a, b = a - 1, b - 1
        adj[a].append((b, i + 1))
        adj[b].append((a, i + 1))

    if n % 3:
        print(-1)
        return

    def dfs(u, par):
        total = 0
        for v, i in adj[u]:
            if v == par:
                {{completion}}
                
            ct = dfs(v, u)

            if ct == -1:
                return -1

            if ct == 0:
                ans.append(i)
                continue

            total += ct

        if 1 + total < 3:
            return 1 + total

        return 0 if total + 1 == 3 else -1

    ans = []
    balance = dfs(0, -1)

    if balance != 0:
        print(-1)
    else:
        print(len(ans))
        print(*ans)


def main():
    tests = int(input())
    for _ in range(tests):
        solve()


if __name__ == ""__main__"":
    main()
",continue,continue
for s in[*open(0)][2::2]:{{completion}},"print(len({*zip(s,s[1:-1])}))","print(len({*zip(s[:-2],s[1:-1])}))"
"for x in [*open(0)][2::2]:
    {{completion}}","print(len({*zip(x[:-2],x[1:-1])}))","print(len({*zip(x[:-2],x[1:-1])}))"
for r in[*open(0)][2::2]:{{completion}},"print(len({*zip(r,r[1:-1])}))","print(len({*zip(r[:-2],r[1:-1])}))"
"import sys

input = sys.stdin.readline

for _ in range(int(input())):
    n = int(input())
    m1, m2, m3 = 1e19, 1e19, 1e19
    for i in range(n):
        n, a = input().split()
        if a == ""01"":
            {{completion}}
        if a == ""10"":
            m2 = min(m2, int(n))
        if a == ""11"":
            m3 = min(m3, int(n))
    if min(m1 + m2, m3) == 1e19:
        print(-1)
        continue
    print(min(m1 + m2, m3))","m1 = min(m1, int(n))","time, skills = input().split();
        time = int(time)
        mapper[skills] = min(mapper[skills],time)"
"import sys
input = sys.stdin.readline

def solve():
    n = int(input())
    mapper = {}
    mapper[""00""] = 1e9
    mapper[""01""] = 1e9
    mapper[""10""] = 1e9
    mapper[""11""] = 1e9
    for _ in range(n):
        {{completion}}

    ans = min(mapper[""11""], mapper[""10""] + mapper[""01""])
    print(-1 if ans==1e9 else ans)

t = int(input())
for _ in range(t):
    solve()     
","time, skills = input().split();
        time = int(time)
        mapper[skills] = min(mapper[skills],time)","m1 = min(m1, int(n))"
"from sys import stdin
import math

def main():
    t = int(stdin.readline().strip())
    for _ in range(t):
        n = int(stdin.readline().strip())
        skillOne, skillTwo, final = math.inf, math.inf, math.inf
        for _ in range(n):
            m, s = stdin.readline().strip().split()
            if s == '11':
                if int(m) < final:
                    final = int(m)
            else:
                if s[0] == '1' and skillOne > int(m):
                    {{completion}}
                if s[1] == '1' and skillTwo > int(m):
                    skillTwo = int(m)
        if final == math.inf and (skillOne == math.inf or skillTwo == math.inf):
            print(-1)
        elif final < skillOne + skillTwo:
            print(final)
        else:
            print(skillOne + skillTwo)
        
main()",skillOne = int(m),"if s[0] == '1' and skillOne > int(m):
    skillOne = int(m)"
"from sys import stdin
from math import ceil
def inp(): return stdin.readline().rstrip(""\r\n"")


for _ in range(int(inp())):
    n = int(inp())
    l = [int(x) for x in inp().split()]
    flag = 0
    c = 1
    p = l[0]
    for i in l:
        if i < p:
            if flag != -1:
                c += 1
                flag = -1
        elif i > p:
            if flag != 1:
                {{completion}}
        p = i
        #print(i,c,p,flag)
    print(c)






","c += 1
                flag = 1",continue
"import sys

input = sys.stdin.buffer.readline

for _ in range(int(input())) :
    n = int(input())
    a = [int(x) for x in input().split()]

    b = [a[0]]
    for i in range(1, n) :
        if b[-1] == a[i] :
            {{completion}}

        if len(b) == 1 :
            b.append(a[i])
            continue

        if a[i] >= b[-1] >= b[-2] or a[i] <= b[-1] <= b[-2] :
            b.pop()

        b.append(a[i])
    
    print(len(b))
",continue,"if b[-1] == a[i] :
            c += 1
            flag = -1"
"import sys
lines = list(map(str.strip, sys.stdin.readlines()))

for line in lines[2::2]:
    nums = list(map(int, line.split("" "")))
    if len(nums) == 1:
        print(1)
        continue
    contrast = sum([abs(nums[i] - nums[i-1]) for i in range(1, len(nums))])
    if contrast == 0:
        print(1)
        continue
    start = 1
    while start < len(nums) and nums[start] == nums[0]:
        start += 1
    increasing = nums[start] >= nums[0]
    # print(nums, start)
    result = 2
    for i in range(start, len(nums)):
        if increasing:
            if nums[i] < nums[i-1]:
                increasing = False
                result += 1
        else:
            if nums[i] > nums[i-1]:
                {{completion}}
    print(result)
    ","increasing = True
                result += 1",continue
"import sys
input = lambda:sys.stdin.readline().rstrip('\r\n')
for _ in range(int(input())):
    n,k = map(int,input().split())
    nlist = list(map(int,input().split()))
    nlist.sort()
    ans = 0
    pre = [0]
    for i in range(n):
        {{completion}}
    for i in range(k+1):
        ans = max(ans,pre[n-k+i]-pre[2*i])
    print(ans)",pre.append(pre[-1]+nlist[i]),"pre.append(pre[-1]+nlist[i])
pre.append(pre[-1]+nlist[i])
pre.append(pre[-1]+nlist[i])
pre.append(pre[-1]+nlist[i])
pre.append(pre[-1]+nlist[i])
pre.append(pre[-1]+nlist[i])
pre.append(pre[-1]+nlist[i])
pre.append(pre[-1]+nlist[i])"
"import math
import sys
from bisect import bisect_right

input = sys.stdin.readline

q = int(input())
for _ in range(q):
    _, k = [int(x) for x in input().strip().split()]
    nums = sorted([int(x) for x in input().strip().split()])
    i = 2 * k
    j = len(nums) - 1
    ans = s = sum(nums[i:])
    while i - 2 >= 0:
        {{completion}}
    print(ans)","s -= nums[j]
        j -= 1
        s += nums[i - 2] + nums[i - 1]
        i -= 2
        ans = max(ans, s)","s -= nums[i]
i -= 1"
"from collections import defaultdict, deque
from sys import stdin

input = stdin.readline

def get():
    return [int(i) for i in input().split(' ')]
 
t = int(input()) 

for _ in range(t):
    n, k = get() 
    nums = get() 
    nums.sort() 

    res = 0

    psum = [0] * (n + 1)
    for i in range(n):
        {{completion}}
    for i in range(k + 1):
        cur = psum[n - (k - i)] - psum[2 * i]
        res = max(cur, res)
    
    print(res)

    

    



    ",psum[i + 1] = psum[i] + nums[i],psum[i] = psum[i - 1] + nums[i - 1]
"for _ in range(int(input())):
    x,y = input().split()
    if len(x)<len(y):
        x='0'*(len(y)-len(x))+x
    n = len(y)
    sum=0
    for i in range(n):
        if int(x[i])==int(y[i]):
            {{completion}}
        sum+=int(y[i])-int(x[i]) + 9*(n-i-1)
        break
    print(sum)        
",continue,"print ((int(y[i])-int(x[i]))+9*(n-i-1))
            break"
"test= int(input())

for t in range(test):
    l,r= input().split("" "")
    if(l==r): 
        print(0)
        continue
    a,b=0,0
    aFlag,bFlag=False,False
    
    if(len(l)<len(r)): l= '0'*(len(r)-len(l)) + l
    
    for i in range(len(r)):
        if(l[i] != r[i]): 
            {{completion}}","print ((int(r[i])-int(l[i]))+9*(len(r)-i-1))
            break",continue
"# https://codeforces.com/problemset/problem/1833/C
import fileinput

for i, line in enumerate(fileinput.input()):
    if i == 0 or i % 2 == 1:
        # Skip the number of testcases and numbers of array elements
        continue
    a = list(map(int, line.split()))
    if min(a) % 2 == 1:
        # If the min number is odd then all even numbers can be made odd by subtracting min(a)
        print('YES')
    elif any(num % 2 == 1 for num in a):
        # If the minimum is even and the array contains odd numbers
        {{completion}}
    else:
        # All number are even
        print('YES')
",print('NO'),print('NO')
"import sys
input = sys.stdin.readline
K = 200
def solve():
    n, q = map(int, input().split())
    A = list(map(int, input().split()))
    queries = [[] for _ in range(n + 1)]
    res = [0] * q

    for i in range(q):
        s, d, k = map(int, input().split())
        s -= 1

        if d >= K:
            ans = 0
            for j in range(k):
                {{completion}}
            res[i] = ans
        else:
            queries[d].append((s, k, i))

    for d in range(min(K, n + 1)):
        if not queries[d]:
            continue

        P = [0] * (n + d)
        G = [0] * (n + d)

        for i, a in enumerate(A):
            j = i // d
            P[i + d] += a + P[i]
            G[i + d] += (j + 1) * a + G[i]

        for s, k, i in queries[d]:
            ns = s + (k - 1) * d
            res[i] = G[ns + d] - G[s] - (s // d) * (P[ns + d] - P[s])

    return "" "".join(map(str, res))

T = int(input())
out = [solve() for _ in range(T)]
print(""\n"".join(map(str, out)))
",ans += (j + 1) * A[s + j * d],res += nums[s + i * d] * (i + 1)
"from sys import stdin

n_tests = int(stdin.readline())
for test_id in range(n_tests):
    n, q = [int(w) for w in stdin.readline().split()]
    nums = [int(w) for w in stdin.readline().split()]
    assert len(nums) == n
    
    queries = []
    cost_diff = [-2 * n] * n
    for i in range(q):
        s, d, k = [int(w) for w in stdin.readline().split()]
        if k > 3:
            cost_diff[d] += k - 4
        queries.append((s - 1, d, k))
    
    cumsums = {}
    cumsums2 = {}
    for d in range(1, n):
        if cost_diff[d] <= 0:
            continue
        s = []
        si = []
        for i, val in enumerate(nums):
            s.append(val if i < d else val + s[i - d])
            si.append(val * (i // d + 1) if i < d else val * (i // d + 1) + si[i - d])
        cumsums[d] = s
        cumsums2[d] = si
    result = []
    for s, d, k in queries:
        if d in cumsums and k > 3:
            result.append(
                cumsums2[d][s + d * (k - 1)] - (cumsums2[d][s - d] if s >= d else 0) -
                (
                    cumsums[d][s + d * (k - 1)] - (cumsums[d][s - d] if s >= d else 0)
                ) * (s // d)
            )
        else:
            res = 0
            for i in range(k):
                {{completion}}
            result.append(res)
    print("" "".join(str(x) for x in result))
",res += nums[s + i * d] * (i + 1),res += cumsums[d][s + d * (k - 1)] - cumsums[d][s]
"from sys import stdin
def input(): return stdin.readline()[:-1]


def solve():
    N, Q = map(int, input().split())
    Arr = list(map(int, input().split()))
    
    K = int(N ** 0.5) + 1
    
    # MAKE DP OF SIZE N X K
    dp = [[0 for _ in range(N)] for _ in range(K)]
    
    for k in range(1, K):
        for i in range(N-1, -1, -1):
            if i + k < N:
                dp[k][i] = dp[k][i+k] + Arr[i]
            else:
                dp[k][i] = Arr[i]
                
    # making it a suffix
    for k in range(1, K):
        for i in range(N-1, -1, -1):
            if i + k < N:
                dp[k][i] += dp[k][i+k]
    
    ANS = [] 
    for _ in range(Q):
        s, delta, k = map(int, input().split())
        s -= 1
        
        if delta < K:
            temp = 0
            temp += dp[delta][s]
            if s + delta*(k) < N:
                temp -= dp[delta][s+delta*(k)]
                x = dp[delta][s+delta*(k)]
                if (s + delta*(k+1)) < N:
                    {{completion}}
                temp -= k * x
            ANS.append(temp)
        else:
            temp = 0
            for i in range(1, k+1):
                temp += Arr[s + (i-1) * delta] * i
            ANS.append(temp)
            
    
    print(*ANS)
for _ in range(int(input())):
    solve()",x -= dp[delta][s+delta*(k+1)],ans += (j + 1) * A[s + j * d]
"from sys import stdin
input=lambda :stdin.readline()[:-1]

def solve():
  n=int(input())
  a=list(map(int,input().split()))
  a=[n-i for i in a]+[0]
  m=int(input())
  stc=[]
  res=[]
  for i in range(n+1):
    ai=a[i]
    tmp=[]
    while stc and stc[-1][0]>=ai:
      h,l=stc.pop()
      tmp.append((h,l))
    L=i
    if tmp:
      L=tmp[-1][1]
      now=ai
      for h,l in tmp[::-1]:
        {{completion}}
    if ai!=0:
      stc.append((ai,L))
  res.sort(key=lambda x:-x[0])
  ans=0
  for d,c in res:
    x=min(c,m//d)
    ans+=(d-1)*x
    m-=d*x
    c-=x
    if c>0 and m>0:
      ans+=m-1
      m=0
  print(ans)

  
  
for _ in range(int(input())):
  solve()
","res.append((i-l,h-now))
        now=h","res.append((d,c))"
"from sys import gettrace, stdin

if not gettrace():
    def input():
        return next(stdin)[:-1]


def solve():
    n = int(input())
    aa = [int(a) for a in input().split()]
    aa.append(n)
    m = int(input())
    sc = [0]*(n+1)
    stack = [(n+1, -1)]
    b = 0
    for i,a in enumerate(aa):
        while stack and a >= stack[-1][0]:
            sc[i - stack[-1][1]-1] += stack[-1][0] - b
            b = stack[-1][0]
            stack.pop()
        sc[i - stack[-1][1] - 1] += a - b
        stack.append([a,i])
        b = a
    res = 0
    for i in range(n, 1, -1):
        if m >= sc[i]*i:
            m -= sc[i]*i
            res += sc[i]*(i-1)
        else:
            {{completion}}
    print(res)






def main():
    for _ in range(int(input())):
        solve()


if __name__ == ""__main__"":
    main()
","res += (m//i)*(i-1) + max(0, m%i-1)
            break","res.append((i-l,h-now))
        now=h"
for a in[*open(0)][1:]:{{completion}},print('YNEOS'[len({*a[:len(a)-1>>1]})<2::2]),print('YNEOS'[len({*a[:len(a)-1>>1]})<2::2])
"t=int(input())
while t>0:
    s=input()
    n=len(s)
    if len(set(s[:n//2]))>=2:
        print(""YES"")
    else:
        {{completion}}
    t=t-1","print(""NO"")",print('YNEOS'[len({*a[:len(a)-1>>1]})<2::2])
"for s in[*open(0)][1:]:{{completion}}
",print('YNEOS'[len({*s[:len(s)-1>>1]})<2::2]),print('YNEOS'[len({*s[:len(s)-1>>1]})<2::2])
"from sys import stdin
from pprint import pprint

values = [
	[1, 10, 100, 1000, 10000], # if right is A
	[-1, 10, 100, 1000, 10000], # if right is B
	[-1, -10, 100, 1000, 10000], # if right is C
	[-1, -10, -100, 1000, 10000], # if right is D
	[-1, -10, -100, -1000, 10000]] # if right is E

for _ in range(int(stdin.readline())):
	s = stdin.readline().rstrip()
	acc = [[0, 0, 0, 0, 0]]
	for x in s:
		c = ord(x) - 65
		acc.append([values[i][c] + acc[-1][max(i, c)] for i in range(5)])
	hi, right, best = 0, 0, -1_000_000_000
	for i in range(len(s)-1, -1, -1):
		c = ord(s[i]) - 65
		for j in range(5):
			{{completion}}
		hi = max(hi, c)
		right += values[hi][c]
	print(best)","best = max(best, right + values[hi][j] + acc[i][max(j, hi)])","best = max(best, right + acc[i][j])"
"import sys
 
input = lambda: sys.stdin.readline().rstrip()  # faster!
 
VALUE = [1, 10, 100, 1_000, 10_000]
 
 
def value(a):
    res = 0
    max_digit = 0
    for ai in reversed(a):
        if ai >= max_digit:
            res += VALUE[ai]
            max_digit = ai
        else:
            res -= VALUE[ai]
    return res
 
 
def solve_case():
    s = input()
 
    a = [ord(c) - ord(""A"") for c in s]
    n = len(a)
 
    min_pos, max_pos = [n] * 5, [-1] * 5
    for i, ai in enumerate(a):
        min_pos[ai] = min(min_pos[ai], i)
        max_pos[ai] = max(max_pos[ai], i)
 
    ans = value(a)
    for d in range(5):
        if min_pos[d] != n:
            orig = a[min_pos[d]]
            for dn in range(5):
                if dn != d:
                    {{completion}}
            a[min_pos[d]] = orig
        if max_pos[d] != -1 and max_pos[d] != min_pos[d]:
            orig = a[max_pos[d]]
            for dn in range(5):
                if dn != d:
                    a[max_pos[d]] = dn
                    ans = max(ans, value(a))
            a[max_pos[d]] = orig
 
    print(ans)
 
 
for _ in range(int(input())):
    solve_case()","a[min_pos[d]] = dn
                    ans = max(ans, value(a))",
"import sys
#import collections
import math
#import bisect
#import heapq
#import itertools
#import functools
input = sys.stdin.readline




def solve():
    s = input().rstrip()
    first = [-1] * 5
    last = [-1] * 5
    ls = list(s)
    for i, a in enumerate(s):
        j = ord(a) - 65
        if first[j] == -1:
            first[j] = i
        last[j] = i
    def calc(ls):
        res = 0
        prev = -1
        for a in reversed(ls):
            j = ord(a) - 65
            if j < prev:
                res -= 10 ** j
            elif j == prev:
                {{completion}}
            else:
                res += 10 ** j
                prev = j
        return res
    
    res = calc(ls)

    for k in range(5):
        if first[k] != -1:
            for j in range(k + 1, 5):
                ls[first[k]] = chr(65 + j)
                res = max(res, calc(ls))
                ls[first[k]] = chr(65 + k)
    for k in range(5):
        if last[k] != -1:
            for j in range(k):
                ls[last[k]] = chr(65 + j)
                res = max(res, calc(ls))
                ls[last[k]] = chr(65 + k)

    print(res)

    
    


    

    
    



t = int(input())
for _ in range(t):
    solve()",res += 10 ** j,"best = max(best, right + values[hi][j] + acc[i][max(j, hi)])"
"import sys
input = sys.stdin.readline

for _ in range(int(input())):
    req = 0
    temp = 0
    ind = 0
    n = int(input())
    status = [0] * (n + 1)
    for x in map(int, input().split()):
        {{completion}}
    print(req)
","temp = req
        req = max(req, status[x] - n + ind + 1)
        status[x] = max(status[x], temp + n - ind)
        ind = ind + 1","for i in range(1, n + 1):
    if status[i] == 0:
        req += 1
        temp = i
        while status[temp] == 0:
            status[temp] = 1
            temp += 1"
"import sys

for _ in range(int(input())):
    n = int(sys.stdin.readline())
    a = list(map(int, sys.stdin.readline().split()))
    dp = [0] * n
    dp[0] = 1
    min_dp = [11111111111111] * (n + 1)

    min_dp[a[0]] = 0

    for i in range(1, n):
        {{completion}}

    print(n - dp[-1])
","dp[i] = dp[i - 1] + 1

        dp[i] = min(dp[i], min_dp[a[i]])
        min_dp[a[i]] = min(min_dp[a[i]], dp[i - 1])","for i in range(1, n):
    if a[i] == a[i - 1]:
        dp[i] = dp[i - 1] + 1
        min_dp[a[i]] = min(min_dp[a[i]], dp[i])
    else:
        dp[i] = dp[i - 1]
        min_dp[a[i]] = min(min_dp[a[i]], dp[i])"
"import sys
ci = sys.stdin.readline
for _ in range(int(ci())):
    n = int(ci())
    pre = [94879487]*n
    a = list(map(lambda x: int(x)-1, ci().split()))
    dp = [0]*(n+1)
    dp[0] = n
    for i, num in enumerate(a):
        if pre[num] == 94879487:
            dp[i] = dp[i-1]
        else:
            {{completion}}
        pre[num] = min(pre[num], i - dp[i-1])
    print(dp[n-1])","dp[i] = max(dp[i-1], i - pre[num] + 1)","dp[i] = dp[i - 1] + 1

        dp[i] = min(dp[i], min_dp[a[i]])
        min_dp[a[i]] = min(min_dp[a[i]], dp[i - 1])"
"import sys
 
input = sys.stdin.readline
 
n, k = map(int, input().split())
a = list(map(int, input().split()))
index = []
for i in range(n):
    if a[i] == 1:
        index.append(i)
 
MOD = 10 ** 9 + 7
m = len(index)
dp = [[0] * 1501 for _ in range(1501)]
 
for i in range(k + 1):
    dp[0][i] = int(i % 2 == 0)
 
j0 = 0
for i in range(1, n + 1):
    if j0 < m and index[j0] < i:
        j0 += 1
    for j in range(min(i, m, j0 + 40) - 1,max(0, j0 - 40) -1,-1):
        dis = abs(index[j] - i + 1)
        for t in range(k, dis - 1, -1):
            {{completion}}
 
print(dp[m][k])","dp[j + 1][t] += dp[j][t - dis]
            dp[j + 1][t] %= MOD","dp[j + 1][t] += dp[j][t - dis]
            dp[j + 1][t] %= MOD"
"import sys

input = sys.stdin.readline

n, k = map(int, input().split())
a = list(map(int, input().split()))
index = []
for i in range(n):
    if a[i] == 1:
        index.append(i)

Mod = 10 ** 9 + 7
m = len(index)
dp = [[0] * 1501 for _ in range(1501)]
# 有几个球，花费了多少步。
for i in range(k + 1):
    dp[0][i] = int(i%2 == 0)
j0 = 0
for i in range(1,n + 1):
    if j0 < m and index[j0] < i:
        j0 += 1
    for j in range(min(i,m,j0 + 40) - 1,max(0,j0 - 40) -1,-1):
        dis = abs(index[j] - i + 1)
        for t in range(k,dis - 1,-1):
            {{completion}}
print(dp[m][k])","dp[j + 1][t] += dp[j][t - dis]
            dp[j + 1][t] %= Mod","dp[j + 1][t] += dp[j][t - dis]
            dp[j + 1][t] %= MOD"
"import sys

input = sys.stdin.readline

for _ in range(int(input())):
    n, k, q = map(int, input().split())

    count = 0
    p = 0
    for c in map(int, input().split()):
        if c > q:
            if p >= k:
                {{completion}}
            p = 0
        else: p += 1
    if p >= k and p > 0: count += (p-k+1)*(p-k+2)//2
    #print(p,k)
    print(count)",count += (p-k+1)*(p-k+2)//2,"i += 1
            continue"
"from sys import stdout, stdin
from math import comb

def solve(arr, n, d, t):
    i = 0
    ans = 0
    while i < n:
        if arr[i] > t:
            {{completion}}

        j = i + 1
        while j < n and arr[j] <= t:
            j += 1
        if j - i >= k:
            ans += comb(j - i - k + 2, j - i - k)
        i = j

    return str(ans)


ans = []
for _ in range(int(stdin.readline())):
    n, k, q = map(int, stdin.readline().split())
    arr = [int(x) for x in stdin.readline().split()]
    ans.append(solve(arr, n, k, q))

stdout.write('\n'.join(ans))
","i += 1
            continue","ans.append(solve(arr, n, k, q))"
"import math, os, sys
from collections import defaultdict
if(os.path.exists('input.txt')):
    sys.stdin = open(""input.txt"",""r"")
    sys.stdout = open(""output.txt"",""w"")
import sys
input = sys.stdin.readline

# Main code here.
def solve():
    n,k,q = map(int,input().split())
    arr = list(map(int, input().split()))

    cnt,res = 0, 0
    for val in arr:
        if val <= q: 
            cnt += 1
        else: 
            if cnt >= k: 
                {{completion}}
            cnt = 0 

    if cnt >= k: 
        res += ((cnt - k + 1)*(cnt - k +2)) // 2
    print(res)

for _ in range(int(input())):
    solve()
# solve()

sys.stdout.close() 
sys.stdin.close()",res += ((cnt - k + 1)*(cnt - k +2)) // 2,res += ((cnt - k + 1)*(cnt - k +2)) // 2
"for p in[*open(0)][2::2]:
 y=[0]*100
 for x in p.split():{{completion}}
 print('YNEOS'[sorted(y)<y::2])",y[int(x)]-=1,y[int(x)]-=1
"t = int(input())
for i in range(t) : 
  n = int(input())
  l = list(map(int,input().split()))
  l.sort()
  f = 0
  for j in range(l[n-1]) :
    if l.count(j) < l.count(j+1) :
      {{completion}}
  if f == 0 :
    print(""YES"")
  else :
    print(""NO"")","f = 1
      break",")
l.remove(l[n-1])
f = 1"
"for s in[*open(0)][2::2]:
 a=[0]*100
 for x in s.split():{{completion}}
 print('YNEOS'[sorted(a)<a::2])",a[int(x)]-=1,a[int(x)]-=1
"from sys import stdin, stdout

ans = []
for _ in range(int(stdin.readline())):
    n = int(stdin.readline())
    for x in range(2, 64):
        k = int(n**(1/x))
        if k < 2 or (n*(k-1) == k**(x+1) - 1):
            {{completion}}
    ans.append('YES' if k >= 2 else 'NO')

stdout.write('\n'.join(ans))
",break,break
"import sys, math
input = sys.stdin.readline
 
M = int(1e9) + 7    

def check(x, y):
    p = 1
    for i in range(1, y+1):
        p = 1 + x*p
    return p
 
def solve():
    n = int(input())
    
    for i in range(2, math.ceil(math.log(n) / math.log(2))):
        c = int(math.pow(n, 1/i))
        if check(c, i) == n:
            {{completion}}
    return 'NO'

 
for _ in range(int(input())):
    print(solve())",return 'YES',break
"from math import floor
precompute=set()
for k in range(2,1000):
    base=k*(k+1)+1
    while base<=10**18:
        precompute.add(base)
        base=k*base+1
t=int(input())
for _ in range(t):
    n=int(input())
    if n<=12:
        if n==7:
            print(""YES"")
        else:
            print(""NO"")
    elif n in precompute:
        print(""YES"")
    else:
        answer=""NO""
        for p in range(2,6):
            k=floor(n**(1/p))
            while k**p>n:
                {{completion}}
            while (k+1)**(p)<=n:
                k+=1
            base=1+k
            for _ in range(2,p+1):
                base=k*base+1
            if base==n:
                answer=""YES""
        print(answer)",k-=1,break
for s in[*open(0)][2::2]:{{completion}},"a,b=map(s[:-1].split,'<>');print(max(map(len,a+b))+1)",print(s.count('<')+s.count('>'))
"from sys import stdin
input = stdin.buffer.readline

for _ in range(int(input())):
    n = int(input())
    ans = 0
    for _ in range(n):
        a, b = map(int,input().split())
        if a - b > 0:
            {{completion}}
    print(ans)",ans += 1,ans += 1
"import sys


def main():
    q = int(sys.stdin.readline())

    res = []
    for _ in range(q):
        t = int(sys.stdin.readline())

        ans = 0
        for _ in range(t):
            a, b = map(int, sys.stdin.readline().split())
            if a > b:
                {{completion}}

        res.append(ans)

    print('\n'.join(map(str, res)))


if __name__ == '__main__':
    main()",ans += 1,ans += 1
"from sys import stdin
 
input = stdin.readline
 
for _ in range(int(input())):
    MNR = int(input())
    L = list(map(int, input().split()))
    Res = max(L)
    if Res < 0:
        print(Res)
    else:
        {{completion}}","print(max(sum([li for li in L[::2] if li > 0]), sum([li for li in L[1::2] if li > 0])))","odd += max(c[i], 0)"
"# compiler on CodeForces: PyPy 3 64bit
import sys
input = lambda: sys.stdin.readline()[:-1]
print = lambda *args: sys.stdout.write(' '.join(map(str, args)) + '\n')

def solve(n, c):
    result = max(c)
    if result < 0:
        return result

    odd, even = 0, 0
    for i in range(n):
        if i % 2 == 0:
            even += max(c[i], 0)
        else:
            {{completion}}

    return max(odd, even)


for _ in range(int(input())):
    n = int(input())
    c = [int(e) for e in input().split()]
    print(solve(n, c))
","odd += max(c[i], 0)","print(max(sum([li for li in L[::2] if li > 0]), sum([li for li in L[1::2] if li > 0])))"
"from sys import stdin as input

t = int(input.readline())

for _ in range(t):
    n = int(input.readline())
    p = list(map(int, input.readline().split()))

    if n == 1:
        print(p[0])
    else:
        p_odd = sum([p[i] for i in range(0, n, 2) if p[i] > 0])
        p_even = sum([p[i] for i in range(1, n, 2) if p[i] > 0])

        if p_odd == 0 and p_even == 0:
            max_odd = max([p[i] for i in range(0, n, 2)])
            max_even = max([p[i] for i in range(1, n, 2)])
            print(max(max_odd, max_even))
        else:
            {{completion}}","print(max(p_odd, p_even))","print(max(p_odd, p_even))"
"import sys
t = int(sys.stdin.readline())
limit = 10**6

possible = set()
for i in range(2, 1000):
    outer = i*i
    x = 1 + i + i*i
    while x <= limit:
        possible.add(x)
        outer *= i
        x += outer

for _ in range(t):
    n = int(sys.stdin.readline())
    if n in possible:
        print(""YES"")
    else:
        {{completion}}
    ","print(""NO"")",break
"import math
n=int(input())
i=1
ls=[]
while(i<=n):
    ls+=[int(input())]
    i+=1
bigdic={}
i=2
while(i<=1000):
    j=3
    s=1+i+i**2
    while(s<=10**6):
        bigdic[s] = True
        s+=i**j
        j+=1
    i+=1
i=0

while(i<n):
    if(ls[i] in bigdic):
        print(""YES"")
    else:
        {{completion}}
    i+=1



","print(""NO"")",break
"import sys
input = sys.stdin.readline
s = set()
for i in range(2, 1000):
    count = 1 + i + (i**2)
    for j in range(3, 20):
        if count <= 10**6:
            s.add(count)
            count += i**j
        else:
            {{completion}}
for _ in range(int(input())):
    n = int(input())
    if n in s:
        sys.stdout.write(""YES"" + ""\n"")
    else:
        sys.stdout.write(""NO"" + ""\n"")
        ",break,break
"import sys
input = sys.stdin.readline
def solve():
    s, k = list(map(int, input().split()))
    r = s * k
    while k > 0 and s % 2 != 0:
        k -= 1
        s += s % 10
        r = max(r, k * s)
    if s % 10 == 0:
        print(r)
    else:
        t = max((5 * k - s) // 40 - 2, 0)
        s += 20 * t
        k -= 4 * t
        for j in range(min(20, k)):
            {{completion}}
        print(r)
for _ in range(int(input())):
    solve()","r = max(r, s * k)
            s += s % 10
            k -= 1",break
"import sys

input = sys.stdin.readline

t = int(input())
for _ in range(t):
    s,k = map(int,input().split())
    if s%10 == 0:
        print(s * k)
        continue
    if s % 10 == 5:
        print(max(s * k,(s + 5) * (k - 1)))
        continue
    ans = 0
    while s % 10 != 2 and k:
        ans = max(ans,s * k)
        s += s % 10
        k -= 1
    # [2,4,6,8] fx = (s + 20 * x)*(k - 4 * x)

    def cal(x):
        return (s + 20 * x) * (k - 4 * x)

    left = 0
    right = k // 4
    while right - left >= 3:
        diff = right - left
        mid_left = left + diff // 3
        mid_right = left + 2 * diff // 3
        if cal(mid_left) < cal(mid_right):
            left = mid_left
        else:
            {{completion}}

    s += 20 * left
    k -= 4 * left

    for i in range(min(k + 1,60)):
        ans = max(ans,s * k)
        s += s % 10
        k -= 1
    print(ans)
",right = mid_right,"ans = max(ans,s * k)
            s += s % 10
            k -= 1"
"import sys
input = sys.stdin.readline    

t=int(input())
for tests in range(t):
    s,k=map(int,input().split())

    ANS=s*k

    for i in range(10):
        s+=s%10
        k-=1
        ANS=max(ANS,s*k)

        if k==0:
            {{completion}}

    if k==0 or s%10==0:
        print(ANS)
        continue

    #print(ANS)

    kai=(20*k-4*s)//160

    ss=max(0,kai-30)

    s+=20*ss
    k-=4*ss

    for i in range(300):
        s+=s%10
        k-=1
        ANS=max(ANS,s*k)

        if k==0:
            break

    print(ANS)

    
",break,"ANS=max(ANS,s*k)
s+=s%10
k-=1"
"for s in[*open(0)][2::2]:
 t=r=0;d=1
 for x in map(int,s.split()):
  t+=abs(x)
  if x<0:{{completion}}
  if x>0:d=1
 print(t,r)",r+=d;d=0,t-=x;r+=d;d=0
"for s in[*open(0)][2::2]:
 t=r=0;d=1
 for x in map(int,s.split()):
  if x<0:{{completion}}
  if x>0:t+=x;d=1
 print(t,r)
 ",t-=x;r+=d;d=0,t-=x;r+=d;d=0
"for s in[*open(0)][2::2]:
 t=r=0;d=1
 for x in map(int,s.split()):
  if x<0:{{completion}}
  if x>0:t+=x;d=1
 print(t,r)",t-=x;r+=d;d=0,t-=x;r+=d;d=0
"import sys

input = sys.stdin.readline

# 结论题，思考异或关于2的幂次的性质，注意数据范围
n = int(input())
a = list(map(int, input().split()))

ans = 0
while n//2:
    n //= 2
    if all(a[i] == a[i + n] for i in range(n)):
        continue
    else:
        ans += n
        for i in range(n):
            {{completion}}
print(ans + (a[0] != 0))
",a[i] ^= a[i + n],a[i] ^= a[i + n]
"# import io,os
# read = io.BytesIO(os.read(0, os.fstat(0).st_size))
# I = lambda: [*map(int, read.readline().split())]

import sys
I=lambda:[*map(int,sys.stdin.readline().split())]

n, = I()

a = I()

def solve(a):
	if len(a) == 1:
		if a[0]:
			{{completion}}
		return 0
	half = len(a) // 2

	for i in range(half):
		if a[i] != a[i + half]:
			break
	else:
		return solve(a[:half])

	b = [a[i] ^ a[i + half] for i in range(half)]
	return half + solve(b)

print(solve(a))
",return 1,return half + solve(b)
"import sys
input = sys.stdin.buffer.readline

n = int(input())
a = list(map(int,input().split()))

ans = 0
size = n

while size != 1:
    if not all(a[i] == a[i + size // 2] for i in range(size // 2)):
        for i in range(size // 2):
            {{completion}}
        ans += size // 2
    size //= 2

print(ans if a[0] == 0 else ans + 1)",a[i] ^= a[i + size // 2],a[i] ^= a[i + size // 2]
"for s in[*open(0)][1:]:{{completion}}
","n,k=map(int,s.split());print(min(n+1,1<<min(k,30)))","print(min(2**k, n+1))"
"import math
for _ in range(int(input())):
    n , k = map(int , input().split())
    
    if k> 60:
        print(n+1)
    else:
        {{completion}}","print(min(2**k, n+1))","n,k=map(int,s.split());print(min(n+1,1<<min(k,30)))"
"testCases = int(input())

for testCase in range(testCases):
	{{completion}}","n, k = [int(i) for i in input().split()]
	print(min(1 + n, 1 << min(k, 30)))","n,k=map(int,input().split());print(min(n+1,1<<min(k,30)))"
"for a in[*open(0)][1:]:{{completion}}
","print(sum(i!=j for i,j in zip(a,""codeforces"")))",count+=1
"for t in range(int(input())):
    a=input()
    b=""codeforces""
    count=0
    for i in range(len(b)):
        if(b[i]!=a[i]):
            {{completion}} 
    print(count)",count+=1,count+=1
"t=int(input())

for _ in range(t):
    a=str(input().strip())
    b='codeforces'
    count=0

    for i in range(10):
        if a[i]!=b[i]:
            {{completion}}
    
    print(count)",count+=1,count+=1
"for nik in[*open(0)][1:]:
    {{completion}}","nik=int(nik)
    print(nik*2-bin(nik).count('1'))",nik=int(nik);print(nik*2-bin(nik).count('1'))
for n in[*open(0)][1:]:{{completion}},n=int(n);print(n*2-bin(n).count('1')),"n = int(n);
    print(n*(n+1)//2)"
"for k in[*open(0)][1:]:
    {{completion}}","k = int(k);
    print(k*2 - bin(k).count('1'))","k = int(k);
    print(k*2 - bin(k).count('1'))"
"# O(n)

# As we iterate over fixed R, maintain # of valid subarrays via 2 monotonic stacks.

# Easy dnq works too: Find max in range then iterate over the smaller seg for endpoint 1.
# Binary search for the closest endpoint 2 that is valid. Can use sparse table for all ops.


import sys
input = sys.stdin.buffer.readline

n = int(input())
a = [1e7] + list(map(int, input().split()))

ans = 0

valid = 0
inc = []
dec = []
end = [None] * (n+1)
for i in range(n+1):
    while inc and a[i] > a[inc[-1]]:
        if end[inc[-1]]:
            true_i, dec_i = end[inc[-1]]

            if dec_i < len(dec) and dec[dec_i] == true_i:
                valid -= true_i - inc[-1]

                if dec_i == 0 or dec[dec_i-1] < inc[-2]:
                    valid += true_i - inc[-2]
                    end[inc[-2]] = (true_i, dec_i)
                    end[true_i] = (inc[-2], None)
                else:
                    {{completion}}

        inc.pop()

    while dec and a[i] < a[dec[-1]]:
        if end[dec[-1]]:
            valid -= dec[-1] - end[dec[-1]][0]

        dec.pop()

    inc.append(i)
    dec.append(i)
    end[i] = (i, len(dec)-1)

    ans += valid

print(ans)
","valid += true_i - dec[dec_i-1]
                    end[true_i] = (dec[dec_i-1], None)",ans += true_i - inc[-2]
"import sys
input = sys.stdin.readline
ans = 0
n = int(input())
a = [None] * n
L_mx = [None] * n
L_mn = [None] * n
R_mx = [None] * n
R_mn = [None] * n
#
def solve(i):
#    print(i, L_mx[i], R_mx[i])
    ans = 0
    if i - L_mx[i] <= R_mx[i] - i:
        for j in range(L_mx[i] + 1, i):
            ans += max(0, (min(R_mn[j], R_mx[i]) - i)) * max(0, j - max(L_mx[i], L_mn[j]));
    else:
        ans += (R_mx[i] - i) * (i - L_mx[i]) - 1
#        print(ans)
        for j in range(i + 1, R_mx[i]):
            {{completion}}
        
    return ans
    
a = [int(x) - 1 for x in input().split()]
#print(len(a))
for i in range(0, n):
#    a[i] = int(input())
    x = i - 1
    while x > -1 and a[x] > a[i]:
        x = L_mn[x]
    L_mn[i] = x
    x = i - 1
    while x > -1 and a[x] < a[i]:
        x = L_mx[x]
    L_mx[i] = x
        
for i in range(n - 1, -1, -1):
    x = i + 1
    while x < n and a[x] > a[i]:
        x = R_mn[x]
    R_mn[i] = x
    x = i + 1
    while x < n and a[x] < a[i]:
        x = R_mx[x]
    R_mx[i] = x

for i in range(n - 1, -1, -1):
    ans += solve(i)
    
print(ans)

","ans -= max(0, (min(R_mn[j], R_mx[i]) - j)) * max(0, i - max(L_mx[i], L_mn[j]));",continue
"import sys
input = sys.stdin.readline

from bisect import bisect,bisect_left

n=int(input())
A=list(map(int,input().split()))
A.reverse()

MAX=[-1]
MIN=[-1]
Weight=[0]*n

ANS=0
NOW=0

for i in range(n):
    a=A[i]

    while MIN[-1]!=-1 and A[MIN[-1]]>a:
        ind=MIN.pop()

        x0=bisect(MAX,ind)
        
        if x0==len(MAX):
            {{completion}}

        ind=MAX[x0]

        if ind==-1:
            continue

        x=bisect_left(MAX,ind)
        ind1=MAX[x-1]

        x=bisect_left(MIN,ind)
        ind2=MIN[x-1]
        
        nec=ind-max(ind1,ind2)

        if Weight[MAX[x0]]!=nec:
            NOW=NOW-Weight[MAX[x0]]+nec
            Weight[MAX[x0]]=nec

    MIN.append(i)

    while MAX[-1]!=-1 and A[MAX[-1]]<a:
        ind=MAX.pop()
        NOW-=Weight[ind]

    MAX.append(i)

    j=len(MAX)-1
    ind=MAX[j]

    x=bisect_left(MAX,ind)
    ind1=MAX[x-1]

    x=bisect_left(MIN,ind)
    ind2=MIN[x-1]
    
    nec=ind-max(ind1,ind2)

    if Weight[MAX[j]]!=nec:
        NOW=NOW-Weight[MAX[j]]+nec
        Weight[MAX[j]]=nec

    #print(MAX,MIN,NOW,ANS,Weight)
    #print(NOW,ANS)

    ANS+=NOW

print(ANS-n)
        
        
    
",continue,
"import sys

input = sys.stdin.readline

""""""

"""""" 

M = 1 << 8 

def solve():
    n = int(input())
    a = list(map(int, input().split()))
    
    can = {0}
    
    xor = 0
    for ai in a:
        xor ^= ai 
        can.add(xor)
    
    res = 0
    for x in can:
        for y in can:
            {{completion}}
    
    print(res)

for _ in range(int(input())):
    solve()","res = max(res, x ^ y)","ans = max(ans,l[i]^l[j])"
"import sys
def input(): return sys.stdin.readline().strip()
def getints(): return map(int,sys.stdin.readline().strip().split())

for _ in range(int(input())):
    n = int(input())
    l = list(getints()) 

    ta = [l[-1]]
    for x in reversed(range(n-1)):
        ta.append(ta[-1] ^ l[x])
    s = list(set(ta))

    ans = max(l+s)
    for i in range(len(s)):
        for j in range(i+1,len(s)):
            {{completion}}
    print(ans)","ans = max(ans,s[i] ^ s[j])","ans = max(ans,l[i]^l[j])"
"from sys import stdin


def inp(): return stdin.readline().rstrip(""\r\n"")


for _ in range(int(inp())):
    n = int(inp())
    arr = [int(x) for x in inp().split()]
    x = 0
    s = set()
    for i in arr:
        x = x ^ i
        s.add(x)
    l = list(s)
    l.append(0)
    #print(l)
    ans = 0
    for i in range(len(l)):
        for j in range(i,len(l)):
            {{completion}}
    print(ans)","ans = max(ans,l[i]^l[j])","ans = max(ans, x ^ y)"
"for s in[*open(0)][2::2]:
 r='';p=0
 for x in s:
  if p==0:p=x
  elif x==p:{{completion}}
 print(r)",r+=p;p=0,"r+=x
p=0"
"t = int(input())
for _ in range(t):
	n = int(input())
	s = input()
	ans = 'a'
	while len(s) != 0:
		for i in range(1,n):
			if s[i] == s[0]:
				{{completion}}
	print(ans[1:])","ans = ans + s[i]
				s = s[i+1:]
				break","if s[i] == s[0]:
	ans = s[0] + ans
	s = s[i+1:]"
"inpt=int(input())
while inpt>0:
  o=int(input())
  a1=input()
  k=""""
  i=0
  while i<o:
    {{completion}}
  print(k)
  inpt-=1","k+=a1[i]
    i+=a1[i+1:].index(a1[i])+2","k=k+a1[i]
    i+=1
    if i<o:
      k=k+a1[i]
      i+=1
inpt-=1"
"for s in[*open(0)][2::2]:{{completion}}
","n=len(a:=sorted(map(int,s.split())));print(sum(a[n-n//2:])-sum(a[:n//2]))","n=len(a:=sorted(map(int,s.split())));print(sum(a[n-n//2:])-sum(a[:n//2]))"
"for i in range(int(input())):
    n = int(input())
    a = list(map(int, input().split()))
    a.sort()
    s = 0
    for i in range(n//2):
        {{completion}}
    print(s)",s += a[-1-i] - a[i],"s=0
for i in range(n//2):
    s+=a[i+n//2]-a[i]
print(s)"
for s in[*open(0)][2::2]:{{completion}},"n=len(a:=sorted(map(int,s.split())));print(sum(a[n-n//2:])-sum(a[:n//2]))","n=len(a:=sorted(map(int,s.split())));print(sum(a[n-n//2:])-sum(a[:n//2]))"
"from sys import stdin
input = stdin.readline

n = int(input())
a = [0] + [int(x) for x in input().split()] + [0]
ans = 0
for i in range(1, n+1):
    if a[i-1]:
        pass
    elif a[i] == 0 and a[i+1]:
        {{completion}}
    else:
        ans += 1
print(ans)",a[i+1] -= 1,ans += 1
"def main():
    n = int(input())
    a = list(map(int, input().split()))
    res = 1
    lf = 0
    was2 = False
    for i in range(1, n):
        if a[i - 1] == 0 and lf < i - 1:
            {{completion}}
        if a[lf] != 0 or a[i] != 0:
            was2 = was2 or (a[i] == 2)
            continue
        if was2:
            continue
        res += 1
        lf = i
        was2 = a[i] == 2
    print(res)


if __name__ == ""__main__"":
    main()
","res += 1
            lf = i
            was2 = a[i] == 2
            continue",a[i] = 0
"n=int(input())
ar=list(map(int,input().split()))

ans=0

if(n==1):
    ans=1
    print(ans)
else:
    if(ar[0]!=0):
        ans+=1
    else:
        if(ar[1]!=0):
            ar[1]-=1
        else:
            {{completion}}
    
    for i in range(1,n-1):
        if(ar[i-1]!=0):
            ar[i-1]-=1
        elif(ar[i]):
            ans+=1
        elif(ar[i+1]):
            ar[i+1]-=1
        else:
            ans+=1
    if(ar[-2]==0):
        ans+=1
    print(ans)",ans+=1,ar[i+1] -= 1
"t = int(input()) 
for _ in range(t):
    {{completion}}","n,k = list(map(int,input().strip().split("" "")))
    a = list(map(int,input().strip().split("" "")))
    mods = [v%k if v%k != 0 else k for v in a]
    print("" "".join(map(str,sorted(list(range(1,n+1)), key=lambda i:mods[i-1], reverse=True))))","a = [x % k if x % k > 0 else k for x in a]
    return print(' '.join([str(x+1) for x in sorted(range(len(a)), key=lambda k: a[k], reverse=True)]))"
"# https://codeforces.com/contest/1849

import sys

input = lambda: sys.stdin.readline().rstrip()  # faster!


# inspired by misorin's very fast implementations, let's experiment with this
def f(val, n, idx):
    {{completion}}


def solve_case():
    n, k = map(int, input().split())
    a = list(map(int, input().split()))

    b = sorted(f(k - (x - 1) % k, n, i) for i, x in enumerate(a))
    print(*[x % n + 1 for x in b])


for _ in range(int(input())):
    solve_case()
",return val * n + idx,"a = [x % k if x % k > 0 else k for x in a]
    return print(' '.join([str(x+1) for x in sorted(range(len(a)), key=lambda k: a[k], reverse=True)]))"
"def solve(k,a):
    {{completion}}

t = int(input())
while(t>0):
    t = t-1
    n,k = map(int,input().split())
    a = [int(x) for x in input().split()]
    solve(k,a)","a = [x % k if x % k > 0 else k for x in a]
    return print(' '.join([str(x+1) for x in sorted(range(len(a)), key=lambda k: a[k], reverse=True)]))","n,k = list(map(int,input().strip().split("" "")))
    a = list(map(int,input().strip().split("" "")))
    mods = [v%k if v%k != 0 else k for v in a]
    print("" "".join(map(str,sorted(list(range(1,n+1)), key=lambda i:mods[i-1], reverse=True))))"
"from collections import Counter
for _ in range(int(input())):
 n=int(input())
 counts=[0]*(n+1); steps=[0]*(n+1)

 for i in map(int,input().split()):
  if i<=n: {{completion}}

 for i,v in enumerate(counts):
  if v==0: continue
  s=i
  while s<=n: steps[s] += v; s+=i
 print(max(steps))",counts[i]+=1,pass
"for t in range(int(input())):
    n = int(input())
    l = [int(x) for x in input().split()]

    arr = [0]*(n+1)
    for x in l:
        try:
            arr[x] +=1
        except:
            {{completion}}
    dp = [0]*(n+1)

    for i in range(1,n+1):
        c=  i 
        while c <= n:
            dp[c] += arr[i] 
            c+= i 


    print(max(dp))",pass,counts[i]+=1
"import sys

input = lambda: sys.stdin.readline().rstrip()


def solve():
    a = """".join(it for _ in range(3) for it in input())
    for i, j, k in [(0, 1, 2), (3, 4, 5), (6, 7, 8), (0, 3, 6), (1, 4, 7), (2, 5, 8), (0, 4, 8), (2, 4, 6)]:
        if a[i] == a[j] == a[k] and a[i] != '.':
            {{completion}}
    return ""DRAW ""


for _ in range(int(input())):
    print(solve())
",return a[i],r=b[0]
"t=int(input())
l=[]
for i in range(t):
    a=input()
    b=input()
    c=input()
    r=""DRAW""
    if (a[0]==a[1] and a[1]==a[2])and(a[0]!="".""):
        r=a[0]
    elif ((b[0]==b[1] and b[1]==b[2])or(a[0]==b[0] and b[0]==c[0]))and(b[0]!="".""):
        {{completion}}
    elif ((c[0]==c[1] and c[1]==c[2]) or(a[2]==b[1] and b[1]==c[0]))and(c[0]!="".""):
             r=c[0]
    elif ((a[1]==b[1] and b[1]==c[1])or(a[0]==b[1] and b[1]==c[2]))and(b[1]!="".""):
             r=b[1]
    elif (a[2]==b[2] and b[2]==c[2])and(a[2]!="".""):
             r=a[2]
    l.append(r)
for i in l:
    print(i)",r=b[0],return a[0]
"import sys, math, itertools, bisect
input = sys.stdin.readline
 
def ok(x): print('YES' if x else 'NO')
P = 1000000007
 
#### Type your code here! ####
T = int(input())
for _ in range(T):
    a1, a2, a3 = list(input().rstrip())
    a4, a5, a6 = list(input().rstrip())
    a7, a8, a9 = list(input().rstrip())
    if a1 == a2 == a3 != '.': print(a1)
    elif a4 == a5 == a6 != '.': {{completion}}
    elif a7 == a8 == a9 != '.': print(a9)
    elif a1 == a4 == a7 != '.': print(a1)
    elif a2 == a5 == a8 != '.': print(a2)
    elif a3 == a6 == a9 != '.': print(a3)
    elif a1 == a5 == a9 != '.': print(a1)
    elif a3 == a5 == a7 != '.': print(a3)
    else: print(""DRAW"")
##############################  ",print(a4),")
if a4 == a5 == a6 != '.':
    print(a4)
##############################"
"m=int(input())
for e in range(m):
	s=int(input())
	i=list(map(int,input().split()))
	l=[0 for o in range(s+1)]
	n=0
	h=0
	for o in i:
		h=o-n
		n=o
		if 1<=h<=s:
			{{completion}}
	print(""YES"" if sum(l)==(s-2 if i[-1]==s*(s+1)//2 else s-1) and i[-1]<=s*(s+1)//2 else ""NO"")",l[h]=1,l[h]+=1
"def sol(n,l):
    isn=[False]*(n+1)
    l=[0]+l
    sum1=n*(n+1)//2
    x=0
    keys=0
    for i in range(n-1):
        temp=l[i+1]-l[i]
        if temp>n:
            if keys!=0:
                {{completion}}
            
            keys=temp
            x+=1
            continue

        if x>1:
            return 'NO'

        
        if isn[temp]:
            if keys!=0:
                return 'NO'

            keys=temp
            continue
        else:
            isn[temp]=True
            sum1-=temp
    
    if keys==sum1 or keys==0:
        return 'YES'
    else:
        return 'NO'

from sys import stdin
for _ in range(int(input())):
    n=int(stdin.readline())
    l=list(map(int,stdin.readline().split()))
    print(sol(n,l)) 
",return 'NO',"if keys!=0:
    return 'NO'"
"import sys

input = sys.stdin.readline

t = int(input())
for _ in range(t):
    n = int(input())
    a = [0] + list(map(int, input().split()))

    other = -1
    s = set()
    for i in range(1,n):
        sub = a[i] - a[i - 1]
        if sub <= 0:
            print(""NO"")
            break
        if sub in s or sub > n:
            if other != -1:
                {{completion}}
            other = sub
        s.add(sub)
    else:
        if other == -1:
            print(""YES"")
        elif a[-1] == n*(n + 1)//2:
            print(""YES"")
        else:
            print(""NO"")
","print(""NO"")
                break",s.remove(other)
"import sys
input = sys.stdin.readline
 
def highest_set_bit(xy):
    return xy.bit_length() - 1
 
def lowest_set_bit(xy):
    return highest_set_bit(xy ^ (xy - 1))
 
 
nr = int(input())
A = [int(xy) for xy in input().split()]
 
prefix_sum = [0]
for a in A:
    prefix_sum.append(prefix_sum[-1] + a)
 
best = 0
 
bitset = 1
mask = (1 << nr) - 1
 
for i in range(nr):
    bitset |= (bitset >> i) << (A[i] + i)
 
    j = highest_set_bit(bitset)
    if j >= nr:
        {{completion}}
 
    bitset &= mask
 
bitset = bin(bitset)[2:][::-1]
for j in range(len(bitset)):
    if bitset[j] == '1':
        best = max(best, prefix_sum[j + 1] - j)
 
print(best)","j = lowest_set_bit(bitset >> nr) + nr
        best = max(best, prefix_sum[-1] - j)","j = lowest_set_bit(bitset >> nr) + nr
        best = max(best, prefix_sum[-1] - j)"
"import sys
input = sys.stdin.readline
B = 63

ones = [1] * B
for i in range(1, B):
    ones[i] = ones[i - 1] | (1 << i)

n = int(input())
A = list(map(int, input().split()))

m = (2 * n + B + 5) // B
dp = [0] * m
dp[0] = 1
sm = 0
first = 0
ans = 0

for i, a in enumerate(A):
    sm += a
    ans = max(ans, sm - first)
    
    # Update DP by shifting A[i] bits to the left
    if a:
        b, r = divmod(a, B)
        for j in range(m - 1 - b, first // B - 1, -1):
            if dp[j] == 0:
                continue
            
            if j + b + 1 < m:
                dp[j + b + 1] |= dp[j] >> (B - r)
            
            dp[j + b] |= (dp[j] & ones[B - 1 - r]) << r


    # Card gets removed from deck
    bi, ri = divmod(i, B)
    dp[bi] &= ones[B - 1] ^ (1 << ri)

    if i == first:
        # Find the index of the first unlocked card
        found = False
        for j in range(bi, m):
            if dp[j] == 0:
                continue
            
            k = 0
            mask = dp[j]
            while mask:
                if mask & 1:
                    {{completion}}
                mask >>= 1
                k += 1
            
            first = j * B + k
            found = True
            break
        
        if not found:
            break
    
print(ans)",break,"k = (first - i) * B + ri
best = max(best, prefix_sum[-1] - k)"
"import sys
input = sys.stdin.readline

def highest_set_bit(x):
    return x.bit_length() - 1

def lowest_set_bit(x):
    return highest_set_bit(x ^ (x - 1))


n = int(input())
A = [int(x) for x in input().split()]

prefix_sum = [0]
for a in A:
    prefix_sum.append(prefix_sum[-1] + a)

best = 0

bitset = 1
mask = (1 << n) - 1

for i in range(n):
    bitset |= (bitset >> i) << (A[i] + i)

    j = highest_set_bit(bitset)
    if j >= n:
        {{completion}}

    bitset &= mask

bitset = bin(bitset)[2:][::-1]
for j in range(len(bitset)):
    if bitset[j] == '1':
        best = max(best, prefix_sum[j + 1] - j)

print(best)



","j = lowest_set_bit(bitset >> n) + n
        best = max(best, prefix_sum[-1] - j)","j = lowest_set_bit(bitset >> n) + n
        best = max(best, prefix_sum[-1] - j)"
"from math import sqrt
for _ in range(int(input())):
 {{completion}}","n,c=map(int,input().split())
 ps=list(map(int,input().split()))
 sp=sum(ps); sp2=sum(p*p for p in ps)
 w = (int(sqrt(sp**2 - n*(sp2 - c))) - sp) // (2*n)
 print(w)","c -= x * x
        b += x * 2"
"'''
Author       : InHng
LastEditTime : 2023-08-29 22:37:11
:(
'''
import sys
input = sys.stdin.readline

for _ in range(int(input())):
    n, c = map(int, input().split())
    a, b = 0, 4 * n
    for x in map(int, input().split()):
        {{completion}}
    a = 4 * n
    d = b * b + a * c
    print((int(d ** 0.5) - b) // a + 1)
","c -= x * x
        b += x * 2",
"import sys

t=int(sys.stdin.readline().rstrip())

for _ in range(t):
    n,c=map(int,sys.stdin.readline().rstrip().split())

    lst = list(map(int,sys.stdin.readline().rstrip().split()))

    sums = 0
    sumsq = 0

    for i in range(n):
        {{completion}}

    ans = (-sums+(sums**2-n*(sumsq-c))**0.5)/(2*n)
    print(int(ans))
    
","sums+=lst[i]
        sumsq+=lst[i]**2","n,c=map(int,input().split())
 ps=list(map(int,input().split()))
 sp=sum(ps); sp2=sum(p*p for p in ps)
 w = (int(sqrt(sp**2 - n*(sp2 - c))) - sp) // (2*n)
 print(w)"
"import math, sys
input = sys.stdin.readline

t = int(input())

for _ in range(t):
    n = int(input())
    a = [*map(int, input().split())]

    b = sorted(a)

    for x, y in zip(a, b):
        if x % 2 != y % 2:
            {{completion}}
    else:
        print(""YES"")




","print(""NO"")
            break","print(""NO"")
            return"
"import sys
def input(): return sys.stdin.readline().strip()

numbs=int(input())
 
for i in range(numbs):
    n = int(input())
    c, x =- 1, [int(i) for i in input().split()]
    c = x.copy()
    c.sort()
    yn = ""YES""
    for i in range(n):
        if c [i] %2 != x[i] % 2:
            {{completion}}
    print(yn)
","yn = ""NO""
            break",")
print(""NO"")
return
("
"from sys import stdin
def input(): return stdin.readline()[:-1]

def solve():
    N = int(input())
    A = list(map(int, input().split()))

    B = sorted(A)

    for i, j in zip(A,B):
        if i%2 != j%2:
            {{completion}}
    print(""YES"")


for _ in range(int(input())):
    solve()","print(""NO"")
            return","print(""NO"")
            break"
"for case in range(int(input())):
    length, k = map(int, input().split())
    nums = list(map(int, input().split()))
    nums.sort()

    curr = 0

    l = 0

    for i in range(1, length):
        if nums[i] - nums[i-1] > k:
            {{completion}}
    curr = max(curr, length - l)

    print(length - curr)
","curr = max(curr, i - l)
            l = i","curr = max(curr, length - l)"
"
import sys
input = sys.stdin.readline
MOD = 10**9 + 7

def read_array(factory):
    return [factory(num) for num in input().strip().split()]
def print_array(arr):
    print("" "".join(map(str, arr)))

def solve(n, k, a):
    a.sort()
    cnt = 0
    max_cnt = 0
    for i in range(1, len(a)):
        if a[i] - a[i-1] > k:
            cnt = 0
        else:
            {{completion}}
        max_cnt = max(cnt, max_cnt)

    return n - max_cnt - 1

if __name__ == ""__main__"":
    # Read in input:
    t = int(input())

    # Call solution:
    for _ in range(t):
        n, k = read_array(int)
        a = read_array(int)
        ans = solve(n, k, a)
        print(ans)

",cnt += 1,cnt += 1
"n = int(input())
for i in range(n):
    a, b = map(int, input().split())
    lists = [int(j) for j in input().split()]
    lists.sort(reverse=True)
    p, count = 0, 0
    for j in range(len(lists) - 1):
        if lists[j] - lists[j + 1] <= b:
            count += 1
        else:
            {{completion}}
    p = max(p, count)

    if p == a:
        print(0)
    else:
        print(a-p-1)","p = max(p, count)
            count = 0","p = max(p, j - p)
            p = j + 1"
"for s in[*open(0)][2::2]:{{completion}}
","print('YNEOS'[sum(map(int,s.split()))%2::2])","input()
    print(""NO"" if sum(map(int, input().split())) & 1 else ""YES"")"
"for _ in range(int(input())):
    n=int(input())
    lst=list(map(int,input().split()))
    c=0
    for i in lst:
        if i%2!=0:
            {{completion}}
    print('YES' if c%2==0 else ""NO"")",c+=1,c+=1
"for _ in range(int(input())):
    {{completion}}","input()
    print(""NO"" if sum(map(int, input().split())) & 1 else ""YES"")","print('YNEOS'[sum(map(int,input().split()))%2::2])"
"import sys 
input = sys.stdin.buffer.readline 

def find_root(root_dict, x):
    L = []
    while x != root_dict[x]:
        {{completion}}
    for y in L:
        root_dict[y] = x
    return x 
    
p = 998244353

def process(n, S, G):
    root_dict = [i for i in range(n+1)]
    root_size = [1 for i in range(n+1)]
    G = sorted(G, key=lambda a: a[2], reverse=True)
    answer = 1
    while len(G) > 0:
        u, v, w = G.pop()
        u1 = find_root(root_dict, u)
        v1 = find_root(root_dict, v)
        sizes = S-w+1
        g1 = root_size[u1]
        g2 = root_size[v1]
        entry = pow(sizes, g1*g2-1, p)
        answer = (answer*entry) % p 
        root_dict[u1] = v1 
        root_size[v1]+=g1 
    print(answer)
        
        

t = int(input())
for i in range(t):
    n, S = [int(x) for x in input().split()]
    G = []
    for j in range(n-1): 
        u, v, w = [int(x) for x in input().split()]
        G.append([u, v, w])
    process(n, S, G)","L.append(x)
        x = root_dict[x]","L = []
while x != root_dict[x]:
    L.append(x)
    x = root_dict[x]
for y in L:
    root_dict[y] = x
return x"
"import sys
input = sys.stdin.readline
INF = 998244353

def find(n) :
    d = []
    while U[n] !=  n : d.append(n) ; n = U[n]
    for num in d : U[num] = n

    return n

for _ in range(int(input())) :
    n, S = map(int,input().split()) ; I = [tuple(map(int,input().split())) for _ in range(n-1)]

    I.sort(key = lambda x : -x[2]) ; U = [x for x in range(1+n)] ; D = [1] * (n+1)

    Ans = 1
    while I :
        a, b, c = I.pop() ; p, q = find(a), find(b)

        r = D[p]*D[q]-1 ; s = S-c+1

        R = []
        while r > 1 : R.append(r%2) ; r //= 2

        while R :
            s = (s*s)%INF
            if R.pop() == 1 : {{completion}}

        if D[p]*D[q]-1 != 0 : Ans = (Ans*s)%INF
        if p < q : U[q] = p ; D[p] += D[q]
        else : U[p] = q ; D[q] += D[p]

    print(Ans)",s = (s*(S-c+1))%INF,while r > 1 : R.append(r%2) ; r //= 2
"q = ' ' + input()
n = len(q) - 1
F = [0] * 101
G = [0] * 101
cnt, cur = 0, 0
F[0], G[0] = 1, 1
for i in range(1, n + 1) :
	if q[i] == '0' :
		cnt += 1
		for j in range(cnt, 0, -1) :
			F[j] |= F[j - 1] << i
	else :
		cur += cnt
		for j in range(i - cnt, 0, -1) :
			{{completion}}
tag = (n * (n - 1) - cnt * (cnt - 1) - (n - cnt) * (n - cnt - 1)) // 4
for x in range(n + 1) :
	if (F[x] << cur) & (G[x] << tag) :
		print(x)
		break
",G[j] |= G[j - 1] << i,G[j] |= G[j - 1] << i
"q = ' ' + input()
n = len(q) - 1#input
F = [0] * 101
G = [0] * 101
cnt, cur = 0, 0
F[0], G[0] = 1, 1
for i in range(1, n + 1) :
	if q[i] == '0' :
		cnt += 1
		for j in range(cnt, 0, -1) :
			F[j] |= F[j - 1] << i
	else :
		cur += cnt
		for j in range(i - cnt, 0, -1) :
			{{completion}}
tag = (n * (n - 1) - cnt * (cnt - 1) - (n - cnt) * (n - cnt - 1)) // 4
for x in range(n + 1) :
	if (F[x] << cur) & (G[x] << tag) :
		print(x)#printing output
		break",G[j] |= G[j - 1] << i,G[j] |= G[j - 1] << i
"s = ' ' + input()
n = len(s) - 1
F = [0] * 101
G = [0] * 101
cnt, cur = 0, 0
F[0], G[0] = 1, 1
for i in range(1, n + 1) :
	if s[i] == '0' :
		cnt += 1
		for j in range(cnt, 0, -1) :
			F[j] |= F[j - 1] << i
	else :
		cur += cnt
		for j in range(i - cnt, 0, -1) :
			{{completion}}
tag = (n * (n - 1) - cnt * (cnt - 1) - (n - cnt) * (n - cnt - 1)) // 4
for x in range(n + 1) :
	if (F[x] << cur) & (G[x] << tag) :
		print(x)
		break
# TEST 19",G[j] |= G[j - 1] << i,G[j] |= G[j - 1] << i
"T = int(input())
while T:
    T -= 1
    n = int(input())
    mn = -1
    for i in range(n):
        x,y = map(int, input().split())
        if x < 11 and y > mn:
            {{completion}}
    print( ans )","ans = i + 1
            mn = y","if x < 11 and y > mn:
    mn = y
    ans = i"
"x=int(input())
for i in range(x):
   z=int(input())
   c=0
   s=0
   for i in range(1,z+1):
        a,b=map(int, input().split())     
        if a<=10 and b>c:
            {{completion}}
   print(s)","c=b
            s=i","c=b
s=i"
"t = int(input())

for _ in range(t):
    n = int(input())
    r = []
    
    for i in range(n):
        a, b = map(int, input().split())
        if a <= 10:
            {{completion}}
    
    r.sort(key=lambda x: x[1], reverse=True)
    print(r[0][0])
","r.append((i + 1, b))","r.append((i, b))"
"from sys import stdin
input = lambda: stdin.buffer.readline().decode().strip()

M = 998244353

for _ in range(int(input())):
    n, k = map(int, input().split())
    dp = [[0]*(k+1) for _ in range(n+1)]
    dp[0] = [1]*(k+1)

    for req in range(n+1):
        for last in range(1, k+1):
            for i in range(1, k+2-last):
                if last*i > req: {{completion}}
                dp[req][last] += dp[req - last*i][i]
                dp[req][last] %= M

    print(sum(dp[n]) % M)",break,break
"M = 998244353
 
t = int(input())
 
for _ in range(t):
    n, k = map(int, input().split())
    
    dp = [[1] * (k + 1)] + [[0 for _ in range(k + 1)] for _ in range(n)]
    
    for i in range(1, n + 1):
        for j in range(0, k + 1):
            for l in range(0, k - j):
                if i - (l + 1) * (j + 1) < 0:
                    {{completion}}
                dp[i][j] = (dp[i][j] + dp[i - (l + 1) * (j + 1)][l]) % M
 
    ans = 0
    for j in range(0, k + l):
        ans = (ans + dp[n][j]) % M
    print(ans)",break,break
"# https://codeforces.com/contest/1920

import sys

input = lambda: sys.stdin.readline().rstrip()  # faster!

MOD = 998244353


def ff(i, j, k):
    return i * k + j


def solve_case():
    n, k = map(int, input().split())  # 1 <= k <= n <= 2_500

    dp = [0] * (k * (n + 1))

    for j in range(k):
        dp[ff(0, j, k)] = 1

    for i in range(n + 1):
        for j in range(k):
            if dp[ff(i, j, k)]:
                for t in range(k):
                    if j + t + 1 > k:
                        {{completion}}
                    add = (j + 1) * (t + 1)
                    if i + add > n:
                        break
                    dp[ff(i + add, t, k)] += dp[ff(i, j, k)]
                    if dp[ff(i + add, t, k)] >= MOD:
                        dp[ff(i + add, t, k)] -= MOD

    ans = sum(dp[ff(n, j, k)] for j in range(k))
    ans %= MOD
    print(ans)


for _ in range(int(input())):
    solve_case()
",break,break
"for n in[*map(int,open(0))][1:]:
 i=1
 while n%i<1:{{completion}}
 print(i-1)",i+=1,i+=1
"for k in[*map(int,open(0))][1:]:
 i=1
 while k%i<1:{{completion}}
 print(i-1)",i+=1,i+=1
"t = int(input())
for _ in range(t):
    n = int(input())
    a = list(map(int, input().split()))
    i = n-1
    while(i>0):
        if a[i]<a[i-1]:
            {{completion}}
        i-=1
    if i==0:
        print(0)
    else:
        a = a[:i+1]
        print(max(a))",break,"answer = a[i-1]
            a[i-1] = answer
            break"
"def main():
    t = int(input())
    results = []

    for _ in range(t):
        n = int(input())
        arr = list(map(int, input().split()))
        max_element = 0

        for i in range(n - 1):
            if arr[i] > arr[i + 1] and arr[i] > max_element:
                {{completion}}

        results.append(max_element)

    for result in results:
        print(result)

if __name__ == ""__main__"":
    main()
",max_element = arr[i],break
"#https://codeforces.com/problemset/problem/1856/A

t = int(input())
answer_list = []
while t > 0:
    n = int(input())
    a = [int(x) for x in input().split()]
    a_sorted = sorted(a)
    answer = 0
    for x in range(n-1, -1, -1):
        if(a[x] != a_sorted[x]):
            {{completion}}
    answer_list.append(answer)
    t-=1
for answer in answer_list:
    print(answer)","answer = a_sorted[x]
            break",break
"for s in[*open(0)][2::2]:{{completion}}
","print('NYOE S'[1<len(a:=s.split())<=sum(map(int,a))-a.count('1')::2])","print('NYOE S'[1<len(a:=s.split())<=sum(map(int,a))-a.count('1')::2])"
"for s in[*open(0)][2::2]:
    {{completion}}","print('NYOE S'[1<len(a:=s.split())<=sum(map(int,a))-a.count('1')::2])","print('NYOE S'[1<len(a:=s.split())<=sum(map(int,a))-a.count('1')::2])"
for san in[*open(0)][2::2]:{{completion}},"print('NYOE S'[1<len(a:=san.split())<=sum(map(int,a))-a.count('1')::2])","print('NYOE S'[1<len(a:=s.split())<=sum(map(int,a))-a.count('1')::2])"
"import sys
input = sys.stdin.readline
MOD = 998244353

n, k = map(int, input().split())
dp = [0] * k
dp[0] = 1
ans = 0

for i in range(n):
    ndp = [0] * k
    sm = 0
    for j in range(k - 1, -1, -1):
        sm = (sm + dp[j]) % MOD
        if j > 0:
            {{completion}}
        ndp[(j + 1) % k] += (k - j) * dp[j]
        ndp[(j + 1) % k] %= MOD

    dp = ndp
    ans += dp[0] * pow(k, n - 1 - i, MOD) % MOD
    ans %= MOD

print(ans)",ndp[j] += sm,"p = (p + dp[j]) % MOD
                    ndp[j] = (ndp[j] + p) % MOD"
"n, k = map(int, input().split())
mod = 998244353

factorial = [1]
for i in range(1, k+1):
    factorial.append(factorial[-1] * i % mod)

pw = [pow(k,-j,mod) for j in range(k+1)]
dp = []
for i in range(n-k+1):
    dp.append(factorial[k] * pow(k, n-k, mod) % mod)
    for j in range(1, min(i+1, k)):
        dp[i] -= (dp[i-j] * pw[j] * factorial[j]) % mod
        if dp[i] < 0: {{completion}}

print(sum(dp) % mod)",dp[i] += mod,dp[i] += (dp[i-j] * pw[j] * factorial[j]) % mod
"import sys
input = sys.stdin.buffer.readline

m = 998244353

n, k = map(int, input().split())

ans = 0

dp = [0] * (k + 1)
dp[0] = 1
for i in range(n+1):
    ndp = [0] * (k + 1)
    p = 0
    for j in range(k, -1, -1):
        if dp[j]:
            if j != k:
                ndp[j+1] = (ndp[j+1] + (k-j)*dp[j]) % m
            if j:
                if j == k:
                    # Ensure subs don't intersect
                    ndp[1] = (ndp[1] + k*dp[j]) % m

                    ans = (ans + dp[j] * pow(k, n-i, m)) % m
                else:
                    {{completion}}
    dp = ndp

print(ans)
","p = (p + dp[j]) % m
                    ndp[j] = (ndp[j] + p) % m",ndp[j] += (k-j)*dp[j]
"y = int(input())
 
for _ in range(y):
    {{completion}}","p, q, k = (int(v) for v in input().split())
    l= min(p,q+k+1)
    print(l*2-1)","b, c, h = map(int, input().split())
        print(min(b - 1, c + h) * 2 + 1)"
"from sys import stdin



n = int(stdin.readline())

for ligne in stdin:

    ligne = ligne.split("" "")
    b=int(ligne[0])

    c=int(ligne[1])
    h=int(ligne[2])
    if b>c+h:
            print(2*(c+h)+1)
    elif b<=c+h:
            {{completion}}
 		  	     	    		    	 	 	",print(2*b-1),"p, q, k = (int(v) for v in input().split())
    l= min(p,q+k+1)
    print(l*2-1)"
"def main():
    for _ in range(int(input())):
        {{completion}}

if __name__ == ""__main__"":
    main()
","b, c, h = map(int, input().split())
        print(min(b - 1, c + h) * 2 + 1)","p, q, k = (int(v) for v in input().split())
    l= min(p,q+k+1)
    print(l*2-1)"
"import sys
input = sys.stdin.readline

for _ in range(int(input())):
    n = int(input())
    a = [int(i) for i in input().split()]
    b = [int(i) for i in input().split()]
    mx = -2*10**9-1
    ans = []
    for i in range(n):
        d = a[i] - b[i]
        if d > mx:
            ans = [i+1]
            mx = d
        elif d == mx:
            {{completion}}
    print(len(ans))
    print(*ans)
",ans.append(i+1),ans.append(i+1)
"from sys import stdin
input = stdin.readline


def solve():
    input()
    edges = []
    stream = zip(
        map(int, input().split()),
        map(int, input().split()),
    )
    best = float(""-inf"")
    result = []
    for pos, (a, b) in enumerate(stream):
        cost = a - b
        if cost > best:
            {{completion}}
        if cost == best:
            result.append(pos + 1)

    result.sort()
    print(len(result))
    return "" "".join(str(x) for x in result)


for _ in range(int(input())):
    print(solve())
","best = cost
            result = []","best = cost
result = [pos + 1]"
"from sys import stdin
input=lambda :stdin.readline()[:-1]

def solve():
  n=int(input())
  a=list(map(int,input().split()))
  b=list(map(int,input().split()))
  c=[a[i]-b[i] for i in range(n)]
  mx=max(c)
  ans=[]
  for i in range(n):
    if c[i]==mx:
      {{completion}}
  print(len(ans))
  print(*ans)


for _ in range(int(input())):
  solve()",ans.append(i+1),ans.append(i+1)
for s in[*open(0)][2::2]:{{completion}},"print(sum(x==str(i)for
i,x in enumerate(s.split(),1))+1>>1)","n = int(input())
    c = list(map(int, input().split()))
    res = sum(1 for i in range(1, n + 1) if i == c[i - 1])
    print((res + 1) // 2)"
"for _ in range(int(input())):
    {{completion}}

","n = int(input())
    c = list(map(int, input().split()))
    res = sum(1 for i in range(1, n + 1) if i == c[i - 1])
    print((res + 1) // 2)","print(sum(x==str(i)for
i,x in enumerate(s.split(),1))+1>>1)"
"t=int(input())
for i in range(t):
    n=int(input())
    p=list(map(int,input().split()))
    say=0
    for i in range(n):
        if p[i]==i+1:
            {{completion}}
    print((say+1)//2)",say+=1,"n = int(input())
    c = list(map(int, input().split()))
    res = sum(1 for i in range(1, n + 1) if i == c[i - 1])
    print((res + 1) // 2)"
"import sys;input=sys.stdin.readline
R=lambda:list(map(int,input().split()))
for _ in  range(int(input())):
    n=int(input())
    a=R()
    m1=m2=10**18
    res=0
    for i in a:
        if i<m1: m1=i
        elif i<m2: {{completion}}
    print(res)
",m2=i; res+=1,m2=i
"import sys
for _ in range(int(sys.stdin.readline())):
    n=int(sys.stdin.readline())
    a=list(map(int,sys.stdin.readline().split()))

    A,B,res=n+1,a[0],0
    for x in a:
        if x>B and x<A:
            {{completion}}
        B=min(B,x)
    print(res)","res+=1
            A=x","A,B=B,x; res+=1"
"import sys
input = sys.stdin.readline

def solve():
    n = int(input())
    P = [int(x) - 1 for x in input().split()]

    mn = n
    y = n
    state = [0] * n
    state[0] = 1
    for i, p in enumerate(P):
        if p < mn:
            {{completion}}

        if y < p:
            state[i] = 1
            continue

        y = min(y, p)
    
    return n - sum(state)

T = int(input())
out = [solve() for _ in range(T)]
print(""\n"".join(map(str, out)))","mn = p
            state[i] = 1
            continue","mn = min(mn, p)
y = min(y, p)"
"for s in[*open(0)][1:]:{{completion}}
","m,k,a,b=map(int,s.split());x=min(m%k,a);m-=x;print(max(m//k-(a-x)//k-b,0)+m%k)","m,k,a,b=map(int,s.split());x=min(m%k,a);m-=x;print(max(m//k-(a-x)//k-b,0)+m%k)"
for s in[*open(0)][1:]:{{completion}},"m,k,a,b=map(int,s.split());x=min(m%k,a);m-=x;print(max(m//k-(a-x)//k-b,0)+m%k)","m,k,a,b=map(int,s.split());x=min(m%k,a);m-=x;print(max(m//k-(a-x)//k-b,0)+m%k)"
"from sys import stdin
input = lambda: stdin.readline().rstrip('\r\n')



for _ in range(int(input())):
    w, f = map(int, input().split())
    n = int(input())
    a = list(map(int, input().split()))
    sm = ans = sum(a)
    dp = 1

    for x in a:
        dp |= dp << x

    for i, x in enumerate(bin(dp)[::-1]):
        if x == '1':
            {{completion}}
            
    print(ans)","ans = min(ans, max((i + w - 1) // w, (sm - i + f - 1) // f))","j=sm-i
      ans=min(ans,max((i+w-1)//w,(j+f-1)//f))"
"from sys import stdin
input=lambda :stdin.readline()[:-1]

from heapq import heappop, heappush

def solve():
  w,f=map(int,input().split())
  n=int(input())
  a=list(map(int,input().split()))
  a.sort()
  sm=sum(a)
  dp=1
  for i in a:
    dp|=dp<<i
  res=bin(dp)[2:]
  ans=1<<60
  for i in range(sm+1):
    if res[i]=='1':
      {{completion}}
  print(ans)
  

for _ in range(int(input())):
  solve()","j=sm-i
      ans=min(ans,max((i+w-1)//w,(j+f-1)//f))","ans=min(ans,max((i+w-1)//w,(sm-i+f-1)//f))"
"import os, gc
import sys
input = sys.stdin.buffer.readline
 
for _ in range(int(input())):
    n = int(input())
    a = list(map(int, input().split()))
    pos = [0] * n
    for i in range(n-2, -1, -1):
        pos[i] = (a[i] >= a[i+1]) + pos[i+1]
    ans = pos[0]
    nev = 1
    for i in range(n):
        if i and a[i] >= a[i-1]:
            nev += 1
        if i == n-1:
            ans = min(ans, nev)
        else:
            {{completion}}
    print(ans)","ans = min(ans, nev + pos[i+1])","ans = min(ans, nev + pos[i+1])"
"import sys

R = sys.stdin.readline
inf = int(1e18)
mod = int(1e9) + 7


def get_int() -> int:
    return int(R())


def get_str() -> str:
    return R().strip()


def get_int_list() -> list:
    return list(map(int, R().strip().split(' ')))


def init_matrix(n_, m_, value_=0) -> list:
    return [[value_] * m_ for _ in range(n_)]


def solve():
    n = get_int()
    a = get_int_list()

    pos = 0
    for i in range(1, n):
        if a[i] <= a[i - 1]:
            {{completion}}

    ans = pos
    neg = 1
    for i in range(n):
        if i + 1 < n:
            pos -= a[i] >= a[i + 1]

        if i > 0:
            neg += a[i] >= a[i - 1]

        ans = min(ans, neg + pos)

    print(ans)


for _ in range(get_int()):
    solve()
",pos += 1,"ans = min(ans, neg + pos + 1)"
"from sys import stdin, stdout

t = int(stdin.readline())

for _ in range(t):
    n = int(stdin.readline())
    a = [int(x) for x in stdin.readline().split()]

    prefix = [0]
    for i in range(1,n):
        if a[i-1] <= a[i]:
            prefix.append(prefix[-1]+1)
        else:
            prefix.append(prefix[-1])

    suffix = [0]*n
    for i in range(n-2,-1,-1):
        if a[i+1] <= a[i]:
            suffix[i] = suffix[i+1]+1
        else:
            suffix[i] = suffix[i+1]

    answer = n
    left = 0
    for i in range(n):
        if i == n-1 or a[i+1] <= a[i]:
            temp = suffix[i]
            if left > 0:
                {{completion}}
            answer = min(answer, temp)

            left = i+1

    stdout.write(str(answer)+""\n"")
",temp += 1 + prefix[left-1],"answer = min(answer, temp + prefix[left])"
"for _ in range(int(input())):
    s=''
    for i in range(8):
        {{completion}}
    print(s.replace('.',''))",s+=input(),"print(''.join([s for s in [input().replace('.', '') for _ in range(8)] if s]))"
"t=int(input())
for k in range(0,t):
    x=[]
    for j in range(0,8):
        s=input()
        for i in s:
            if i!=""."":
                {{completion}}
    s_=''
    for i in x:
        s_+=i
    print(s_)
",x.append(i),"print(''.join([s for s in [input().replace('.', '') for _ in range(8)] if s]))"
"for _ in range(int(input())):
    {{completion}}
","print(''.join([s for s in [input().replace('.', '') for _ in range(8)] if s]))",s+=input()
"for line in [*open(0)][1:]:
    {{completion}}
","x, y, z = map(int, line.split())
    print('SFeicrosntd'[x > y - z % 2::2])","a,b,c=map(int,line.split());print(""SFeicrosntd""[a+c%2>b::2])"
for g in[*open(0)][1:]:{{completion}},"a,b,c=map(int,g.split());print(""SFeicrosntd""[a+c%2>b::2])","x, y, z = map(int, g.split())
    print('SFeicrosntd'[x > y - z % 2::2])"
for sss in[*open(0)][1:]:{{completion}},"d,f,c=map(int,sss.split());print('SFeicrosntd'[d>f-c%2::2])","a,b,c=map(int,sss.split());print(""SFeicrosntd""[a+c%2>b::2])"
"import sys
input = sys.stdin.readline

# from math import gcd, isqrt
# import bisect #-->For bisect.bisect_left=lower_bound and bisect_right=upper_bound)

t = 1
t = int(input())
for _ in range(t):
    n = int(input())
    m1 = []
    mi = 9999999999
    for i in range(n):
        {{completion}}
    m1.sort()
    ans = mi + sum(m1) - m1[0]
    print(ans)","m = int(input())
        l = sorted(list(map(int, input().split())))
        m1.append(l[1])
        mi = min(mi, l[0])","m = int(input())
        b = list(map(int,input().split()))
        b.sort()
        diff = b[1]-b[0]
        ans += b[1]
        temp = min(b[1], temp)
        temp2 = min(b[0], temp2)"
"import sys 
input = sys.stdin.buffer.readline 

def process(A):
    n = len(A)
    if n==1:
        answer = min(A[0])
    else:
        L0 = []
        L1 = []
        for row in A:
            {{completion}}
        answer = sum(L1)-min(L1)+min(L0)
    
    sys.stdout.write(f'{answer}\n')
    
t = int(input())
for i in range(t):
    n = int(input())
    A = []
    for j in range(n):
        m = int(input())
        row = [int(x) for x in input().split()]
        A.append(row)
    process(A)
    ","row.sort()
            L0.append(row[0])
            L1.append(row[1])","m = int(input())
        b = list(map(int,input().split()))
        b.sort()
        diff = b[1]-b[0]
        ans += b[1]
        temp = min(b[1], temp)
        temp2 = min(b[0], temp2)"
"import sys
#from bisect import bisect_right as br
#from collections import Counter
input = sys.stdin.readline

for _ in range(int(input())):
    n = int(input())
    temp = int(1e9)
    temp2 = int(1e9)
    ans = 0
    for z in range(n):
        {{completion}}
    print(ans-temp+temp2)","m = int(input())
        b = list(map(int,input().split()))
        b.sort()
        diff = b[1]-b[0]
        ans += b[1]
        temp = min(b[1], temp)
        temp2 = min(b[0], temp2)","row.sort()
            temp = min(temp, row[0])
            temp2 = min(temp2, row[1])"
"for n in[*map(int,open(0))][1:]:{{completion}}
",k=int((2*n+1)**.5);print((n*(4*n*n-6*n-10)-k*(2*k*k+3*k-8))//12+n*k),"def f(n):
    return n*(4*n*n-6*n-10)
def g(n):
    return (n*(n+1)*(2*n+1))//6
def h(n):
    return (n*(n+1)*(2*n+1)*(3*n+1))//24
def i(n):
    return (n*(n+1)*(2*n+1)*(3*n+1)*(4*n+1))//120
def j"
"for i in[*map(int,open(0))][1:]:
    {{completion}}
","j=int((2*i+1)**.5);
    print((i*(4*i*i-6*i-10)-j*(2*j*j+3*j-8))//12+i*j)",
"input_data = [*map(int, open(0))][1:]

for n in input_data:
    {{completion}}
","k = int((2 * n + 1) ** 0.5)
    result = (n * (4 * n * n - 6 * n - 10) - k * (2 * k * k + 3 * k - 8)) // 12 + n * k
    print(result)",k=int((2*n+1)**.5);print((n*(4*n*n-6*n-10)-k*(2*k*k+3*k-8))//12+n*k)
"input_lines = [*open(0)][2::2]

for line in input_lines:
    {{completion}}
","values = [*map(int, line.split())]
    result = max(0, min((y - x + 2) >> 1 for x, y in zip(values, values[1:])))
    print(result)","n = int(input())
a = list(map(int, input().split()))
m = 10**9
for i in range(n-1):
    if a[i] > a[i+1]:
        m = min(m, a[i+1] - a[i])
print(m//2+1)"
"for _ in range(int(input())):
    n=int(input())
    a=list(map(int,input().split()))
    m=10**9
    for i in range(n-1):
        if a[i]>a[i+1]:
            {{completion}}
        m=min(m,a[i+1]-a[i])
    print(m//2+1)
","m=-1
            break","for _ in range(int(input())):
    n=int(input())
    a=list(map(int,input().split()))
    m=10**9
    for i in range(n-1):
        if a[i]>a[i+1]:
            a[i+1]-=a[i]
            a[i]+=m
        m=min(m,a[i+1]-a[i])
    print(m//2+1)"
"import sys

T = int(sys.stdin.readline())

for _ in range(T):
    n = int(sys.stdin.readline())
    nums = list(map(int, sys.stdin.readline().split()))
    
    diff = float('inf')
    sorted = True
    for i in range(n):
        if i > 0:
            {{completion}}
    
    if not sorted:
        print(0)
        continue
    
    print(diff//2 + 1)
","diff = min(nums[i] - nums[i - 1], diff)
            sorted &= nums[i] >= nums[i - 1]","if sorted:
    diff = 0"
"for s in[*open(0)][1:]:
 n=i=j=len(a:=[0,*map(int,s[:-1])]);c=0
 while i:{{completion}}
 print(''.join(map(str,a[:j])).lstrip('0')+'0'*(n-j))","i-=1;a[i]+=c;j=(j,i)[c:=a[i]>4]","a[i]=0
while i and a[i-1]>=5:
 i-=1
a[i]+=1
while i<j and a[i]==9:
 i+=1
if i<j:
 a[i]+=1
else:
 a[0]=1
i=jReplace the ""# TODO: Your code here"" in the code above with the appropriate block. Provide only the replaced block."
"for _ in range(int(input())):
	s = input();n = len(s);p = 0;lst = -1
	for i in range(n - 1, -1, -1):
		if int(s[i]) + p >= 5:p = 1;lst = i
		else:{{completion}}
	if lst > -1:
		if lst == 0:print('1' + ('0' * n))
		else:print(s[: lst - 1] + str(int(s[lst - 1]) + 1) + ('0' * (n - lst)))
	else:print(s)",p = 0,"if lst > -1:
	if lst == 0:print('1' + ('0' * n))
	else:print(s[: lst - 1] + str(int(s[lst - 1]) + 1) + ('0' * (n - lst)))
else:print(s)"
"def f(s):
    n = len(s)
    pre4 = -1
    for i in range(n):
        if int(s[i])>=5:
            if i==0:
                return '1'+('0'*n)
            else:
                curr = i-1
                while(curr >=0 and s[curr]=='4'):
                    curr -= 1
 
                if curr==-1:
                    return '1'+('0'*n)
                else:
                    {{completion}}
    return s
 
                
tc = int(input())
while tc > 0:
    s = input()
    print(f(s))
    tc = tc-1","digit = int(s[curr])
                    return s[:curr]+str(digit+1)+('0'*(n-1-curr))","i-=1;a[i]+=c;j=(j,i)[c:=a[i]>4]"
"# O(n*m*k)

import sys
input = sys.stdin.buffer.readline

n, m, k = map(int, input().split())

a = [[0]*n for _ in range(m)]
for i in range(n):
    row = list(map(int, input().split()))
    for j in range(m):
        a[j][i] = row[j]

for i in range(m):
    a[i].sort(reverse=True)

dp = [[-1e18]*n for _ in range(k)]
for i in range(k):
    dp[i][0] = a[0+i][0]

for i in range(m-k):
    dp2 = [[-1e18] * n for _ in range(k)]
    mx = -1e18  # Prefix max to remove O(k) factor
    for j in range(k):
        for z in range(n):
            mx = max(mx, dp[j][z])
            if j and z != n-1:
                {{completion}}
        dp2[j][0] = max(dp2[j][0], mx + a[i+1+j][0])

    dp = dp2

ans = 0
for j in range(k):
    for z in range(n):
        ans = max(ans, dp[j][z])

print(ans)
","dp2[j-1][z+1] = max(dp2[j-1][z+1], dp[j][z] + a[i+1+j-1][z+1])","dp2[j][z] = max(dp2[j][z], mx + a[i+1+j][z])"
"import sys
input = sys.stdin.readline 

from math import isqrt

t = 1 
t = int(input())
for i in range(t):
    {{completion}}","n = int(input())
    val = (1 + isqrt(1 + 8*n)) // 2
    ans = val + max(0, n - ((val)*(val-1)//2))
    print(ans)",r = mid -1
"#import sys
#input = sys.stdin.readline
#print = sys.stdout.write
 
tm = int(input())
ans = ['']*tm
for t in range(tm):
    n = int(input())
    if n <= 1:
        {{completion}}
    res = int((2*n + 0.25)**0.5 + 0.500001)
    if n - res*(res - 1)//2 < 0:
        res -= 1
    res += n - res*(res - 1)//2
    ans[t] = str(res)
print('\n'.join(ans))","ans[t] = '2'
        continue","n = int(input())
    val = (1 + isqrt(1 + 8*n)) // 2
    ans = val + max(0, n - ((val)*(val-1)//2))
    print(ans)"
"import sys
input = sys.stdin.readline

def solve():
    n = int(input())
    l = 1
    r = 10**10+2
    while l < r:
        mid = (l+r+1)//2
        if mid *(mid-1)//2 <= n:
            l = mid
        else:
            {{completion}}
    # print(l) 
    print(l +n- l * (l-1)//2)


for _ in range(int(input())):
    solve()",r = mid -1,"n = int(input())
    val = (1 + isqrt(1 + 8*n)) // 2
    ans = val + max(0, n - ((val)*(val-1)//2))
    print(ans)"
"# https://codeforces.com/contest/1864

import sys

input = lambda: sys.stdin.readline().rstrip()  # faster!


def solve_case():
    n = int(input())
    m = [input() for _ in range(n)]

    ans = 0

    diag_inc = [0] * (2 * n)
    diag_dec = [0] * (3 * n)
    changed = [0] * n

    for r in range(n):

        changed[0] = 0
        for i in range(r + 1):
            changed[0] ^= diag_inc[i]
        for c in range(1, n):
            changed[c] = changed[c - 1] ^ diag_inc[r + c] ^ diag_dec[r - c + n]

        for c in range(n):
            if changed[c] != int(m[r][c] == ""1""):
                {{completion}}

    print(ans)


for _ in range(int(input())):
    solve_case()
","ans += 1
                diag_inc[r + c] ^= 1
                diag_dec[r - c - 1 + n] ^= 1","ans += 1
                diag_inc[i] ^= 1
                diag_dec[r - c + n] ^= 1"
"import sys

input = sys.stdin.readline

for _ in range(int(input())):
    n = int(input())
    left, right = [0] * (n + 1), [0] * (n + 1)
    ans = 0
    for i in range(n):
        s = input()
        vals = [0] * (n + 1)
        last = left[0]
        for j in range(1, n):
            left[j - 1] = left[j]
        left[0] ^= last
        left[n - 1] = 0
        for j in range(n - 2, -1, -1):
            right[j + 1] = right[j]
        for j in range(n):
            vals[j] ^= left[j] ^ right[j] ^ (vals[j - 1] if j else 0)
        for j in range(n):
            if int(s[j]) ^ (vals[j] & 1):
                {{completion}}
    print(ans)
","ans += 1
                left[j] ^= 1
                right[j + 1] ^= 1","ans += 1
                left[j - 1] ^= 1
                right[j + 1] ^= 1"
"MOD = 998244353
N, K = map(int, input().split())
ans, roll1, roll2 = 1, 1, 1
for l in range(1, N+1):
    if K+1-l == 0: {{completion}}
    curr = (MOD + pow(l+1, K+1-l, MOD) - pow(l, K+1-l, MOD)) % MOD
    roll1 = (roll1 * l) % MOD
    roll2 = (roll2 * (N+1-l)) % MOD
    ans = (ans + curr*roll1*roll2) % MOD

print(ans)
",break,break
"mod = 998244353
fact = [1]*200001
for i in range(1,200001):
    {{completion}}
invfact = [pow(f,-1,mod) for f in fact]

n,k = map(int,input().split())
ans = 1
for x in range(1,min(n+1,k+1)):
    add = pow(x+1,k-x+1,mod) - pow(x,k-x+1,mod)
    add = (add*fact[x])%mod
    add = (add*fact[n])%mod
    add = (add*invfact[n-x])%mod
    ans = (ans+add)%mod
print(ans)
",fact[i]= (fact[i-1]*i)%mod,break
"MOD = 998244353
N, K = map(int, input().split())
ans, roll1, roll2 = 1, 1, 1
for l in range(1, N+1):
    if K+1-l == 0: {{completion}}
    curr = (MOD + pow(l+1, K+1-l, MOD) - pow(l, K+1-l, MOD)) % MOD
    roll1 = (roll1 * l) % MOD
    roll2 = (roll2 * (N+1-l)) % MOD
    ans = (ans + curr*roll1*roll2) % MOD

print(ans)",break,break
"import sys
input = sys.stdin.readline
o = lambda: map(int, input().split())
 
for _ in range(int(input())):
    h,c = o()
    grid = []
    for _ in range(h):
        grid.append(list(input().strip()))
    ans = []
    e = {0:""W"",1:""B""}
    flag = True
    t = 0
    for i in range(h):
        for j in range(c):
            if grid[i][j] == ""U"":
                grid[i][j] = e[t]
                grid[i+1][j] = e[(t+1)%2]
                t = (t+1) % 2
        if t:
            flag = False
            break
    if flag:
        for j in range(c):
            for i in range(h):
                if grid[i][j] == ""L"":
                    {{completion}}
            if t:
                flag = False
                break
        if flag:
            for row in grid:
                print("""".join(row))
        else:
            print(-1)
    else:
        print(-1)","grid[i][j] = e[t]
                    grid[i][j+1] = e[(t + 1) % 2]
                    t = (t + 1) % 2","grid[i][j] = e[t]
                grid[i+1][j] = e[(t+1)%2]
                t = (t+1) % 2"
"import sys
input = sys.stdin.readline

t=int(input())
for tests in range(t):
    n,m=map(int,input().split())
    MAP=[input().strip() for i in range(n)]

    ANS=[["".""]*m for i in range(n)]

    flag=1

    for i in range(n-1):
        count=0
        for j in range(m):
            if MAP[i][j]==""U"":
                if count==0:
                    ANS[i][j]=""W""
                    ANS[i+1][j]=""B""
                else:
                    {{completion}}

                count^=1

        if count!=0:
            flag=0

    for i in range(m-1):
        count=0
        for j in range(n):
            if MAP[j][i]==""L"":
                if count==0:
                    ANS[j][i]=""W""
                    ANS[j][i+1]=""B""
                else:
                    ANS[j][i]=""B""
                    ANS[j][i+1]=""W""

                count^=1

        if count!=0:
            flag=0

    if flag==1:
        for i in range(n):
            print("""".join(ANS[i]))
    else:
        print(-1)
            
","ANS[i][j]=""B""
                    ANS[i+1][j]=""W""","ANS[i][j]=""W""
                    ANS[i+1][j]=""B"""
"import sys
input = sys.stdin.readline

def readList():
    return list(map(int, input().split()))
def readInt():
    return int(input())
def readInts():
    return map(int, input().split())
def readStr():
    return input().strip()

# BF, EC, DB, CC, CL
def solve():
    n, m = readInts()
    arr = [readStr() for _ in range(n)]
    ans = [["".""] * m for _ in range(n)]

    for i in range(n):
        curr = 0
        for j in range(m):
            if arr[i][j] == ""U"":
                {{completion}}
        if curr:
            return -1

    for j in range(m):
        curr = 0
        for i in range(n):
            if arr[i][j] == ""L"":
                ans[i][j] = ""W"" if not curr else ""B""
                ans[i][j+1] = ""W"" if curr else ""B""
                curr ^= 1
        if curr:
            return -1
    return ""\n"".join(["""".join(each) for each in ans])


for _ in range(int(input())):
    print(solve())
","ans[i][j] = ""W"" if not curr else ""B""
                ans[i+1][j] = ""W"" if curr else ""B""
                curr ^= 1","ans[i][j] = ""W"" if not curr else ""B""
                ans[i][j+1] = ""W"" if curr else ""B""
                curr ^= 1"
"n=int(input())
aa=[abs(int(i)) for i in input().split()]
if 0 in aa:
    print(0)
else:
    {{completion}}
",print(abs(min(aa))),print(sum(aa)-1)
"import sys
input=sys.stdin.readline
for i in range(int(input())):
    n,k=map(int,input().split())
    a=[*map(int,input().split())]
    f,c=1,-1
    if k==1:
        if a!=list(range(1,n+1)):f=0
    else:
        for i in range(n):
            s,p,t,l=a[i],i,[],0
            while s>0:
                {{completion}}
            if s==c and (l<k or t[-k]!=p):f=0;break
            c-=1
    if f:print('YES')
    else:print('NO')","t.append(p)
                l+=1
                a[p]=c
                s,p=a[s-1],s-1",l.append(s)
"import sys
input=sys.stdin.buffer.readline
def rl():
    return list(map(int,input().split()))
def ri():
    return int(input())
def rs():
    return input()
def rm():
    return map(int,input().split())

def main():
    n,k=rm()
    b=rl()
    for i in range(n): b[i]-=1
    if k==1:
        for i in range(n):
            if b[i]!=i: {{completion}}
        return 'YES'
    v=set()
    for i in range(n):
        nxt=i
        cnt=0
        d={}
        while nxt not in v:
            d[nxt]=cnt
            v.add(nxt)
            cnt+=1
            nxt=b[nxt] 
        if nxt not in d.keys(): continue
        if cnt-d[nxt]!=k: return 'NO'
    return 'YES'

t=ri()
for i in range(t):
    print(main())",return 'NO',"nxt=b[nxt]
            cnt+=1"
"import sys;input=sys.stdin.readline;R=lambda:list(map(int,input().split()))
for _ in range(int(input())):
    n,k=R()
    b=[0]+R()
    if k==1:
        if b!=[i for i in range(n+1)]: print('No')
        else: {{completion}}
        continue
    vs=[0]*(n+1)
    val=[0]*(n+1)
    turn=[0]*(n+1)
    for i in b[1:]:
        t=i
        if vs[t]: continue
        cnt=0
        while not vs[t]:
            turn[t]=i
            vs[t]=1
            val[t]=cnt
            cnt+=1
            t=b[t]
        if turn[t]==turn[i] and cnt-val[t]!=k: print('No'); break
    else: print('Yes')
            
            
        

    
'''
2
10 2
5 1 2 5 4 8 3 10 4 8
10 6
6 7 7 8 1 3 9 1 8 2
'''
",print('Yes'),"t.append(p)
                l+=1
                a[p]=c
                s,p=a[s-1],s-1"
"I=input
for _ in[0]*int(I()):
 n,a,q=map(int,I().split());k=l=m=0
 for x in I():
  if'+'<x:k+=1
  else:{{completion}}
 print(('YES','MAYBE','NO')[(m<n-a)+(l<n-a)])
",m+=1;l+=k<1;k-=k>0,k-=1
"t = int(input())
for i in range(t):
    n, a, q = [int(i) for i in input().split()]
    s = input()
    k = a
    p = a
    flag = True
    for sign in s:
        if k == n:
            print(""YES"")
            flag = False
            break
        if sign == '+':
            k += 1
            p += 1
        else:
            {{completion}}
        if k == n:
            print(""YES"")
            flag = False
            break
    if flag:
        if p < n:
            print(""NO"")
        else:
            print(""MAYBE"")

",k -= 1,"k += 1
p += 1"
"t = int(input())
for _ in range(0, t):
    n, a, q = map(int, input().split())
    ar = input()
    z = len(ar)
    result = ""MAYBE""
    c=0

    if n == a:
        result = ""YES""
    elif a + ar.count(""+"") < n:
        result = ""NO""
    else:
        for i in ar:
            if i == ""+"":
                c += 1
            else:
                {{completion}}
            if c + a == n:
                result = ""YES""
                break
    print(result)",c -= 1,"c += 1
if c + a == n:
    result = ""YES""
    break"
for a in[*open(0)][1:]:{{completion}},"print('YNEOS'[sum(sorted(map(int,a[::2]))[1:])<10::2])",print('NO')
"for _ in range (int(input())):
    a,b,c = map(int,input().split())
    if a+b >= 10 or b+c  >= 10 or c+a >= 10: print(""YES"")
    else: {{completion}}","print(""NO"")","print(""NO"")"
"a = int(input())
for i in range(a):
    b = list(map(int,input().split()))
    b.sort()
    if b[2]+b[1]>=10:
        print('YES')
    else:
        {{completion}}",print('NO'),print('NO')
"import sys
input = sys.stdin.readline

# import time
# from collections import defaultdict
# t = int(time.time())
# m = defaultdict(int)
# m[key ^ t] += 1


def check_case():
    n = int(input().strip())
    s = input().strip()
    misses = 0
    for i in range(n // 2):
        if s[i] != s[n - 1 - i]:
            {{completion}}
    result = [""0""] * (n + 1)
    for i in range(misses, n + 1 - misses, 2 - n % 2):
        result[i] = ""1""
    print("""".join(result))



ncases = int(input())
for case in range(ncases):
    check_case()

",misses += 1,misses += 1
"from math import ceil
from sys import stdin, stdout
for t in range(int(stdin.buffer.readline().decode())):
    n = int(stdin.buffer.readline().decode())
    s = stdin.buffer.readline().decode()
    coin = 0
    diff = 0
    a = 0
    ans = ['1']*(n+1)
    for i in range(0, ceil(n//2)):
        if s[i] == s[n-1-i]:
            coin += 1
        else:
            diff += 1
    if n % 2:
        a = 1
    for j in range(0, n + 1):
        num = j - diff
        if num > 2 * coin + a or j < diff:
            ans[j] = '0'
        else:
            if num % 2 == a or num % 2 == 0:
                ans[j] = '1'
            else:
                {{completion}}
    stdout.write(''.join(map(str, ans)))
    stdout.write('\n')",ans[j] = '0',num = j - diff
"from sys import stdin
input = stdin.readline

for _ in range(int(input())):
    n=int(input())
    s=input()
    one=s.count('1')
    c=0
    for i in range(n//2):
        if s[i]!=s[n-i-1]:
            {{completion}}
    ans=['0']*(n+1)
    for i in range(n+1):
        if i>=c and (n-i)>=c and(n%2 or (i-c)%2==0):
            ans[i]='1'
    print(''.join(ans))
        
    
    
            
   
   

    
        
        
  
    ",c+=1,")
    misses += 1"
"import sys
input = sys.stdin.readline
for _ in range(int(input())):
  n,m = [int(x) for x in input().split()]
  a = [int(x) for x in input().split()]
  b = [int(x) for x in input().split()]

  full_b = 0
  for v in b: {{completion}}

  a0 = 0
  a1 = 0
  for v in a:
    a0 ^= v
    a1 ^= v | full_b
  print(min(a0, a1), max(a0, a1))",full_b |= v,full_b |= v
"#!/usr/local/bin/python3

import sys
input = sys.stdin.readline

def ri(): return int(input())
def rl(v_type=int): return list(map(v_type, input().split()))
def rs(): return input().rstrip()
def out(x, sep=' '): return sep.join(map(str, x))


def solve_case():
    n, m = rl()
    A = rl()
    B = rl()
    all_or = 0
    for b in B:
        {{completion}}
    x = y = 0
    for a in A:
        x ^= a
        y ^= (a | all_or)
    return out([min(x, y), max(x, y)])


if __name__ == '__main__':
    T = int(input())
    ret = [solve_case() for ti in range(1, T + 1)]
    print(out(ret, '\n'))
",all_or |= b,all_or |= b
"import sys, os
input = sys.stdin.buffer.readline
for _ in range(int(input())):
    lena, lenb = map(int, input().split())
    a = tuple(map(int, input().split()))
    b = tuple(map(int, input().split()))
    default = 0
    for i in a:
        default ^= i
    currentmin, currentmax = default, default
    if lena % 2:
        for i in range(lenb):
            local = default | b[i]
            currentmin = min(local, currentmin)
            currentmax |= b[i]
    else:
        for i in range(lenb):
            {{completion}}
    print(currentmin, currentmax)
","local = default & (~b[i])
            currentmin &= ~b[i]
            currentmax = max(local, currentmax)",)
"n, m = [int(x) for x in input().split()]
dyn = [[0]*(m+1) for i in range(n+1)]

for k in range(2, n+1):
    for l in range(k, m+1-n+k):
        {{completion}}

print(n + 2*dyn[n][m])","amin = l//k
        amax = max(amin, min((m-k+1)//(n-k+1), l-k+1))
        dyn[k][l] = min([dyn[k-1][l-a]+(l-a)/a for a in range(amin, amax+1)])","amin = l//k
        amax = max(amin, min((m-k+1)//(n-k+1), l-k+1))
        dyn[k][l] = min([dyn[k-1][l-a]+(l-a)/a for a in range(amin, amax+1)])"
"n, m = [int(x) for x in input().split()]
dp = [[0]*(m+1) for i in range(n+1)]
 
for k in range(2, n+1):
    for l in range(k, m+1-n+k):
        {{completion}}
 
print(n + 2*dp[n][m])","mini = l//k
        maxi = max(mini, min((m-k+1)//(n-k+1), l-k+1))
        dp[k][l] = min([dp[k-1][l-a]+(l-a)/a for a in range(mini, maxi+1)])","for k in range(2, n+1):
    for l in range(k, m+1-n+k):
        amin = l//k
        amax = max(amin, min((m-k+1)//(n-k+1), l-k+1))
        dp[k][l] = min([dp[k-1][l-a]+(l-a)/a for a in range(amin, amax+1)])"
"n, m = [int(x) for x in input().split()]
dyn = [[0]*(m+1) for i in range(n+1)]

for k in range(2, n+1):
    for l in range(k, m+1-n+k):
        {{completion}}

print(n + 2*dyn[n][m])
","amin = l//k
        amax = max(amin, min((m-k+1)//(n-k+1), l-k+1))
        dyn[k][l] = min([dyn[k-1][l-a]+(l-a)/a for a in range(amin, amax+1)])","amin = l//k
        amax = max(amin, min((m-k+1)//(n-k+1), l-k+1))
        dyn[k][l] = min([dyn[k-1][l-a]+(l-a)/a for a in range(amin, amax+1)])"
"
import sys
print2 = print
input = sys.stdin.readline
print = sys.stdout.write



t = int(input())


for _ in range(t):
    n, k = map(int, input().split())

    a = list(map(int, input().split()))
    seen = set(a)

    l = 0
    r = n - 1
    for i in range(1, k+1):
        if i not in seen:
            {{completion}}
        while a[l] < i:
            l+=1

        while a[r] < i:
            r-=1

        w = r - l + 1
        print(f""{w+w} "")
    print(""\n"")

","print(""0 "")
            continue",l+=1
"ans = []
for _ in range(int(input())):
    n, k = list(map(int, input().split()))
    a = list(map(int, input().split()))

    left, right = 1, n
    ns = []
    ns_clear = [0 for _ in range(k)]
    for i in range(1, k+1):
        while a[left-1] < i and left < right:
            {{completion}} 
        while a[right-1] < i and right > left:
            right -= 1 
        ns.append(2*(right-left+1))

    for elem in a:
        ns_clear[elem-1] = ns[elem-1]

    ans.append(ns_clear)

for ns in ans:
    print(' '.join(map(str, ns)))",left += 1,left += 1
"I=input
for _ in[0]*int(I()):
 i=0
 for s in zip(*(I()for _ in[0]*int(I().split()[0]))):{{completion}}
 print('YNEOS'[i<4::2])",i+=i<4and'vika'[i]in s,"i+=1
print('YNEOS'[i<4::2])"
"for _ in range(int(input())):
    n, lenght = map(int, input().split())
    arr = []
    word = ""vika""
    bi = 0
    for i in range(n):
        arr.append(list(input()))
    
    for j in range(lenght):
        for i in range(n):
            if arr[i][j] == word[bi]:
                {{completion}}
        if bi == 4:
            print(""YES"")
            break
    else:
        print(""NO"")","bi += 1
                break",bi += 1
"def solve(n, m,x):
    a=""vika""
    k=0
    for j in range(m):
        for i in range(n):
            if x[i][j]==a[k]:
                k+=1
                if k==4:
                    {{completion}}
                break
    return ""NO""

t = int(input())
for i in range(t):
    n, m = [int(_) for _ in input().split()]
    x=[]
    l=[]
    for j in range(n):
        a=input()
        x.append(a)
    print(solve(n, m,x))

","return (""YES"")","return ""YES"""
"for s in[*open(0)][2::2]:
 n=len(a:=s.split());r=[0]*n
 for _,i in sorted(zip(map(int,a),range(n))):{{completion}}
 print(*r)
",r[i]=n;n-=1,b[a[i][1]] = n - i
"def main():
    t = int(input())
    for _ in range(t):
        n = int(input())
        a = sorted(zip(map(int, input().split()), range(n)))
        b = [0] * n
        for i in range(n):
            {{completion}}
        print(' '.join(map(str, b)))

if __name__ == '__main__':
    main()
",b[a[i][1]] = n - i,r[i]=n;n-=1
"t = int(input())

while t:
    n = int(input())
    a = []
    for i, item in enumerate(input().split()):
        {{completion}}
    a.sort()
    b = [0] * n
    for i in range(n):
        b[ a[i][1] ] = n
        n -= 1
    print("" "".join(map(str, b)))

    t -= 1
","a.append((int(item), i))","a = [ (int(item), i) for i, item in enumerate(input().split()) ]"
"import sys
input = sys.stdin.readline

def solve():
    n, k = map(int, input().split())
    arr = [*map(int, input().split())]
    h = [*map(int, input().split())]
    res = 0
    s = 0
    l = 0
    for r in range(n):
        if h[r-1] % h[r]:
            {{completion}}
        s += arr[r]
        while s > k and l <= r:
            s -= arr[l]
            l += 1
        res = max(r-l+1, res)

    print(res)

for _ in range(int(input())):
    solve()","l = r
            s = 0",break
"import sys

def read(T=int):
	return [T(i) for i in sys.stdin.readline().split()]

def solve():
	[n,k],a,b=[read() for i in range(3)]
	j,c,ans=0,0,0
	for i in range(n):
		while c<k and j<n:
			if (j>i and b[j-1]%b[j]) or (c+a[j]>k):
				{{completion}}
			c+=a[j]
			j+=1

		ans=max(ans,j-i)
		c-=a[i]

	print(ans)

def main():
	for i in range(read(int)[0]):
		solve()

main()",break,"j = i
            c = 0"
"rvar = lambda: map(int, input().split())
rarr = lambda: list(map(int, input().split()))
rstr = lambda: input().strip().decode()
rint = lambda: int(input())
 
'''Speed up input'''
import sys
input = sys.stdin.readline
 
for _ in range(rint()):
    n, k = rvar()
    a = rarr()
    h = rarr()
    cur = 0
    start = 0
    res = 0
    flag = False
    for end in range(n):
        cur += a[end]
        if end > 0 and h[end - 1] % h[end] != 0:
            {{completion}}
 
 
 
        while cur > k:
            cur -= a[start]
            start += 1
        res = max(res, end - start + 1)
 
    print(res)","start = end
            cur = a[end]","if end > 0 and h[end - 1] % h[end] != 0:
            cur = 0
            start = end
            flag = True"
for s in[*open(0)][1:]:{{completion}},"n,k,x=map(int,s.split());print((-1,(k*k-k)//2+(x-(x==k))*(n-k))[x+2>k<=n])","n,k,x=map(int,s.split());
    print((-1,(k*k-k)//2+(x-(x==k))*(n-k))[x+2>k<=n])"
"for _ in range(int(input())):
    n, k, x = map(int, input().split())
    if k > n or k > x + 1:
        print(-1)
    else:
        {{completion}}
",print(k*(k-1)//2+(n-k)*(x-1 if k == x else x)),"n,k,x=map(int,s.split());print((-1,(k*k-k)//2+(x-(x==k))*(n-k))[x+2>k<=n])"
"for s in[*open(0)][1:]:
    {{completion}}","n,k,x=map(int,s.split());
    print((-1,(k*k-k)//2+(x-(x==k))*(n-k))[x+2>k<=n])","n,k,x=map(int,s.split());
    print((-1,(k*k-k)//2+(x-(x==k))*(n-k))[x+2>k<=n])"
"import sys
input = sys.stdin.readline

def solve():
    n, m = map(int, input().split())
    res = 0    
    for _ in range(30):
        {{completion}}
    if n != 0:
        print(-1)
        return
    print(res)

for _ in range(int(input())):
    solve()","n %= m
        res += n
        n *= 2",f = False
"def gcd(x, y):
    while y != 0:
        (x, y) = (y, x % y)
    return x

import sys

for _ in range(int(sys.stdin.readline())):
    m, n = map(int, sys.stdin.readline().split())

    c = 0

    x = gcd(m, n)

    m = m // x
    n = n // x

    f = True
    k = 0

    while f:
        k += 1
        m %= n


        c += m
        m = m << 1
    
        f = not (n*(m//n) == m)
        if k > 30:
            {{completion}}
    
    if n*(m//n) == m:
        print(c*x)
        continue
    
    print('-1')

        
",f = False,"n %= m
res += n
n *= 2"
"from sys import stdin, stdout
from math import gcd,log2
t = int(stdin.readline())
def max_p(n):
    while n%2==0:
        n = n//2
    return n
for _ in range(t):
    n,m=map(int,stdin.readline().split())
    result = 0
    if n%m==0:
        pass

    elif n%max_p(m):
        result = -1
    else:
        n = n%m
        while n%m!=0 :
            {{completion}}



    stdout.write(str(result)+'\n')","result +=n
            n = (n*2)%m",f = False
"for _ in range(int(input())):
    {{completion}}","s = input()
    print(s.count(""A"") - min(map(len, s.split(""B""))))","a = input()
    s = list(a.split(""B""))
    return len(a) - a.count(""B"") - len(min(s))"
"def solve(s):
    tota = s.count('A')
    
    s = s.split('B')
    if '' in s: {{completion}}
    
    return tota-len(min(s, key = len))
            
for _ in range(int(input())):
    print(solve(input()))",return tota,"s = input()
    print(s.count(""A"") - min(map(len, s.split(""B""))))"
"def res():
    {{completion}}


for _ in range(int(input())):
    print(res())
","a = input()
    s = list(a.split(""B""))
    return len(a) - a.count(""B"") - len(min(s))","s = input()
    print(s.count(""A"") - min(map(len, s.split(""B""))))"
for s in[*open(0)][1:]:{{completion}},"a,b,c=map(int,s.split());print(0--abs(a-b)//2//c)","a, b, c = map(int, input().split())
    print((abs(a - b) + 2 * c - 1) // (2 * c))"
"for _ in range(int(input())):
    {{completion}}","a, b, c = map(int, input().split())
    print((abs(a - b) + 2 * c - 1) // (2 * c))","a,b,c=map(int,input().split());print(0--abs(a-b)//2//c)"
"t=int(input())
while t:
  a,b,c=map(int,input().split())
  p=max(a,b)
  q=min(a,b)
  d=(p-q)/2
  if d%c==0:
     print(int(d//c))
  else:
     {{completion}}
  t-=1",print(int(d//c+1)),"p=max(a,b)
q=min(a,b)
d=(p-q)/2
if d%c==0:
   print(int(d//c))
else:
   print(int(d//c)+1)"
for l in[*open(0)][2::2]:{{completion}},"print(-sum(map(int,l.split())))","n = input()
    print(-sum(map(int, input().split())))"
"for _ in range(int(input())):
    {{completion}}","n = input()
    print(-sum(map(int, input().split())))","n=int(input())
  a=list(map(int,input().split()))
  print(-sum(a))"
"t=int(input())
for i in range(t):
  {{completion}}","n=int(input())
  a=list(map(int,input().split()))
  print(-sum(a))","n=int(input())
  a=list(map(int,input().split()))
  print(-sum(a))"
"MOD = 998244353

n = int(input())
a = list(map(int, input().split()))

ans = 0
for b in range(31):
    preans = 0
    sm = [1, 0]
    smL = [0, 0]
    x = 0
    for i in range(n):
        {{completion}}

    ans += preans*(2**b)
    ans %= MOD
print(ans)","x = x ^ (a[i] >> b & 1)
        smR = sm[x ^ 1] * (i + 1)
        preans += smR - smL[x ^ 1]
        preans %= MOD
        sm[x] += 1
        smL[x] += i + 1","d = x >> b & 1
            sm[d] += 1
            smL[d] += i"
"import sys, os
input = sys.stdin.buffer.readline
length = int(input())
array = list(map(int, input().split()))
maxbit = max(array).bit_length()
binaryarray = [2**i for i in range(maxbit)]
answer = 0
for i in range(maxbit):
    sum0, sum1, num0, num1, total, currentprefix = -1, 0, 1, 0, 0, 0
    for j in range(len(array)):
        currentprefix ^= binaryarray[i] & array[j]
        if currentprefix:
            num1 += 1
            sum1 += j
            total += num0*j - sum0
        else:
            {{completion}}
    answer += total * binaryarray[i]
    answer %= 998244353
sys.stdout.write(str(answer) + ""\n"")
","num0 += 1
            sum0 += j
            total += num1*j - sum1","sum0, sum1, num0, num1, total, currentprefix = -1, 0, 1, 0, 0, 0
for j in range(len(array)):
    currentprefix ^= binaryarray[i] & array[j]
    if currentprefix:
        num1 += 1
        sum1 += j
        total += num0*j - sum0
    else:
        sum0, sum1, num0, num1, total, currentprefix = sum1, sum0"
"import sys
input = lambda: sys.stdin.readline().rstrip('\r\n')
ii = lambda: int(input())
mii = lambda: map(int, input().split())
lii = lambda: list(mii())

MOD = 998244353

T = 1

def solve():
    n = ii()
    arr = lii()
    ans = 0
    for i in range(30):
        res = 0
        xors = 0
        cnt = [1, 0]
        s = [0, 0]
        for j, x in enumerate(arr, 1):
            {{completion}}
        ans += (res << i) % MOD
    return ans % MOD


for _ in range(T):
    print(solve())","d = x >> i & 1
            xors ^= d
            res += j * cnt[xors ^ 1] - s[xors ^ 1]
            res %= MOD
            cnt[xors] += 1
            s[xors] += j","x = x ^ (a[i] >> b & 1)
        smR = sm[x ^ 1] * (i + 1)
        preans += smR - smL[x ^ 1]
        preans %= MOD
        sm[x] += 1
        smL[x] += i + 1"
"for _ in range(int(input())):
    {{completion}}
","a = input().split()[-1]
    s = input().split()
    print(""YES"" if a in s else ""NO"")","n, k = map(int, input().split())
	a = list(map(int, input().split()))
	print('NYOE S'[k in a::2])"
"def main():
    ans = []
    t = int(input())
    for _ in range(t):
        n, k = input().split()
        arr = input().split()
        if k in arr:
            ans.append(""YES"")
        else:
            {{completion}}
    for i in ans:
        print(i)

if __name__ == ""__main__"":
    main()","ans.append(""NO"")","a = input().split()[-1]
    s = input().split()
    print(""YES"" if a in s else ""NO"")"
"def solve():
	{{completion}}
for _ in range(int(input())):solve()","n, k = map(int, input().split())
	a = list(map(int, input().split()))
	print('NYOE S'[k in a::2])","a = input().split()[-1]
    s = input().split()
    print(""YES"" if a in s else ""NO"")"
"import math
for i in[*open(0)][2::2]:{{completion}}","a=sorted(map(int,i[::2]));a[0]+=1;print(math.prod(a))","a=sorted(map(int,i[::2]));a[0]+=1;print(math.prod(a))"
"import math
for s in[*open(0)][2::2]:{{completion}}","a=sorted(map(int,s[::2]));a[0]+=1;print(math.prod(a))","a=sorted(map(int,s[::2]));a[0]+=1;print(math.prod(a))"
"import sys
input=sys.stdin.readline
for i in range(int(input())):
    n,x=map(int,input().split())
    a=list(sorted(map(int,input().split())))
    h,p=a[0],a[0]
    for i in range(n):
        if (s:=a[i])!=p:
            h+=(y:=min(s-p,x//i))
            x-=y*i;p=s
            if y==0:{{completion}}
    print(h+x//n)",break,"x=0
h+=(y:=min(s-p,x//i))
x-=y*i;p=s
if y==0:# TODO: Your code here"
"import sys

t = int(sys.stdin.readline())

for i in range(t):
    l1 = sys.stdin.readline().split()
    n = int(l1[0])
    x = int(l1[1])

    l2 = sys.stdin.readline().split()
    a = []
    for i in l2:
        a.append(int(i))
    
    a.sort()
    
    i = 0
    done = False
    while i<len(a)-1:
        h = a[i]
        diff = a[i+1]-a[i]
        if x > diff*(i+1):
            x-=diff*(i+1)
            i+=1
        else:
            {{completion}}

    if not done:
        k = x//(i+1)
        h = a[i]+k
        print(h)

    ","k=x//(i+1)
            h+=k
            print(h)
            done = True
            break",break
"from sys import stdin, stdout
for t in range(int(stdin.readline())):
    n, x = map(int, stdin.readline().strip().split())
    a = list(map(int, stdin.readline().strip().split()))
    a.sort()
    h = a[0]
    s = 1
    for i in range(1, n):
        if a[i] > a[i-1]:
            if x > s * (a[i] - a[i - 1]):
                x -= s * (a[i] - a[i - 1])
                s += 1
                h += a[i] - a[i-1]
            elif x == s * (a[i] - a[i - 1]):
                {{completion}}
            else:
                h += x//s
                x = 0
                break
        else:
            s += 1
    if x > 0:
        h += x//n
    stdout.write(f'{h}')
    stdout.write('\n')","x = 0
                h += a[i] - a[i-1]
                break",break
"import sys
input = sys.stdin.readline


for _ in range(int(input())):
    n = int(input())
    w = list(map(int, input().split()))
    d = dict()
    c, ew = 0, 0
    for i in w:
        if i not in d:
            c += 1
            d[i] = c
        else:
            {{completion}}
        ew += c
    print(ew)
","ew -= d[i]
            d[i] = c",d[i] = c
"from sys import stdin
from collections import defaultdict
input = stdin.readline

def solve():
    input()
    arr = [*map(int, input().split())]
    dp = defaultdict(int)
    dp[arr[0]]=1
    dp[0]=0
    for i, x in enumerate(arr[1:], 1):
        if x != arr[i-1]:
            {{completion}}
    print(sum(dp.values()))

for _ in range(int(input())):
    solve()",dp[x] = dp[arr[i-1]]+(x not in dp),dp[x] += dp[x-arr[i-1]]
"import sys
def input()   : return sys.stdin.readline().strip()
def getints() : return map(int,sys.stdin.readline().strip().split())

for _ in range(int(input())):
    n = int(input())
    l = [*getints()]
    
    t = set()
    d = [0]*n
    for i in range(n-1,-1,-1):
        t.add(l[i])
        d[i] = len(t)
    
    ans = 0
    s = set()
    for i in range(n):
        if l[i] not in s:
            {{completion}}
    print(ans)
    ","ans += d[i]
            s.add(l[i])","ans += d[i]
            s.add(l[i])"
"import sys
input = sys.stdin.buffer.readline

for _ in range(int(input())):
    {{completion}}","n = int(input())
    a = list(map(int,input().split()))
    b = list(map(int,input().split()))
    ans = min(n * min(a) + sum(b), n * min(b) + sum(a))
    print(ans)","n=int(input())
    a=[int(i) for i in input().split("" "")]
    b=[int(i) for i in input().split("" "")]
    e=min(a)
    h=min(b)
    ans=min(sum(a)+(h*n),sum(b)+(e*n))
    print(ans)"
"import sys


def II(): {{completion}}
def LI(): return [int(num) for num in sys.stdin.readline().split()]
def SI(): return sys.stdin.readline().rstrip()


def solve():
    n = II()
    a = LI()
    b = LI()
    sum_a = sum(a) + n * min(b)
    sum_b = sum(b) + n * min(a)
    print(min(sum_a, sum_b))


for _ in range(II()):
    solve()
",return int(sys.stdin.readline()),"n=int(input())
    a=[int(i) for i in input().split("" "")]
    b=[int(i) for i in input().split("" "")]
    e=min(a)
    h=min(b)
    ans=min(sum(a)+(h*n),sum(b)+(e*n))
    print(ans)"
"import sys
input=sys.stdin.readline
import math


for j in range(int(input())):
    {{completion}}
        


        

















        
        


    
    


    








","n=int(input())
    a=[int(i) for i in input().split("" "")]
    b=[int(i) for i in input().split("" "")]
    e=min(a)
    h=min(b)
    # ans=float('inf')
    ans=min(sum(a)+(h*n),sum(b)+(e*n))
    print(ans)","n = int(input())
    a = list(map(int,input().split()))
    b = list(map(int,input().split()))
    ans = min(n * min(a) + sum(b), n * min(b) + sum(a))
    print(ans)"
"import sys
input = sys.stdin.readline
t = int(input())
for _ in range(t):
    n, k = map(int, input().split())
    a = set(map(int, input().split()))
    g = [[] for _ in range(n)]
    for i in range(n - 1):
        u, v = map(int, input().split())
        u -= 1
        v -= 1
        g[u].append(v)
        g[v].append(u)
    from collections import deque
    def bfs(start):
        q = deque([(start, -1)])
        ans = -1
        dd = -1
        step = -1
        while q:
            step += 1
            for _ in range(len(q)):
                u, fa = q.popleft()
                if u + 1 in a:
                    ans = u
                    dd = step
                for v in g[u]:
                    if v != fa:
                        {{completion}}
        return ans,dd
    x, _ = bfs(0)
    y, d = bfs(x)
    print((d + 1)//2)","q.append((v, u))","q.append((v, u, d + 1))"
"import sys
input=sys.stdin.buffer.readline
# import threading
# threading.stack_size(10**8)
# sys.setrecursionlimit(10**6)
# threading.Thread(target=main).start()
def rl():
    return list(map(int,input().split()))
def ri():
    return int(input())
def rs():
    return input()
def rm():
    return map(int,input().split())

def main():
    n,k=rm()
    a=rl()
    g=[[] for i in range(n)]
    for i in range(k): a[i]-=1
    rt=a[0]
    a=set(a)
    for i in range(n-1):
        u,v=rm();u-=1;v-=1
        g[u].append(v);g[v].append(u)
    if len(a)==1: return 0
    ind=rt
    curdst=0
    sta=[(rt,-1,0)]
    while sta:
        u,p,dst=sta.pop()
        if u in a and dst>curdst:
            ind=u;curdst=dst
        for v in g[u]:
            if v==p: {{completion}}
            sta.append((v,u,dst+1))
    curdst=0
    sta=[(ind,-1,0)]
    while sta:
        u,p,dst=sta.pop()
        if u in a and dst>curdst:
            ind=u;curdst=dst
        for v in g[u]:
            if v==p: continue
            sta.append((v,u,dst+1))
    return (curdst+1)//2

t=ri()
for i in range(t):
    print(main())",continue,"Q.append((v, u, d + 1))"
"import sys
input = sys.stdin.buffer.readline

for _ in range(int(input())):
    n, k = map(int,input().split())
    marked = [0] * n
    for v in map(int,input().split()):
        marked[v - 1] = 1
    tree = [[] for _ in range(n)]
    for _ in range(n - 1):
        u, v = [int(x) - 1 for x in input().split()]
        tree[u].append(v)
        tree[v].append(u)
    if k == 1:
        print(0)
        continue
    Q = [(-1, marked.index(1), 0)]
    U, D = None, -1
    while Q:
        p, v, d = Q.pop()
        if marked[v] and d > D:
            D, U, = d, v
        for u in tree[v]:
            if u != p:
                {{completion}}
    Q = [(-1, U, 0)]
    while Q:
        p, v, d = Q.pop()
        if marked[v]:
            D = max(D, d)
        for u in tree[v]:
            if u != p:
                Q.append((v, u, d + 1))
    print((D + 1) // 2)","Q.append((v, u, d + 1))","Q.append((v, u))"
"import sys
input = sys.stdin.readline
n=int(input())
for _ in range(n):
    n,m=map(int,input().split())
    x=input().strip(""\n"")
    s=input().strip(""\n"")
    cont=0
    while s not in x:
        cont+=1
        x=x+x
        if len(x)>m*n and s not in x:
            {{completion}}
    print(cont)","cont=-1
            break","ans.append(i)
            return"
"from sys import stdin
 
def main():
    t = int(stdin.readline().strip())
    for _ in range(t):
        list(map(int, stdin.readline().strip().split()))
        x = stdin.readline().strip()
        s = stdin.readline().strip()
        operations = 0
        if s in x:
            print(operations)
        else:
            for _ in range(6):
                x += x
                operations += 1
                if(s in x):
                    {{completion}}
            if s in x:
                print(operations)
            else:
                print(-1)
 
main()",break,print(operations)
"ans=[]
t=int(input())
def main():
    n, m = [*map(int, input().split("" ""))]
    x = input()
    s = input()
    i = 0
    if s in x:
        ans.append(i)
        return
    for _ in range(6):
        x += x
        i += 1
        if s in x:
            {{completion}}
    ans.append(-1)
for _ in range(t):
    main()
print('\n'.join([*map(str,ans)]))
","ans.append(i)
            return",break
for s in[*open(0)][1:]:{{completion}},"n,k,x=map(int,s.split());print('NYOE S'[k*k+k<=2*x<=(2*n-k+1)*k::2])","print(""YES"")"
"from sys import stdin,stdout
# from os import _exit
# from bisect import bisect_left,bisect
# from heapq import heapify,heappop,heappush
# from sys import setrecursionlimit
# from collections import defaultdict,Counter
# from itertools import permutations
from math import gcd,ceil,sqrt,factorial,log2
# setrecursionlimit(int(1e5))
input,print = stdin.readline,stdout.write

t = int(input())
for _ in range(t):
    n = int(input())
    a = list(map(int,input().split()))
    ans,y = 0,0
    for i in range(1,n):
        c = ceil(log2(a[i-1]/a[i])+y)
        if c>0:
            ans+=c
            y = c
        else:
            {{completion}}

    print(str(ans)+""\n"")
",y = 0,"ans,y = 0,0
for i in range(1,n):
    c = ceil(log2(a[i-1]/a[i])+y)
    if c>0:
        ans+=c
        y = c
    else:
        op = (
            max(op - (a[i] // a[i - 1]).bit_length() + 1, 0)
            if a[i] >= a[i - 1]
            else op + ((a[i - 1] - 1)"
"import sys

for _ in range(int(sys.stdin.readline())):
    n = int(sys.stdin.readline())
    a = list(map(int, sys.stdin.readline().split()))
    rez = op = 0
    for i in range(1, len(a)):
        {{completion}}
    print(rez)
","op = (
            max(op - (a[i] // a[i - 1]).bit_length() + 1, 0)
            if a[i] >= a[i - 1]
            else op + ((a[i - 1] - 1) // a[i]).bit_length()
        )
        rez += op",rez = op = 0
"import sys

input = sys.stdin.readline


def solve(n, arr):  # we cannot keep multiplying as the number is too large
    # so we store num_zero, the amount of 0s beyond 32 bit integer.
    ans = 0
    largest = int(""0b"" + ""1"" * 32, 2)  # 32 bit.
    num_zeros = [0] * n

    for i in range(1, n):
        shifts = 0
        while arr[i] < arr[i - 1]:
            shifts += 1
            arr[i] *= 2
        if arr[i] > largest:
            arr[i] //= 2
            num_zeros[i] = num_zeros[i - 1] + 1
            shifts -= 1
        else:
            {{completion}}
        ans += shifts + num_zeros[i]

    print(ans)


def main():
    t = int(input())
    for _ in range(t):
        n = int(input())
        arr = list(map(int, input().split()))
        solve(n, arr)


main()
",num_zeros[i] = num_zeros[i - 1],num_zeros[i] = num_zeros[i - 1] + 1
"import sys
input = sys.stdin.readline

t=int(input())
for tests in range(t):
    n=int(input())
    A=list(map(int,input().split()))

    LIST=[0]*(n+1)
    for a in A:
        LIST[a]+=1

    ANS=0

    SCORE=[0]*(n+1)

    for i in range(1,n+1):
        count=0
        for j in range(i,n+1,i):
            count+=LIST[j]

        SCORE[i]=count*(count-1)//2

    #print(SCORE)

    USE=[0]*(n+1)

    for i in range(n,0,-1):
        if SCORE[i]==0:
            continue
        for j in range(i+i,n+1,i):
            SCORE[i]-=SCORE[j]

        if LIST[i]>0:
            for j in range(i,n+1,i):
                {{completion}}

    #print(SCORE,n*(n-1)//2)

    #print(n*(n-1)//2-sum(SCORE))

    ANS=0
    for i in range(n+1):
        if USE[i]==0:
            ANS+=SCORE[i]

    print(ANS)
        

    
",USE[j]=1,"for j in range(i,n+1,i):
    SCORE[i]-=SCORE[j]"
"import collections
import math
import sys
import heapq

input = sys.stdin.readline


def inp():
    return (int(input()))
def inlt():
    return (list(map(int, input().split())))
def insr():
    s = input()
    return (list(s[:len(s) - 1]))
def invr():
    return (map(int, input().split()))


def solution():
    n = inp()
    a = inlt()
    cnt = [0] * (n + 1)
    for x in a:
        cnt[x] += 1
    dp = [0] * (n + 1)
    for x in range(n, 0, -1):
        c = 0
        for i in range(x, n + 1, x):
            c += cnt[i]
        dp[x] = c * (c-1) // 2
        for i in range(2*x, n + 1, x):
            dp[x] -= dp[i]
    for x in range(n+1):
        if cnt[x]:
            for i in range(x, n+1, x):
                {{completion}}
    print(sum(dp))
    return


if __name__ == '__main__':
    t = inp()
    for i in range(t):
        solution()
",dp[i] = 0,dp[x] = c * (c-1) // 2
"import heapq as hp
from collections import defaultdict
import sys
input=sys.stdin.readline
a=defaultdict(int);b=defaultdict(int)
c=[];d=[];ans=[]
for _ in range(int(input())):
    i,j,k=input().split()
    j=-int(j);k=int(k)
    if i == '+':
        a[j]+=1;b[k]+=1
        hp.heappush(c,j);hp.heappush(d,k)
    else:
        {{completion}}
    while c and a[c[0]]<1:hp.heappop(c)
    while d and b[d[0]]<1:hp.heappop(d)
    #print(a,b)
    ans.append('YES' if (c and d[0]<-c[0]) else 'NO')
print('\n'.join(ans))",a[j]-=1;b[k]-=1,while c and a[c[0]]<1:hp.heappop(c)
"ls, rs = {}, {}
max_l = min_r = -1
ans = ''
for i in range(int(input())):
    t, l, r = map(str, input().split())
    l, r = int(l), int(r)
    if t == '+':
        if l in ls:
            ls[l] += 1
        else:
            ls[l] = 1
        if r in rs:
            rs[r] += 1
        else:
            rs[r] = 1
        if max_l == -1:
            max_l = l
        else:
            max_l = max(max_l, l)
        if min_r == -1:
            min_r = r
        else:
            min_r = min(min_r, r)
    else:
        ls[l] -= 1
        rs[r] -= 1
        if rs[r] == 0:
            del rs[r]
            if r == min_r:
                if rs:
                    min_r = min(rs.keys())
                else:
                    {{completion}}
        if ls[l] == 0:
            del ls[l]
            if l == max_l and ls:
                max_l = max(ls.keys())
    ans += ['NO', 'YES'][max_l > min_r] + '\n'
print(ans.rstrip('\n'))",max_l = min_r = -1,"if ls:
    min_r = min(ls.keys())
else:
    min_r = -1
if rs:
    max_l = max(rs.keys())
else:
    max_l = -1"
"from sys import stdin,stdout
# from os import _exit
from bisect import bisect_left,bisect
# from heapq import heapify,heappop,heappush
# from sys import setrecursionlimit
from collections import defaultdict,Counter
# from itertools import permutations
# from math import gcd,ceil,sqrt,factorial
# setrecursionlimit(int(1e5))
input,print = stdin.readline,stdout.write

q = int(input())
lef = defaultdict(int)
rig = defaultdict(int)
cur = -1
ruc = int(1e9)+5

for _ in range(q):
    t,l,r = list(map(str,input().split()))
    l,r = int(l),int(r)
    pos = True
    if t=='+':
        cur = max(cur,l)
        ruc = min(ruc,r)
        lef[l]+=1
        rig[r]+=1
    else:
        lef[l]-=1
        rig[r]-=1
        if lef[l]==0:
            lef.pop(l)
            if l>=cur:
                {{completion}}
        if rig[r]==0:
            rig.pop(r)
            if r<=ruc:
                ruc = min(rig.keys(),default = int(1e9)+5)
    
    ans = ""YES"" if cur>ruc else ""NO""
    print(str(ans)+""\n"")
","cur = max(lef.keys(),default = 0)","cur = max(cur,l)
ruc = min(ruc,r)"
"import sys
input = sys.stdin.readline


for _ in range(int(input())):
    n = int(input())
    w = list(map(int, input().split()))
    d = [0]*(n+1)
    for i in range(n-1, -1, -1):
        a = w[i] + i + 1
        if a > n:
            d[i] = d[i+1] + 1
        else:
            {{completion}}
    print(d[0])
","d[i] = min(d[i+1]+1, d[a])",continue
"import sys
input=sys.stdin.buffer.readline
def rl():
    return list(map(int,input().split()))
def ri():
    return int(input())
def rs():
    return input()
def rm():
    return map(int,input().split())

def main():
    n=ri()
    a=rl()
    dp=[n]*(n+1);dp[-1]=0
    for i in range(n-1,-1,-1):
        if i+a[i]+1<n+1: {{completion}}
        dp[i]=min(dp[i],1+dp[i+1])
    return dp[0]

t=ri()
for i in range(t):
    print(main())",dp[i]=dp[i+a[i]+1],continue
"import sys;input=sys.stdin.readline
T, = map(int, input().split())
for _ in range(T):
    N, = map(int, input().split())
    X = list(map(int, input().split()))
    dp = [0]*(N+1)
    for i in range(N-1,-1,-1):
        dp[i] = dp[i+1]+1
        if i+X[i]+1 > N:
            {{completion}}
        dp[i] = min(dp[i], dp[i+X[i]+1])
    print(dp[0])

",continue,dp[i]=dp[i+X[i]+1]
"import sys
input = sys.stdin.readline

t = int(input())
for _ in range(t):
    n = int(input())
    m = [input().rstrip() for i in range(n)]
    answer = 0
    for i in range(n//2):
        for j in range(i, n - i - 1):
            arr = [m[j][i], m[i][n - j - 1], m[n-i-1][j], m[n-1-j][n - 1 - i]]
            arr.sort()
            for l in arr:
                {{completion}}
    print(answer)",answer += ord(arr[3]) - ord(l),ans += c-e
"def solve(n, A):
    ans = 0
    for i in range(n // 2):
        for j in range(n // 2):
            M = [ord(A[i][j]), ord(A[n - 1 - j][i]), ord(A[n - 1 - i][n - 1 - j]), ord(A[j][n - 1 - i])]
            c = max(M)
            for e in M:
                {{completion}}
    return ans

def main():
    t = int(input())
    for _ in range(t):
        n = int(input())
        A = [input() for _ in range(n)]
        print(solve(n, A))

if __name__ == ""__main__"":
    main()

",ans += c-e,answer += c - e
"#sys.stdin.readline().strip()
#sys.stdout.write(str()+""\n"")
#sys.stdout.write(""Yes\n"")

import math
import sys


S = []

for lol in range(int(sys.stdin.readline().strip())):
	n=int(sys.stdin.readline().strip())
	A=[]
	for _ in range(n):
		A.append(sys.stdin.readline().strip())
    
	ope = 0
    
	for i in range(n//2):
		for j in range(n//2):
			{{completion}}
	S.append(str(ope))
    
sys.stdout.write(""\n"".join(S))



    
    
","a, b, c, d = ord(A[i][j]), ord(A[j][-i-1]), ord(A[-i-1][-j-1]), ord(A[-1-j][i])
			ope += 4*max([a,b,c,d])-(a+b+c+d)",answer += ord(arr[3]) - ord(l)
"import sys

input = sys.stdin.readline
mod = 998244353
for _ in range(int(input())):
    n = list(input())
    ans = 1
    total = 0
    temp = 1
    now = '2'
    for i in range(len(n)):
        if n[i] != now:
            ans *= temp
            temp = 1
            now = n[i]
        else:
            {{completion}}
        ans %= 998244353
    ans *= temp
    print(total, ans)
","temp += 1
            total += 1
            ans *= total","total += 1
temp += 1"
"T=int(input())
mod=998244353
import sys

while T>0:
    T-=1

    s=sys.stdin.readline().rstrip()
    flag=-1
    ans1=0
    bt=0
    ans2=1
    for i in range(len(s)):
        if flag!=int(s[i]):
            flag=int(s[i])
            ans1+=bt
            ans2*=(bt+1)
            ans2%=mod
            bt=0
        else:
            {{completion}}
    ans1+=bt
    ans2*=(bt+1)
    ans2%=mod
    ans3=1
    for i in range(1,ans1+1):
        ans3*=i
        ans3%=mod
    ans=ans3*ans2
    ans%=mod
    sys.stdout.write(str(ans1)+' '+str(ans)+'\n')



",bt+=1,"bt+=1
ans1+=bt
ans2*=(bt+1)
ans2%=mod"
"import sys
import math
input = sys.stdin.readline

t = int(input())
for __ in range(t):
    s = input()
    ans = 1
    count = 1
    segs = 1
    look = s[0]
    for i in range(1, len(s)):
        if s[i] == look:
            count += 1
        else:
            {{completion}}
    if count > 1:
        segs += 1
        ans *= count
        ans %= 998244353
    for i in range(1, len(s) - segs + 1):
        ans *= i
        ans %= 998244353
    print(str(len(s) - segs) + "" "" + str(ans % 998244353))","segs += 1
            ans *= count
            ans %= 998244353
            count = 1
            look = s[i]","count = 1
            segs += 1
            ans *= count
            ans %= 998244353"
"n = int(input())
score = [[0] * 10 for _ in range(10)]
for i in range(10):
  for j in range(10):
    score[i][j] = min(i, j, 9 - i, 9 - j) + 1
def func(i, nums):
  res = 0
  for j in range(10):
    if nums[j] == 'X':
      {{completion}}
  return res
for _ in range(n):
  res = 0
  for i in range(10):
    nums = input()
    res += func(i, nums)
  print(res)
	 	  	  	  	  	  	 			 	      	",res += score[i][j],score += (x + 1)
"N = int(input())
for i in range(N):
    A = []
    for _ in range(10):
        A.append(input())
    score = 0
    for x in range(5):
        for y in range(x, 9 - x):
            if A[x][y] == ""X"":
                {{completion}}
            if A[y][9-x] == ""X"":
                score += (x + 1)
            if A[9-y][x] == ""X"":
                score += (x + 1)
            if A[9-x][9-y] == ""X"":
                score += (x + 1)
    print(score)
        
",score += (x + 1),score += score[i][j]
"def solve():
    matrix = [list(input()) for _ in range(10)]
    points = 0
    i, j = 0, 9
    while i < j:
        movei = movej = i
        while movej < j:
            {{completion}}
        while movei < j:
            points += (matrix[movei][movej] == ""X"") * (i + 1)
            movei += 1
        while movej > i:
            points += (matrix[movei][movej] == ""X"") * (i + 1)
            movej -= 1
        while movei > i:
            points += (matrix[movei][movej] == ""X"") * (i + 1)
            movei -= 1
        i += 1
        j -= 1
    print(points)


def main():
    t = 1
    t = int(input())
    for _ in range(t):
        solve()


if __name__ == ""__main__"":
    # Talk is cheap. Show me the code. — Linus Torvalds
    main()
","points += (matrix[movei][movej] == ""X"") * (i + 1)
            movej += 1",score += (x + 1)
"import sys

R = lambda:map(int, sys.stdin.readline().rstrip().split())

def solve():
    n, m = R()
    lstA = list(R()) + [1]
    lstB = list(R())
    lstA.sort()
    lstB.sort()
    #print(lstA)
    #print(lstB)
    i = 0
    j = n - 1
    k = 0
    ans = 0
    while i <= j:
        #print(i, j, k)
        if lstA[k] >= lstB[i]:
            i += 1
            j -= 1
            ans += 1
        else:
            {{completion}}
    while k <= j:
        #print(i, j, k)
        if lstA[k] >= lstB[i]:
            i += 1
            j -= 1
            ans += 1
        else:
            k += 1
            i += 1
    print(ans)

t ,= R()
for _ in range(t):
    solve()
","k += 1
            i += 1",j += 1
"# ﷽
import sys
input = lambda: sys.stdin.readline().strip()
def inlst():return [int(i) for i in input().split()]
oo=float('inf')

def solve():
    n,m=inlst()
    a=[1]+sorted(inlst())
    b=sorted(inlst())
    i=0
    for j in range(n):
        if a[i]<b[j]:{{completion}}
    

     
    print(n-i)

    

def main():
    for i in range(int(input())):
        solve()


if __name__ == ""__main__"":
    main()
",i+=1,i+=1
"for i in range(int(input())):
    n, k = map(int, input().split())
    s = input()
    count = 0
    i = 0
    while i < n:
        if s[i] == 'B':
            i += k
            count += 1
        else:
            {{completion}}
    print(count)",i += 1,i += 1
"def solve(s, n, k):
    cnt, i = 0, 0
    while i < n:
        if s[i] == ""B"":
            cnt += 1
            i += k
        else:
            {{completion}}
    return cnt

def main():
    ans = []
    t = int(input())
    for _ in range(t):
        n, k = input().split()
        n, k = int(n), int(k)
        s = input().strip()
        ans.append(solve(s, n, k))
    for i in ans:
        print(i)

if __name__ == ""__main__"":
    main()",i += 1,x-=1
"for _ in range(int(input())):
	n,k=[int(i) for i in input().split()]
	s=input()
	a=0
	x=n-1
	while x>=0:
		if s[x]=='B':
			a+=1
			x-=k
		else:
			{{completion}}
	print(a)",x-=1,x-=1
"
for s in[*open(0)][1:]:{{completion}}","a,b,c=sorted(map(int,s.split()));print('YNEOS'[b/a+c/a>5or
b%a+c%a>0::2])","a,b,c=sorted(map(int,s.split()));print('YNEOS'[b/a+c/a>5or
b%a+c%a>0::2])"
for s in[*open(0)][1:]:{{completion}},"a,b,c=sorted(map(int,s.split()));print('YNEOS'[b/a+c/a>5or
b%a+c%a>0::2])","a,b,c=sorted(map(int,s.split()));print('YNEOS'[b/a+c/a>5or
b%a+c%a>0::2])"
"import sys
input = sys.stdin.readline

def readList():
    return list(map(int, input().split()))
def readInt():
    return int(input())
def readInts():
    return map(int, input().split())
def readStr():
    return input().strip()

# BF, EC, DB, CC, CL
def solve():
    n, k = readInts()
    arr = readList()
    freq = [0] * k
    for v in arr:
        freq[v % k] += 1
    if freq[0]:
        return 0
    elif k == 4:
        if freq[2] >= 2:
            return 0
        elif freq[2] == freq[3] == 0:
            return 2
        else:
            return 1
    else:
        for i in range(k-1, 0, -1):
            if freq[i]:
                {{completion}}
    return

for _ in range(int(input())):
    print(solve())",return k-i,"i = min(i,1)"
"import sys ; input = sys.stdin.buffer.readline

for _ in range(int(input())):

    n,k = map(int,input().split())
    li = list(map(int,input().split()))
    r = [0 for _ in range(k)]

    for i in range(n): x = (-li[i])%k ; r[x] += 1

    if k != 4:
        i = 0
        while r[i] == 0: i += 1
        print(i)
    else:
        i = 0
        while r[i] == 0:
            i += 1
        if r[2] >= 2: i = min(i,0)
        elif r[2] == 1 and r[3] >= 1: {{completion}}
        elif r[2] == 0 and r[3] >= 2: i = min(i,2) 
        print(i)","i = min(i,1)",return k-i
"# OM SHRI GANESHAY NAMAH    
# HARE KRISHNA

import sys
from os import path
# from math import log2, floor, ceil, sqrt, pow, gcd
# from random import random, randint, shuffle, choice
from collections import Counter, defaultdict, deque
# from itertools import permutations, combinations
# from functools import reduce
# from heapq import heapify, heappop, heappush, heapreplace
# from bisect import bisect_left, bisect_right

def get_str(): return sys.stdin.readline().strip()
def get_int(): return int(get_str())
def get_arr(): return list(map(int, get_str().split()))

if path.exists('input.txt'):
    sys.stdin = open('input.txt', 'r')
    sys.stdout = open('output.txt', 'w')

sys.setrecursionlimit(10**6)
MOD, MOD2, INF = 10**9 + 7, 998244353, 10**18

def solve():
    n, k = get_arr()
    a = [i % k for i in get_arr()]
    if 0 in a:
    	print(0)
    	return
    mx = max(a)
    ans = k - mx
    if k == 4:
    	cnt2 = a.count(2)
    	if cnt2 >= 2:
    		ans = 0
    	elif cnt2 == 1:
    		{{completion}}
    	else:
    		ans = min(ans, 2)
    print(ans)

tc = 1
tc = get_int()

for _ in range(tc):
    # print(f'Case #{i+1}:', end=' ')
    solve()",ans = 1,"i = min(i,1)"
"import sys
def solve():
    input = sys.stdin.readline
    t = int(input())
    for _ in range(t):
        s = input().rstrip()
        pos = int(input())
        n = len(s)
        arr = ['']
        flag = False
        for i, c in enumerate(s):
            while arr[-1] > c:
                if pos <= n:
                    if pos < len(arr):
                        print(arr[pos], end='')
                    else:
                        {{completion}}
                    flag = True
                    break
                pos -= n
                n -= 1
                arr.pop()
            if flag:
                break
            arr.append(c)
        if not flag:
            while pos > n:
                pos -= n
                n -= 1
            print(arr[pos], end='')

solve()","print(s[i+pos-len(arr)], end='')",arr.pop(); break
"import sys
def input()   : return sys.stdin.readline().strip()
def getints() : return map(int,sys.stdin.readline().strip().split())

from math import sqrt

p = []
for _ in range(int(input())):
    s = input()
    n = int(input())
    tack = [0]
    
    a = [0]*len(s)
    t = 1
    for i in range(1,len(s)):
        while tack:
            x = tack.pop()      
            if s[i] < s[x]:
                a[x] = t
                t += 1
            else: {{completion}}
        tack.append(i)
            
    for i in range(len(s)-1,-1,-1):
        if a[i] == 0: a[i] = t; t+= 1

    u = ((len(s)*(len(s)+1))//2-n)
    t = (-1+int(sqrt(1+8*u)))//2
    while (t*(t+1)) > 2*u: t -= 1
    
    ans = t - u + (t*(t+1))//2
    for i in range(len(s)):
        if a[i] > len(s)-(t+1):
            if ans == 0: p.append(s[i]); break
            else: ans -= 1
print(''.join(p))",tack.append(x); break,"print(s[i+pos-len(arr)], end='')"
"for s in[*open(0)][2::2]:
 i=0
 for x in s.split():{{completion}}
 print(i)",i+=1;i+=i==int(x),i+=1
"for _ in range(int(input())):
	n,b = int(input()) ,0
	for x in [int(x) for x in input().split()]:
		b+=1
		if x == b: {{completion}}
	print(b)
	",b+=1,b+=1
"t=int(input())
for q in range(t):
    n=int(input())
    a=list(map(int,input().split(' ')))
    c=0
    for i in range(len(a)):
        c+=1
        if(a[i]==c):
            {{completion}}
    print(c)
        ",c+=1,c+=1
"for s in[*open(0)][1:]:
 x,k=map(int,s.split())
 while sum(map(int,(str(x))))%k:{{completion}}
 print(x)",x+=1,"s += t % 10
        t //= 10"
"l = []
def somme(t):
    s = 0
    while t != 0:
        {{completion}}
    return s  
for _ in range(int(input())):
    x, k = map(int, input().split()) 
    while somme(x) % k !=0 :   
            x+=1
    l.append(x)    
print(*l)","s += t % 10
        t //= 10","s+=t%10
               t=t//10"
"L=[]
def somme(t):
           s=0
           while t!= 0:
               {{completion}}
           return s  
for _ in range(int(input())):
     x,k=map(int,input().split())
     while somme(x) % k !=0 :   
            x+=1
     L.append(x)    
print(*L)   

        
         
             
         
         ","s+=t%10
               t=t//10","s+=t%10
               t=t//10"
"from collections import Counter
from sys import stdin
input = stdin.readline
for _ in range(int(input())):
    n, k = map(int, input().split())
    o = 0
    for x in Counter(input().strip()).values():
        if x % 2:
            {{completion}}
    print(""NO"" if o > k + 1 else ""YES"")",o += 1,o += 1
"import sys
input = sys.stdin.readline

def readList():
    return list(map(int, input().split()))
def readInt():
    return int(input())
def readInts():
    return map(int, input().split())
def readStr():
    return input().strip()

# BF, EC, DB, CC, CL
def solve():
    n, k = readInts()
    s = readStr()
    freq = [0] * 26
    for c in s:
        {{completion}}
    cnt = -1
    for i in range(26):
        cnt += freq[i] % 2
    return ""YES"" if cnt <= k else ""NO""

for _ in range(int(input())):
    print(solve())","freq[ord(c)-ord(""a"")] += 1",freq[ord(c) - ord('a')] += 1
"t = int(input())
output = []
for _ in range(t):
    n, k = map(int, input().split())
    s =  input()
    counter = {}
    for i in range(n):
        counter[s[i]] = counter.get(s[i], 0) + 1
    
    huh = 0
    for i in counter:
        huh += 1 if counter[i] % 2 != 0 else 0
    
    ##
    if k >= huh - 1 or huh <= 1:

        output.append(""YES"")
    else:
        {{completion}}
print(""\n"".join(output))
    
    
","output.append(""NO"")","output.append(""NO"")"
"for s in[*open(0)][2::2]:
 i=j=t=0;r=[-1]*(len(s)-1)
 for b in s[-2::-1]:
  i+=1
  if'1'>b:{{completion}}
 print(*r)",j+=1;t+=i-j;r[j-1]=t,j+=1
"import sys
input = sys.stdin.readline

for _ in range(int(input())):
    n = int(input())
    s = input()[:-1]
    d, a, b = [], 0, 0
    for i in range(n-1, -1, -1):
        if s[i] == '0':
            b += a
            d.append(b)
        else:
            {{completion}}
    print(' '.join(map(str, d)), '-1 '*(n-len(d)))",a += 1,"a, b = 0, 0
for i in range(n-1, -1, -1):
    if s[i] == '0':
        b += a
        d.append(b)
    else:
        a += 1"
"for _ in range(int(input())):{{completion}}
  			    	 	  	    				 					 	","print('no'if input() in ['cab', 'bca'] else'yes')",print('NO')
"n = int(input())
for i in range(n):
    s = input()
    if s[0] == 'a' or s[1] == 'b' or s[2] == 'c':
        print('YES')
    else:
        {{completion}}
",print('NO'),"print('no'if input() in ['cab', 'bca'] else'yes')"
"for _ in range(int(input())):
    if input() in [""abc"", ""acb"", ""cba"", ""bac""]:
        {{completion}}
    print(""No"")
","print(""Yes"")
        continue","print('no'if input() in ['cab', 'bca'] else'yes')"
"mod=1_000_000_007
 
 
 
t=int(input())
for testid in range(t):
	n,x,k=map(int,input().split())
	ans=pow(2*k+1,n-1,mod)*(k+x)
	ans%=mod
	if x>0:
		def mul(a,b):
			c=[[0]*x for _ in range(x)]
			for i in range(x):
				for j in range(x):
					for k in range(x):
						{{completion}}
			return c
		def mpow(m,p):
			if p==0:return [[int(i==j) for i in range(x)] for j in range(x)]
			if p==1:return m
			half=mpow(m,p//2)
			full=mul(half,half)
			if p%2:full=mul(full,m)
			return full
		mat=[[0]*x for _ in range(x)]
		for i in range(x):
			for j in range(max(0,i-k),min(x,i+k+1)):
				mat[i][j]=1
		mat=mpow(mat,n-1)
		sub=sum(sum(r) for r in mat)
		ans-=sub
		ans%=mod
	print(ans)",c[i][j]=(c[i][j]+a[i][k]*b[k][j])%mod,"res[i][j] += X[i][k] * Y[k][j]
                res[i][j] %= mod"
"import sys
from itertools import permutations
from heapq import heappop,heappush
from collections import deque
import random
import bisect

input = lambda :sys.stdin.readline().rstrip()
mi = lambda :map(int,input().split())
li = lambda :list(mi())

mod = 10**9 + 7

def mat_mul(X,Y):
    n,m = len(X),len(Y[0])
    res = [[0 for j in range(m)] for i in range(n)]
    for i in range(n):
        for j in range(m):
            for k in range(len(Y)):
                {{completion}}
    return res

def solve(n,k,x):
    mod = 10**9 + 7
    res = pow(2*k+1,n-1,mod) * (x+k) % mod

    if x == 0:
        return res

    A = [[0]*x for i in range(x)]
    for i in range(x):
        for j in range(x):
            if abs(i-j) <= k:
                A[i][j] = 1
    
    E = [[1] for _ in range(x)]
    t = n-1
    while t:
        if t & 1:
            E = mat_mul(A,E)
        A = mat_mul(A,A)
        t >>= 1
    
    for i in range(x):
        res -= E[i][0]
        res %= mod
    
    return res

for _ in range(int(input())):
    n,x,k = mi()
    print(solve(n,k,x))","res[i][j] += X[i][k] * Y[k][j]
                res[i][j] %= mod",")
c[i][j]=(c[i][j]+a[i][k]*b[k][j])%mod"
"n = int(input())
A = [int(x) for x in input().split()]
 
B = [0]
for a in A:
    B.append(B[-1] ^ a)
 
maxB = max(B)
count = [0] * maxB.bit_length()
for b in B:
    for bit in range(b.bit_length()):
        {{completion}}

c = 0
for bit in range(maxB.bit_length()):
    if n - count[bit] < count[bit]:
        c += 1 << bit
 
B = [b ^ c for b in B]
print(*B)
",count[bit] += (b >> bit) & 1,count[bit] += 1 if b & (1 << bit) else 0
"import sys
input = sys.stdin.readline

def readList():
    return list(map(int, input().split()))
def readInt():
    return int(input())
def readInts():
    return map(int, input().split())
def readStr():
    return input().strip()

# BF, EC, DB, CC, CL
def solve():
    n, arr = readInt(), readList()
    a = [0]
    f1, f2 = [0] * 21, [0] * 21
    for i in range(n-1):
        a.append(a[-1] ^ arr[i])
        v0, v1 = i + 1, a[-1]
        j = 0
        while v0 or v1:
            {{completion}}
    v = 0
    for i in range(21):
        v += (1 << i) if f1[i] != f2[i] else 0
    return "" "".join([str(v ^ val) for val in a])

print(solve())","f1[j] += v0 & 1
            f2[j] += v1 & 1
            v0 >>= 1
            v1 >>= 1
            j += 1","f1[i] += (v0 >> i) & 1
f2[i] += (v1 >> i) & 1"
for s in[*open(0)][2::2]:{{completion}},"*a,=map(int,s.split());print('YNEOS'[any(sorted(x:=a[1<<i:1<<i+1])<x
for i in range(5))::2])","*n,=map(int,s.split());print('YNEOS'[any(sorted(m:=n[1<<i:1<<i+1])<m
for i in range(5))::2])"
for p in[*open(0)][2::2]:{{completion}},"*n,=map(int,p.split());print('YNEOS'[any(sorted(m:=n[1<<i:1<<i+1])<m
for i in range(5))::2])","*n,=map(int,p.split());print('YNEOS'[any(sorted(m:=n[1<<i:1<<i+1])<m
for i in range(5))::2])"
"import sys
input = sys.stdin.buffer.readline 
from itertools import permutations
        
def process(A, B):
    n = len(A)
    answer = 0
    my_min = []
    my_max = []
    for i in range(n):
        {{completion}}
    if min(my_max) < max(my_min):
        answer+=(max(my_min)-min(my_max))
    sys.stdout.write(f'{answer}\n')
    
    
t = int(input())
for i in range(t):
    n = int(input())
    A = [int(x) for x in input().split()]
    B = [int(x) for x in input().split()]
    process(A, B)","answer+=abs(A[i]-B[i])
        my_min.append(2*min(A[i],B[i]))
        my_max.append(2*max(A[i],B[i]))","my_min.append(min(A[i], B[i]))
my_max.append(max(A[i], B[i]))"
"import sys
input = sys.stdin.buffer.readline
n = int(input())
A = input().split()
 
precalc = [[[0] * (19 * a) for _ in range(a + 1)] for a in range(6)]
for num in A:
    tmp = precalc[len(num)]
    tmp[0][s := sum(num) - len(num) * 48] += 1
    for i,c in enumerate(num):
        tmp[i + 1][s := s - 2 * c + 96] += 1
 
luckies = 0
for a in range(1, 5 + 1):
    for b in range(1, 5 + 1):
        c = a + b
        if c & 1:
            {{completion}}
        P1 = precalc[a][min(a, c//2)]
        P2 = precalc[b][max(0, c//2 - a)]
        for s in range(-9 * min(a, b), 9 * min(a, b) + 1):
            luckies += P1[s] * P2[-s]
 
print(luckies)",continue,"if c == 0:
    luckies += P1[s] * P2[s]"
"n = int(input())
ct = [[0 for __ in range(46)] for _ in range(6)]
ls = list(input().split())
for i in range(n) :
    val = 0
    for j in range(len(ls[i])) :
        val += int(ls[i][j])
    ct[len(ls[i])][val] += 1
ans = 0
for i in range(n) :
    val, tval, sz = 0, 0, len(ls[i])
    for j in range(sz) :
        tval += int(ls[i][j])
    for j in range(sz) :
        val += int(ls[i][j])
        if (j+1)*2 < len(ls[i]) :
            ans += ct[max(j+1,len(ls[i])-j-1)-min(j+1,len(ls[i])-j-1)][tval-2*val]
        elif (2*val-tval > 0):
            {{completion}}
print(ans,'\n')","ans += ct[max(j+1,len(ls[i])-j-1)-min(j+1,len(ls[i])-j-1)][2*val-tval]",ans += ct[1][tval-2*val-2]
"n = int(input())
arr = input().split()

dic = {
    1: {},
    2: {},
    3: {},
    4: {},
    5: {}
}

for i in arr:
    s = 0
    for j in i:
        s+= int(j)
    dic[len(i)][s] = dic[len(i)].get(s,0)+1

ans = 0
for i in arr:
    s = 0
    for j in i:
        s+= int(j)
    ans += dic[len(i)][s]
    
    l = len(i)
    if l>=3:
        ans += dic[l-2].get(s-2*int(i[-1]), 0)
        ans += dic[l-2].get(s-2*int(i[0]), 0)

        if l== 5:
            {{completion}}
            
print(ans)
	 	   	  			  	   	 	  	 		","ans += dic[1].get(s-2*(int(i[-1])+int(i[-2])),0)
            ans += dic[1].get(s-2*(int(i[1])+int(i[0])),0)",continue
"import sys, math
input = lambda: sys.stdin.readline().strip()
mapin = lambda: map(int,input().split())
for _ in range(int(input())):
    n, = mapin()
    a = list(mapin())
    mx = max(a)
    cur = 0
    for i in range(n):
        if i>0 and a[i]%2 == a[i-1]%2: {{completion}}
        cur += a[i]
        mx = max(mx,cur)
        if cur < 0: cur = 0
    print(mx)",cur = 0,"if a[i]%2 == a[i-1]%2:
    cur += a[i]"
"from sys import stdin

t = int(stdin.readline().rstrip())  # кол-во наборов

for _ in range(t):
    n = int(stdin.readline().rstrip())
    arr = list(map(int, stdin.readline().rstrip().split()))

    max_res = arr[0]
    local_max = arr[0]

    for i in range(1, len(arr)):
        if (arr[i - 1] + arr[i]) % 2 == 0:
            local_max = arr[i]
        else:
            {{completion}}
        max_res = max(max_res, local_max, arr[i])

    print(max_res)
","local_max = local_max + arr[i]
            local_max = max(local_max, arr[i])",local_max = arr[i]
"'''
Author       : InHng
LastEditTime : 2023-12-03 14:13:49
'''
import sys
input = sys.stdin.readline
import pypyjit
pypyjit.set_param('max_unroll_recursion=-1')
mod = 10 ** 9 + 7 # 998244353

for _ in range(int(input())):
    n = int(input())
    a = list(map(int, input().split()))
    judge = [(ai % 2) for ai in a]
    ans, cnt = a[0], a[0]
    for i in range(1, n):
        if judge[i] ^ judge[i - 1]:
            cnt = max(a[i], cnt + a[i])
        else:
            {{completion}}
        ans = max(ans, cnt)
    print(ans)
",cnt = a[i],"cnt = max(a[i], cnt + a[i])"
"from collections import Counter
for _ in range(int(input())):
    {{completion}}","input()
    a=[i if i!='1' else '2' for i in input().split()]
    print(sum(i*(i-1)//2 for i in Counter(a).values()))","n = int(input())
a = list(map(int, input().split()))

cnt = Counter(a)
res = 0
for i in range(1, n):
    for j in range(i + 1, n + 1):
        if a[i] ** a[j] == a[j] ** a[i]:
            res += cnt[i] * cnt[j]
print(res)"
"import sys

lines = sys.stdin.readlines()

t = int(lines[0])

for tc in range(t):
    n = int(lines[2 * tc + 1])
    nums = [int(x) for x in lines[2 * tc + 2].split("" "")]
    counts = {}
    for num in nums:
        if num == 1:
            {{completion}}
        if num not in counts:
            counts[num] = 0
        counts[num] += 1

    result = 0
    for count in counts.values():
        result += (count * (count - 1)) // 2
    print(result)

",num = 2,"result = 0
    for count in counts.values():
        result += (count * (count - 1)) // 2
    print(result)"
"from sys import stdin, stdout

for _ in range(int(stdin.readline())):
    n = int(stdin.readline())
    a = list(map(int, stdin.readline().split()))

    res, cnt = 0, dict()
    cnt[1], cnt[2] = 0, 0
    for i in a:
        if i == 1: res += cnt[2]
        elif i == 2: {{completion}}
        try: 
            res += cnt[i]
            cnt[i] += 1
        except:
            cnt[i] = 1
    
    stdout.write(str(res) + '\n')",res += cnt[1],"if i == 2: res += cnt[i] - 1
elif i == 4: res += cnt[i] - 2
elif i == 8: res += cnt[i] - 3
elif i == 16: res += cnt[i] - 4
elif i == 32: res += cnt[i] - 5
elif i == 64: res += cnt[i] - 6
elif i == 128: res += cnt[i]"
"for s in[*open(0)][2::2]:{{completion}}
",print('YNEOS'[s>'10'::2]),print('YNEOS'[s > '10'::2])
"for a in[*open(0)][2::2]:
    {{completion}}",print('YNEOS'[a > '10'::2]),print('YNEOS'[a > '10'::2])
for p in[*open(0)][2::2]:{{completion}},print('YNEOS'[p>'10'::2]),print('YNEOS'[p > '10'::2])
"I=input
f=lambda x:'00'in x or'11'in x
for _ in[0]*int(I()):{{completion}}","I();print('YNeos'[f(s:=I())&(f(t:=I())or
2*t[0]in s or 2*t[-1]in s)::2])","I();s=I();t=I();print('YNeos'[f(s)and(f(t)or
2*t[0]in s or 2*t[-1]in s)::2])"
"I=input
f=lambda x:'11'in x or '00'in x
for _ in[0]*int(I()):{{completion}}","I();s=I();t=I();print('YNeos'[f(s)and(f(t)or
2*t[0]in s or 2*t[-1]in s)::2])","I();s=I();t=I();print('YNeos'[f(s)and(f(t)or
2*t[0]in s or 2*t[-1]in s)::2])"
"
t=int(input())
for i in range(t):
    n=int(input())
    l=sorted(list(map(int,input().split())))
    if len(set(l)) < 3 and abs(l.count(l[0]) - l.count(l[-1])) < 2:
        print(""Yes"")
    else:
        {{completion}}

","print(""No"")","print(""No"")"
"
def solve():
    n=int(input())
    v=[int(i) for i in input().split()]
    mp={}
    for i in range(n):
       if mp.__contains__(v[i]):
           mp[v[i]]+=1
       else:
           mp[v[i]]=1
    if len(mp)>2:
        print(""NO"")
    else:
        if len(mp)==1:
            print(""YES"")
        else:
            x,y=0,0
            for i ,j in mp.items():
                if x==0:
                    x=j
                else:
                    {{completion}}
            if abs(x-y)<2:
                print(""YES"")
            else:
                print(""NO"")

t= int(input())
for i in range(t):
    solve()

",y=j,"print(""NO"")
            continue"
"
n = int(input())


for i in range(n):
    n  = int(input())
    arr = [int(x) for x in input().split("" "")]
    d = {}
    if len(arr)<=2:
        print(""YES"")
        continue
    for x in arr:
        if x in d:
            d[x]+=1
        else:
            d[x]=1
    l = len(d)
    if l>2:
        print(""NO"")
    else:
        if l==2:
            n = list(d.values())
            m = abs((n)[0] - n[1])
            if m<=1:
                print(""YES"")
                continue
            else:
                {{completion}}
        print(""YES"")
        
    
            
        
        
    ","print(""NO"")
                continue","print(""No"")"
"from sys import stdin
input = lambda: stdin.buffer.readline().decode().strip()
from math import gcd


for _ in range(int(input())):
    n = int(input())
    a = sorted(map(int, input().split()))
    if n == 1:
        print(1)
        continue
    g = 0
    for i in range(1, n):
        g = gcd(g, a[i] - a[i-1])

    ans = 0
    for x in a:
        ans += (a[-1] - x) // g
    
    st = set(a)

    for i in range(1, n+1):
        if a[-1] - g * i not in st:
            {{completion}}

    print(ans)","ans += i
            break",ans += (a[-1] - x) // g - 1
"import sys
input=sys.stdin.buffer.readline

def rl():
    return list(map(int,input().split()))
def ri():
    return int(input())
def rs():
    return input().decode(""utf-8"")[:-2]
def rm():
    return map(int,input().split())

from math import gcd
def main():
    n=ri()
    a=rl()
    if n==1: return 1
    a.sort()
    g=0
    for i in range(n-1):
        g=gcd(a[i+1]-a[i],g)
    sm1=(a[-1]*n-sum(a))//g
    res=sm1+n
    for i in range(n-2,-1,-1):
        if a[-1]-a[i]!=(n-1-i)*g: {{completion}}
    return res

t=ri()
for i in range(t):
    print(main())","res=min(res,sm1+n-1-i)","ans+=i
            break"
"import sys, math
from collections import deque, defaultdict, Counter
t = int(sys.stdin.readline().strip())
for _ in range(t) : 
    n = int(sys.stdin.readline().strip())
    node = [*map(int, sys.stdin.readline().strip().split())]
    if n == 1 : 
        print(1)
    elif n == 2 : 
        print(3)
    else : 
        node.sort()
        g = node[1] - node[0]
        for i in range(1, n - 1) : 
            g = math.gcd(g, node[i + 1] - node[i])
        k = 0
        for i in range(n) : 
            k += node[-1] - node[i]
        ans = (k + n * g) // g
        M = node[-1]
        x = node[-1]
        while node : 
            if x == node[-1] : 
                node.pop()
                x -= g
            else : 
                {{completion}}
        ans = min(ans, (k + M - x) // g)
        print(ans)",break,"ans += i
            break"
for s in[*open(0)][2::2]:{{completion}},print(len(s.lstrip('B').rstrip('A\n')or'*')-1),"print(max(b-a,0))"
"for i in range(int(input())):
    n=int(input())
    k=input()
    a=k.find(""A"")
    b=k.rfind(""B"")
    if a==-1:
        print(0)
    else:
        {{completion}}","print(max(b-a,0))","print(max(a-b,0))
        continue"
"t = int(input())
for I in range(t):
    n = int(input())
    s = input()
    if 'A' not in s or 'B' not in s:
        {{completion}}
    print(max(s.rfind('B') - s.find('A'), 0))
","print(0)
        continue","print(max(s.rfind('B') - s.find('A'), 0))"
"n=int(input())
arr = list(map(int, input().split()))
a = [0]*n
b = [0]*n
for i in range(1,n):
    {{completion}}
print(min(max(arr[i],a[i],b[i]) for i in range(n)))","a[i] = max(a[i-1], arr[i-1] + n - i)
    b[n-i-1] = max(b[n-i], arr[n-i] + n - i)","a[i]=max(a[i-1],arr[i-1])
b[i]=max(b[i-1],arr[i-1]+i)Replace the ""# TODO: Your code here"" in the code above with the appropriate block. Provide only the replaced block."
"def solve(arr):
    rmax = [0] * (n + 1)
    for i in range(n - 1, -1, -1):
        {{completion}}
    lmax = 0
    ans = float('inf')
    for i in range(n):
        ans = min(ans, max(lmax, arr[i], rmax[i+1]))
        lmax = max(lmax, arr[i] + n - i - 1)
    return ans


n = int(input())
a = [int(s) for s in input().split()]
print(solve(a))
","rmax[i] = max(rmax[i+1], arr[i] + i)","rmax[i] = max(rmax[i+1], arr[i] + n - i - 1)
lmax = max(lmax, arr[i] + n - i - 1)"
"for _ in range(1):
    n = int(input())
    a = [int(x) for x in input().split()]
    start = a.copy()
    mx = a[0]
    for i in range(1, n):
        {{completion}}
    mx = a[n - 1]
    for i in range(n - 2, -1, - 1):
        mx = max(mx, a[i], a[i + 1] + i + 1)
        start[i] = max(start[i], mx)
    print(min(start))
","mx = max(mx, a[i], a[i - 1] + (n - i))
        start[i] = mx","for i in range(1, n):
    a[i] = max(a[i - 1], a[i - 1] + n - i)
print(min(a))"
"import sys
input=sys.stdin.buffer.readline
def rl(): return list(map(int,input().split()))
def ri(): return int(input())
def rs(): return input().decode(""utf-8"")[:-2]
def rm(): return map(int,input().split())

def main():
    n,q=rm()
    b=rl()
    for i in range(q):
        k=ri()
        cur=0
        a=[num for num in b]
        for j in range(60,-1,-1):
            req=0
            tmp=cur+(1<<j)
            for z in range(n):
                req+=max((((tmp|a[z])>>j)<<j)-a[z],0)
            if req<=k:
                cur=tmp
                k-=req
                for z in range(n):
                    {{completion}}
        print(cur)

main()","a[z]+=max((((tmp|a[z])>>j)<<j)-a[z],0)",a[z] = 0
"import sys
import random

input = sys.stdin.readline
rd = random.randint(10 ** 9, 2 * 10 ** 9)

Mod = random.randint(10 ** 16, 2 * 10 ** 18)
ps = 31
Mx = 10 ** 6 + 1
from collections import Counter
c = Counter()
ans = 0
total = 0
n = int(input())
li = [input().strip() for _ in range(n)]
for k in range(n):
    # 正向hash
    s = li[k]
    hash = 0
    for i in range(len(s) - 1, -1, -1):
        {{completion}}

for k in range(n):
    s = li[k]
    hash = 0
    mi = 10 ** 18
    for i in range(len(s)):
        hash = (ps * hash + (ord(s[i]) - 96)) % Mod
        mi = min(mi, c[hash])
        ans += mi

    total += 2 * n * len(s)

print(total - 2 * ans)","hash = (ps * hash + (ord(s[i]) - 96)) % Mod
        c[hash] += 1","hash = (ps * hash + (ord(s[i]) - 96)) % Mod
mi = min(mi, c[hash])
ans += mi"
"test_case = int(input())
answers = []
for test in range(test_case):
    n = int(input())
    array = list(map(int,input().split("" "")))
    total_operation = array.index(min(array))
    after = array[total_operation+1:]
    if after == sorted(after):
        answers.append(total_operation)
    else:
        {{completion}}
for ans in answers:
    print(ans)",answers.append(-1),total_operation = array.index(min(array))
"def solve():
    n = int(input())
    a = [int(x) for x in input().split()]
    fm = 0
    for i in range(n):
        if a[i] < a[fm]:
            {{completion}}
    for i in range(fm + 1, n):
        if a[i] < a[i - 1]:
            print(-1)
            return
    print(fm)
 
 
for _ in range(int(input())):
    solve()",fm = i,"fm=i
            if a[i] < a[fm]:
                fm=i"
"import sys
input=sys.stdin.buffer.readline
def rl(): return list(map(int,input().split()))
def ri(): return int(input())
def rs(): return input().decode(""utf-8"")[:-2]
def rm(): return map(int,input().split())

def main():
    n=ri()
    a=rl()
    mi=10**18
    pos=-1
    for i in range(n):
        if a[i]<mi:
            {{completion}}
    for j in range(pos,n-1):
        if a[j]>a[j+1]: return -1
    return pos

t=ri()
for i in range(t):
    print(main())","pos=i
            mi=a[i]",pos = i
"tc=int(input())
for _ in range(tc):
    n=int(input())
    a=list(map(int,input().split()))
    pos=[0]*(n+1)
    for i in range(n):pos[a[i]]=i
    pref=[a[0]]*n
    for i in range(n-1):pref[i+1]=max(pref[i],a[i+1])
    suf=[n+1]*(n+1)
    for i in range(n-1,-1,-1):suf[i]=min(suf[i+1],a[i])
    base=0
    for i in range(n):base+=suf[i]==a[i] and a[i]==i+1
    if base==n:
        print(n-2)
        continue
    ans=base
    ks={}
    i=0
    while i<n:
        r=pos[suf[i]]
        mn=n+1
        for j in range(r,i-1,-1):
            l=pos[pref[j]]
            if j!=r and j!=l:{{completion}}
            a[l],a[r]=a[r],a[l]
            if a[j]==j+1 and min(mn,a[j],suf[r+1])==a[j]:ks[l*1000000+r]=ks.get(l*1000000+r,0)+1
            a[l],a[r]=a[r],a[l]
        i=r+1
    for k in ks:ans=max(ans,base+ks[k])
    print(ans)
","mn=min(mn,a[j])","print(max(0,n-2))"
"from sys import stdin
input = lambda: stdin.buffer.readline().decode().strip()
from collections import deque


for _ in range(int(input())):
    n = int(input())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))

    def solve(order):
        dq = deque()
        for i in order:
            while dq and dq[-1] <= a[i]: {{completion}}
            while dq and dq[0] > b[i]: dq.popleft()
            dq.append(a[i])
            if dq[0] == b[i]: a[i] = b[i]

    solve(range(n))
    solve(reversed(range(n)))
    print('YES' if a == b else 'NO')",dq.pop(),dq.pop()
"inf = int(1e9)

def Tecy() :
    n = int(input())
    val = list(map(int, input().split())) * 2
    ans = n
    pre = 0
    count = 0
    flag = False
    for i, x in enumerate(val) :
        if x >= pre :
            count += 1
            if count == n :
                {{completion}}
        else :
            count = 1
        pre = x

    pre = inf
    count = 0
    for i, x in enumerate(val) :
        if x <= pre :
            count += 1
            if count == n :
                flag = True
                ans = min(ans, (n * 2 - i - 1) % n + 1)
                ans = min(ans, (i - n + 1) % n + 1)
        else :
            count = 1
        pre = x

    if flag :
        print(ans)
    else :
        print(-1)

T = int(input())
for _ in range(T) :
    Tecy()","flag = True
                ans = min(ans, (n * 2 - i - 1) % n)
                ans = min(ans, (i - n + 1) % n + 2)","ans = min(ans, (n * 2 - i - 1) % n + 1)"
"import sys

input = sys.stdin.readline


# MOD = 10 ** 9 + 7


def solve():
    n = int(input())
    adj = [0] * (n + 1)
    leafs = 0

    for i in range(n - 1):
        start, end = map(int, input().split())
        adj[start] += 1
        adj[end] += 1
    for i in range(n + 1):
        if adj[i] <= 1:
            {{completion}}
    return leafs // 2


for _ in range(int(input())):
    print(solve())
",leafs += 1,leafs += 1
"import sys
 
#input functions
readint = lambda: int(sys.stdin.readline())
readints = lambda: map(int,sys.stdin.readline().split())
readar = lambda: list(map(int,sys.stdin.readline().split()))
flush = lambda: sys.stdout.flush()
readstr = lambda: sys.stdin.readline()

t = readint()
for _ in range(t):
    n =  readint()
    a = [0]*n
    # print(a)
    for i in range(n-1):
        u, v = readints()
        a[u-1] +=1
        a[v-1] +=1
    x = a.count(1)
    if(x % 2==0 ):
        print(x//2)
    else:
        {{completion}}",print(x//2+1),print(x//2 +1)
"import sys
from collections import deque, defaultdict, Counter
t = int(sys.stdin.readline().strip())
for _ in range(t) : 
    n = int(sys.stdin.readline().strip())
    deg = [0 for i in range(n + 1)]
    for i in range(n - 1) : 
        a, b = map(int, sys.stdin.readline().strip().split())
        deg[a] += 1
        deg[b] += 1
    c = 0
    for i in range(1, n + 1) : 
        if deg[i] == 1 : {{completion}}
    print((c - 1) // 2 + 1)",c += 1,c += 1
"import sys
for _ in range(int(input())):
    s = sys.stdin.readline()
    s = s.strip()
    n = len(s)
    ans = 1
    for i in range(n):
        {{completion}}
    print(ans)

","k = int(s[i])+1
        ans*=(k*(k+1))//2",ans *= Counter[int(s[i:i + 3])]
"import sys
input=sys.stdin.readline

Counter = [0] * 100
for i in range(10):
    for j in range(10):
        for k in range(10):
            {{completion}}

t = int(input())
for _ in range(t):
    s = str(int(input()))
    res = 1
    for i in s: res *= Counter[int(i)]
    print(res)
        
",Counter[i + j + k] += 1,"for i in range(10):
    for j in range(10):
        for k in range(10):
            Counter[i+j+k] += 1"
"from collections import defaultdict as dt
import sys
input = sys.stdin.readline
print = sys.stdout.write
dc = dt(int)
for i in range(10) :
    dc[str(i)] = ((i+1)*(i+2))//2
for _ in range(int(input())) :
    s = input().strip()
    ans = 1
    for elem in s :
        {{completion}} 
    print(str(ans)+'\n')",ans *= dc[elem],ans*=dc[elem]
for s in[*open(0)][1:]:{{completion}},"x,y,k=map(int,s.split());print(max(x,y,2*y-x-k))","s+=k
            s+=(z-s)*2"
"for _ in range(int(input())):
    a, b, c = map(int, input().split())
    if b < a:
        print(a)
    else:
        if b - a > c:
            print((b - a - c) * 2 + a + c)
        else:
            {{completion}}
",print(b),print(a + c)
"t=int(input())
for j in range(t):
    s=0
    x,z,k=map(int,input().split())
    if x<z:
        s+=x
        if k>=z-x:
            s+=z-x
        else:
            {{completion}}
    else:
        s+=x
    print(s)","s+=k
            s+=(z-s)*2",print(z)
"import sys
input = sys.stdin.readline
def solve():
    n = int(input())
    ls = list(map(int, input().split()))
    ind = ls.index(0)+1
    ls = ls[ind :] + ls[:ind]
    stack = []
    ans = n 
    res = -1
    for i in ls : 
        cnt  = 1
        while stack and  stack[-1][1] > i :
            {{completion}}
        stack.append((cnt , i ))
        ans += (i * cnt ) 
        res = max(ans , res )
    print(res)
for _ in range(int(input())):
    solve()","x,y = stack.pop()
            cnt += x 
            ans -= (y * x)","cnt , i = stack.pop()
ans -= i * cnt 
cnt , i = stack[-1]
ans += i * cnt 
res = max(ans , res )"
"# author: ankan2526

import sys,math,heapq,bisect,random,itertools
input = sys.stdin.readline
sys.setrecursionlimit(10**5)

ints = lambda : list(map(int,input().split()))
def gprint(ans=''):global t;print(f""Case #{t+1}:"",ans)
p = 10**9+7
inf = 10**20+7
ALPHA = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ""
alpha = ""abcdefghijklmnopqrstuvwxyz""

""""""
""""""

for t in range(int(input())):
    n = int(input())
    a = ints()
    ind = a.index(0)
    a = a[ind:] + a[:ind]
    ind = [0]*n
    b = [0]
    ans = n
    c = n
    for i in range(1, n):
        ind[a[i]] = i
        while a[i] < b[-1]:
            {{completion}}
        c += a[i]*(i-ind[b[-1]])
        ans = max(ans, c)
        b.append(a[i])
    print(ans)","c -= b[-1] * (ind[b[-1]] - ind[b[-2]])
            b.pop()","x,y = stack.pop()
            cnt += x 
            ans -= (y * x)"
"import sys

def inp():
    return sys.stdin.readline()

def LII():
    return [int(x) for x in inp().split()]
    
def II():
    return int(inp())

for _ in range(int(inp())):
    n = II()
    p = LII()
    assert len(p) == n
    j = p.index(0)
    p = p[j + 1 : ] + p[ : j]
    as_ = [n]
    is_ = [0]
    max_cost = cost = n 
    i = 0
    for x in p:
        i += 1
        delta_cost = 0
        removed_i = i
        while len(as_) != 0 and as_[-1] > x:
            {{completion}}
        as_.append(x)
        is_.append(removed_i)
        as_.append(n)
        is_.append(i)
        cost -= delta_cost
        cost += x * (i - removed_i) + n
        max_cost = max(max_cost, cost)
    print(max_cost)","removed_a = as_.pop()
            removed_i_new = is_.pop()
            delta_cost += (removed_i - removed_i_new) * removed_a
            removed_i = removed_i_new","x,y = as_.pop(), is_.pop()
            delta_cost = x * (i - y) + n"
"import sys
input = sys.stdin.readline 

for _ in range(int(input())):
    n = int(input()) 
    a = list(map(int, input().split())) 
    ans = 0 
    for i in range(1, n + 1):
        if(n % i == 0):
            mx, mn = -10 ** 18, 10 ** 18 
            for j in range(0, n, i):
                s = 0 
                for k in range(j, j + i):
                    {{completion}} 
                mx = max(mx, s) 
                mn = min(mn, s) 
            ans = max(ans, mx - mn)
    print(ans)
                ",s += a[k],continue
"from sys import stdin, stdout

for _ in range(int(stdin.readline())):
    n = int(stdin.readline())
    a = list(map(int, stdin.readline().split()))
    
    pre = [0] * n
    pre[0] = a[0]
    for i in range(1, n): pre[i] = pre[i - 1] + a[i]
    res = 0

    for k in range(1, n):
        if n % k: {{completion}}
        mx, mn = pre[k - 1], pre[k - 1]
        for i in range(2 * k - 1, n, k):
            tmp = pre[i] - pre[i - k]
            mx = max(tmp, mx)
            mn = min(tmp, mn)
        res = max(res, mx - mn)
    stdout.write(str(res) + '\n')
        ",continue,"if n % k: res = max(res, pre[n - 1] - pre[k - 1])"
"from sys import stdin
def input(): return stdin.readline()[:-1]

def solve():
    N = int(input())
    Arr = list(map(int, input().split()))
    prefix = [0] * (N + 1)
    for i in range(N):
        prefix[i + 1] = prefix[i] + Arr[i]

    ans = 0

    for div in range(1, N+1):
        if N % div != 0:
            {{completion}}
        a = []
        for i in range(N // div):
            a.append(prefix[(i + 1) * div] - prefix[i * div])
        ans = max(ans, max(a) - min(a))
    print(ans)

for _ in range(int(input())):
    solve()",continue,s += a[k]
"n = int(input())

a = [int(i) for i in input().split()]
s=0
for i in range(n):
    {{completion}}
print(min(s-max(a),s//3))

",s+=a[i],"s=0
for i in range(n):
    s+=a[i]
print(s//3)"
"n = int(input())
l = list(map(int,input().split("" "")))
sum_l = sum(l)
max_l = max(l)
 
if max_l > 2*(sum_l-max_l):
    print(sum_l-max_l)
else:
    {{completion}}",print(sum_l//3),print(sum_l-max_l)
"a = [input() for _ in range(3)]

d = [(1,0), (1,1), (1,-1), (0,1), (0,-1), (-1,0), (-1,1), (-1,-1)]
c = []

for i in range(3):
    for j in range(3):
        b=[]
        for x,y in d:
            if 0<=i+x<3 and 0<=j+y<3:
                {{completion}}
        b.sort()
        c.append(b[0]+a[i][j]+b[1])
print(min(c))",b.append(a[i+x][j+y]),continue
"import sys

def gcd(a, b):
    if b==0: return a
    return gcd(b, a%b)



mod = 998244353

def ok(a, b):
    return abs(a // 3 - b//3) <= 1 and abs(a % 3 - b%3) <= 1

def work(a):
    return puzzle[a//3][a%3]

while True:
    try:
        puzzle = [input() for i in range(3)]
        ans = 'CCC'
        for i in range(9):
            for j in range(9):
                for k in range(9):
                    if i == j or i == k or j == k:
                        {{completion}}
                    if ok(i, j) and ok(j, k):
                        ans = min(ans, work(i)+work(j) + work(k))
        print(ans)

    except EOFError:
        break

",continue,"if ok(i, j) and ok(j, k):"
"from sys import stdin
input = stdin.readline
ans, n = map(int, input().split())
a2 = []
for idx in range(n):
    _, *arr = map(int, input().split())
    profit = req = prevPositiveProfit = 0
    for i in arr:
        profit += i
        req = min(req, profit)
        if profit - prevPositiveProfit > 0:
            {{completion}}
a2.sort()
for req, profit in a2:
    if ans < req:
        break
    ans += profit
print(ans)

","a2.append((-req, profit - prevPositiveProfit))
            prevPositiveProfit = profit","profit = req = prevPositiveProfit = 0
for i in arr:
    profit += i
    req = min(req, profit)
    if profit - prevPositiveProfit > 0:
        prevPositiveProfit = profit"
"x, t = map(int,input().split())
l = []
for _ in range(t):
  a = input().split()[1:]
  m = 0
  n = 0
  for i in a:
    if int(i) < 0 and n > 0:
      {{completion}}
    n += int(i)
    m = min(m,n)
  if n > 0:
    l.append((m,n))
l.sort(reverse=True)
for i,j in l:
  if i + x <0:
    break
  x += j 
print(x)","l.append((m,n))
      n = 0",x += j
"from heapq import *
import sys
input = sys.stdin.readline
x, k = map(int, input().split())
cand = []
for i in range(k):
  a = list(map(int, input().split()))
  psum, mnv, cur = 0, 0, 0
  for i in range(1, len(a)):
    psum += a[i]
    mnv = max(mnv, -psum)
    if psum > cur:
      {{completion}}
cand.sort()
for [v, w] in cand:
  if x >= v:
    x += w
print(x)","cand.append([mnv, psum - cur])
      cur = psum","psum += a[i]
    mnv = max(mnv, -psum)
    if psum > cur:
      cur = psum
      heappush(cand, [-cur, i])"
"from sys import stdin
input = lambda: stdin.buffer.readline().decode().strip()
from collections import deque


for _ in range(int(input())):
    n = int(input())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))

    def solve(order):
        dq = deque()
        for i in order:
            while dq and dq[-1] <= a[i]: {{completion}}
            while dq and dq[0] > b[i]: dq.popleft()
            dq.append(a[i])
            if dq[0] == b[i]: a[i] = b[i]

    solve(range(n))
    solve(reversed(range(n)))
    print('YES' if a == b else 'NO')",dq.pop(),dq.pop()
"from sys import stdin
input = lambda: stdin.buffer.readline().decode().strip()
from collections import deque
for _ in range(int(input())):
    n = int(input())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))
    def solve(order):
        dq = deque()
        for i in order:
            while dq and dq[-1] <= a[i]: {{completion}}
            while dq and dq[0] > b[i]: dq.popleft()
            dq.append(a[i])
            if dq[0] == b[i]: a[i] = b[i]
    solve(range(n))
    solve(reversed(range(n)))
    print('YES' if a == b else 'NO')",dq.pop(),dq.pop()
"
mod=998244353


def solve():
    n=int(input())
    A=[]
    while n>0:
        s=list(map(int,input().split()))
        A+=s
        n-=len(s)

    a0,a1,a00,a10,a01,a11=0,0,0,0,0,0
    ans=[0,0,0,0]
    for i,x in enumerate(A):
        if x&1:
            a,b,c,d=ans
            ans=[a,(b+a01+c)%mod,(c+a10+d)%mod,d]
            a0,a1,a00,a10,a01,a11=a0,a1+1,a00,a10,(a01+a0)%mod,(a11+a1)%mod
        else:
            {{completion}}
    print(sum(ans)%mod)








for _ in range(1):
    solve()

","a, b, c, d = ans
            ans = [(a00+a+a)%mod,b,c,(d+a11+b)%mod ]
            a0, a1, a00, a10, a01, a11 = a0+1, a1 , (a00+a0)%mod, (a10+a1)%mod, a01, a11",
"for _ in range(int(input())):
    n, k = list(map(int, input().split(' ')))
    a = list(map(int, input().split(' ')))
    if a == sorted(a) or k != 1:
        print('YES')
    else:
        {{completion}}
",print('NO'),print('NO')
"def solve():
    n, k = map(int, input().split())
    numbers = list(map(int, input().split()))
    
    if numbers == sorted(numbers) or k > 1:
        print(""YES"")
    else:
        {{completion}}
    
    
if __name__ == ""__main__"":
    for test in range(int(input())):
        solve()
        ","print(""NO"")",print('NO')
"for t in range(0,int(input())):
    s=input().split()
    n=int(s[0])
    k=int(s[1])
    l=list(map(int,input().split()))
    f=0
    if k==1:
        for i in range(0,len(l)-1):
            if l[i]>l[i+1]:
                {{completion}}
        if f==0 or len(l)==1:
            print('YES')
        
    else:
        print('YES')
    
","print('NO')
                f=1
                break",print('NO')
"for _ in range(int(input())):
    {{completion}}","n,s=int(input()),input()
    print(""YES"" if s.count('0') else ""NO"")","print(""YES"",'\n')"
"t=int(input())
while(t>0):
    n=int(input())
    s=input()
    if s=='1'*n:
        print(""NO"",'\n')
    else:
        {{completion}}
    t=t-1","print(""YES"",'\n')","n,s=int(input()),input()
    print(""YES"" if s.count('0') else ""NO"")"
"def run_case():
    n = int(input())
    s = input()
    z = 0
    for i in range(n):
        z += (s[i] == '0')
    if z:
        print(""YES"")
    else:
        {{completion}}

tests = int(input())
while tests > 0:
    run_case()
    tests -= 1

","print(""NO"")","print(""YES"",'\n')"
"for s in[*open(0)][1:]:{{completion}}
","print(max(s.split(),key=int))","print(max(map(int, s.split())))"
"for i in [*open(0)][1:]:
    {{completion}}
","print(max(map(int, i.split())))","print(max(map(int, i.split())))"
"for i in[*open(0)][1:]:
    {{completion}}","print(max(i.split(),key=int))","print(max(map(int, i.split())))"
"for s in[*open(0)][2::2]:
 *a,=s[:-1];b=[];c=m='';i=len(a)
 while i:
  i-=1
  if a[i]>=m:{{completion}}
 for x in c:a[b.pop()]=x
 print((len(c.strip(c[-1])),-1)[a>sorted(a)])","m=a[i];b+=i,;c+=a[i]",b.append(i);m=a[i]
"M=998244353;P=pow;n,p,k=map(int,input().split());a=[1];m=P(p,n,M);i=1;R=1;g=1
for r in range(k):
    {{completion}}
print("" "".join(map(str, a)))
","i=(i*(m-R))%M
    R=(R*p)%M
    g=(g*P(p,r,M)*(R-1))%M
    a.append((i*i*P(g,-1,M))%M if g else 0)","i=(i*(m-R))%M
    R=(R*p)%M
    g=(g*P(p,r,M)*(R-1))%M
    a.append((i*i*P(g,-1,M))%M if g else 0)"
"M=998244353;P=pow;n,p,k=map(int,input().split());a=[1];m=P(p,n,M);i=1;R=1;g=1
for r in range(k):
    {{completion}}
print("" "".join(map(str, a)))","i=(i*(m-R))%M
    R=(R*p)%M
    g=(g*P(p,r,M)*(R-1))%M
    a.append((i*i*P(g,-1,M))%M if g else 0)","i=(i*(m-R))%M
    R=(R*p)%M
    g=(g*P(p,r,M)*(R-1))%M
    a.append((i*i*P(g,-1,M))%M if g else 0)"
"
for s in[*open(0)][2::2]:{{completion}}","print((s.count('.'),2)['...'in s])","print((s.count('.'),2)['...'in s])"
"for _ in range(int(input())):
    n=int(input())
    s=input()
    if(""..."" in s):
        print(2)
    else:
        {{completion}}","print(s.count("".""))",print(s.count('.'))
for p in[*open(0)][2::2]:{{completion}},"print((p.count('.'),2)['...'in p])","print((p.count('.'),2)['...'in p])"
"M=998244353;P=pow;n,p,k=map(int,input().split());a=[1];m=P(p,n,M);i=1;R=1;g=1
for r in range(k):
    {{completion}}
print("" "".join(map(str, a)))
","i=(i*(m-R))%M
    R=(R*p)%M
    g=(g*P(p,r,M)*(R-1))%M
    a.append((i*i*P(g,-1,M))%M if g else 0)","i=(i*(m-R))%M
    R=(R*p)%M
    g=(g*P(p,r,M)*(R-1))%M
    a.append((i*i*P(g,-1,M))%M if g else 0)"
"n,p,k = list(map(int, input().split()))
m=998244353
def f(x,y):
    return pow(x,y,m)

pn = f(p,n)
pe = [1]
for i in range(k):
    pe.append(pe[i]*p%m)
pi=f(p,-1)
pei=[1]
for i in range(k):
    pei.append(pei[i]*pi%m)
    
num=1
den=1
ans=[1]
for r in range(1,k+1):
    num *= (pn-pe[r-1])**2
    num %= m
    if r>n or num==0: {{completion}}
    den *= f(pe[r]-1,-1)
    den %= m
    den *= pei[r-1]
    den %= m
    ans.append(num*den%m)

while len(ans)<k+1: ans.append(0)
print(*ans)
    ",break,"num *= (pn-pe[r-1])**2
    num %= m
    if r>n or num==0:
        den *= f(pe[r]-1,-1)
        den %= m
        den *= pei[r-1]
        den %= m
        ans.append(num*den%m)"
"import math
from sys import stdin
input=lambda:stdin.readline().strip()
T=int(input())
V=[""a"",""e""]
C=[""b"",""c"",""d""]
while T:
    n=int(input())
    A=[]
    B=[]
    ALL=[]
    for i in range(n):
        a,b=map(int,input().split())
        A.append(a)
        B.append(b)
    temp=A[::]
    temp.sort()
    index=1
    dic=dict()
    for i in temp:
        dic[i]=index
        index+=1
    for i in range(n):
        ALL.append((dic[A[i]],B[i]))
    ALL.sort(key=lambda x:x[1])
    # print(ALL)
    SUM=[0]*(n+1)
    def low_bit(x):
        return x&(-x)
    def add(index):
        while index<n+1:
            {{completion}}
    def get(index):
        ret=0
        while index>0:
            ret+=SUM[index]
            index-=low_bit(index)
        return ret
    ret=0
    # print(ALL)
    for a,b in ALL:
        ret+=get(n)-get(a)
        add(a)
    print(ret)
    # print(ALL)
    # S=SortedList()
    T-=1","SUM[index]+=1
            index+=low_bit(index)","ret+=get(n)-get(a)
        add(a)
print(ret)"
"#from io import BytesIO
#from os import read,fstat
from sys import stdin
from sys import stdout
#input=BytesIO(read(0,fstat(0).st_size)).readline
input=stdin.readline
print=stdout.write

def ms(a,l,r):
    if l<r:
        c=(l+r)//2
        return ms(a,l,c)+ms(a,c+1,r)+m(a,l,c,r)
    else:
        return 0

def m(a,l,c,r):
    i,j,k,x=l,c+1,l,0
    while i<=c and j<=r:
        if a[i]<=a[j]:
            aa[k]=a[i]
            i+=1
        else:
            {{completion}}
        k+=1
    while i<=c:
        aa[k]=a[i]
        i+=1
        k+=1
    while j<=r:
        aa[k]=a[j]
        j+=1
        k+=1
    for i in range(l,r+1):
        a[i]=aa[i]
    return x

t=int(input())
for _ in range(t):
    i=int(input())
    l=[tuple(map(int,input().split())) for _ in range(i)]
    l.sort(key=lambda x:x[1])
    s=[i[0] for i in l]
    aa=[0]*i
    print(f'{ms(s,0,i-1)}\n')","aa[k]=a[j]
            x+=(c-i+1)
            j+=1","aa[k]=a[i]
            i+=1
        else:
            aa[k]=a[j]
            j+=1
        k+=1
    for i in range(l,r+1):
        a[i]=aa[i]
    return x

def ms(a,l,r):
    if l<r:
        c=(l+r)//2
        return ms(a,l,c)+ms(a,c+1,r)+m(a,l,c,r)
    else:
        return 0"
"import sys

def input(data_type=int): return data_type(sys.stdin.readline().strip())
def print(*args, sep=' ', end='\n'): sys.stdout.write(sep.join(map(str, args))+end)
def input_list(data_type=int): return list(map(data_type, sys.stdin.readline().strip().split()))

def Solve(n, k):
    l = n**2-k
    
    # Pattern
    if k > n**2 or k%2 == 1:
        matrix=[]
    
    elif k == 0:
        matrix=[[0]*n for _ in range(n)]
    
    elif k == n:
        matrix=[[1 if i==j else 0 for i in range(n)] for j in range(n)]
    
    elif k == n**2:
        matrix=[[1]*n for _ in range(n)]
        
    elif k == 2 or l == 2:
        if n == 2:
            matrix = [[1, 0], [0, 1]]
        else:
            matrix=[]
    
    # Main case
    else:
        q = min(k, l)
        matrix=[[0 for _ in range(n)] for __ in range(n)]
        
        if q % 4 != 0:
            matrix[-1][-1] = 1
            matrix[-1][-2] = 1
            matrix[-1][-3] = 0
            matrix[-2][-1] = 1
            matrix[-2][-2] = 0
            matrix[-2][-3] = 1
            matrix[-3][-1] = 0
            matrix[-3][-2] = 1
            matrix[-3][-3] = 1
            q -= 6
        
        row=2*n
        rnum = q // row
        left = (q % row) // 2
        for i in range(2*rnum):
            for j in range(n):
                matrix[i][j] = 1
    
        for i in range(left):
            matrix[2*rnum][i] = 1
            matrix[2*rnum + 1][i] = 1
        
        if l < k:
            for i in range(n):
                for j in range(n):
                    {{completion}}
    
    # Output
    if matrix!=[]:
        print(""Yes"")
        for i in matrix:
            print(*i)
    else:
        print(""No"")
    
if __name__ == ""__main__"":
    for _ in range(input()):
        n, k = input_list()
        Solve(n, k)",matrix[i][j] ^= 1,answer += ord(arr[3]) - ord(l)
"from sys import stdin
input = stdin.readline
inp = lambda :  list(map(int,input().split()))
for _ in range(int(input())):
	n,k=inp()
	a=inp()
	b=inp()
	l=0
	s1,s2,s3=0,0,0
	li=[]
	for i in range(min(k,n)):
		{{completion}}
	print(max(li))","s1+=a[i]
		l=max(l,b[i])
		li.append(s1+(k-i-1)*l)","s1+=a[i]
s2+=b[i]
s3+=a[i]
li.append(s1)
li.append(s2)
li.append(s3)
s1+=b[i]
s2+=b[i]
s3+=b[i]
li.append(s1)
li.append(s2)
li.append(s3)
s1+=b[i]
s2"
"from sys import stdin
from collections import Counter
from heapq import heappush, heappop

T = int(stdin.readline())
for t in range(T):
    {{completion}}","n = int(stdin.readline())
    counts = Counter(stdin.readline()[:n])
    mc = max(counts.values())
    # print(f""{mc=}"")
    print(max(mc-(sum(counts.values())-mc), n%2))","n = int(stdin.readline())
s = stdin.readline().strip()
c = Counter(s)
heap = []
for i in c:
    heappush(heap, (-c[i], i))
ans = 0
while len(heap) > 1:
    a, x = heappop(heap)
    b, y = heappop(heap)
    if x != y:
        heappush(heap, (a+b, x))
        ans += 1
print"
"import sys
input  = sys.stdin.readline

# div3 C
def main():
    # all testcases
    orda = ord('a')

    for _ in range(int(input())):
        n = int(input())
        s = input()
        cnt = [0] * 26

        for i in range(n):
            {{completion}}

        mx = max(cnt)

        print(max(2 * mx - n, n % 2))
        


if __name__ == '__main__':
    main()
",cnt[ord(s[i]) - orda] += 1,cnt[ord(s[i]) - orda] += 1
"#        ┏┓　　　┏┓+ +
#　　　┏┛┻━━━┛┻┓ + +
#　　　┃　　　　　　　┃ 　
#　　　┃　　　━　　　┃ ++ + + +
#　　 ████━████ ┃+
#　　　┃　　　　　　　┃ +
#　　　┃　　　┻　　　┃
#　　　┃　　　　　　　┃ + +
#　　　┗━┓　　　┏━┛
#　　　　　┃　　　┃　　　　　　　　　　　
#　　　　　┃　　　┃ + + + +
#　　　　　┃　　　┃　　　　　　　
#　　　　　┃　　　┃ + 　　　　
#　　　　　┃　　　┃
#　　　　　┃　　　┃　　+　　　　　　　　　
#　　　　　┃　 　　┗━━━┓ + +
#　　　　　┃ 　　　　　　　┣┓
#　　　　　┃ 　　　　　　　┏┛
#　　　　　┗┓┓┏━┳┓┏┛ + + + +
#　　　　　　┃┫┫　┃┫┫
#　　　　　　┗┻┛　┗┻┛+ + + +

import sys,math
# from collections import Counter
input = sys.stdin.readline

for _ in range(int(input())):
    n = int(input())
    s = input().strip()
    c = [0]*26
    for i in s:
        {{completion}}
    ans = max(c)
    print(max(n%2,ans*2-n))",c[ord(i)-ord('a')] += 1,"n = int(stdin.readline())
    counts = Counter(stdin.readline()[:n])
    mc = max(counts.values())
    print(max(mc-(sum(counts.values())-mc), n%2))"
"def find_numbers(t, testcases):
    results = []
    for i in range(t):
        s = testcases[i]
        n = len(s)
        found = False
        for j in range(n // 2, 0, -1):
            a = s[:j]
            b = s[j:]
            if not (a[0] == '0' or b[0] == '0') and int(b) > int(a):
                {{completion}}
        if not found:
            results.append(-1)
    
    return results

t = int(input())
testcases = []
for _ in range(t):
    testcases.append(input())

output = find_numbers(t, testcases)
for result in output:
    if result == -1:
        print(-1)
    else:
        a, b = result
        print(a, b)
","results.append((a, b))
                found = True
                break",return False
"import sys
def input(): return sys.stdin.readline().rstrip(""\r\n"")


try:
    sys.stdin = open('input.txt', 'r')
    sys.stdout = open('output.txt', 'w')
except:
    pass


def splitAndCheck(idx, t):
    l, r = t[:idx], t[idx:]

    if not l or not r or r[0] == '0':
        {{completion}}

    if int(l) >= int(r):
        return False
    return True


def solve():
    t = input()

    n = len(t)

    mid = n // 2

    while mid > -1 and not splitAndCheck(mid, t):
        mid -= 1

    if mid != -1:
        return ' '.join([t[:mid], t[mid:]])
    return -1


if __name__ == ""__main__"":
    t = int(input())
    for _ in range(t):
        print(solve())
",return False,return True
"for s in[*open(0)][1:]:
 b=m,k=[*map(s.count,'01')];i=0
 while k<b[0]or m<b[1]:{{completion}}
 print(i)",i+=1;b[int(s[~i])]-=1,i+=1
"t = int(input())
for task in range(t):
	s = input()
	n = len(s)
	l, u = [], []
	for i in range(n):
		if s[i].islower():
			if s[i] == 'b':
				if l: l.pop()
			else: l.append(i)
		else:
			if s[i] == 'B':
				if u: {{completion}}
			else: u.append(i)
	print(''.join(s[i] for i in sorted(l+u)))",u.pop(),u.pop()
"import sys 

t = int( input() )

for _ in range(t):
    word = sys.stdin.readline().rstrip('\n')

    deleted = set()
    lower, upper = [], []

    for i, w in enumerate(word):
        if w == 'b':
            if lower:
                deleted.add(lower.pop())
            deleted.add(i)

        elif w == 'B':
            if upper:
                {{completion}}
            deleted.add(i)

        elif w.islower():
            lower.append(i)

        else:
            upper.append(i)

    print(''.join(word[i] for i in range(len(word)) if i not in deleted))",deleted.add(upper.pop()),deleted.add(upper.pop())
"for _ in range((int)(input())) :
    s = input()
    is_capital = lambda x: x >= 'A' and x <= 'Z'
    capital = []
    small = []
    for index in range(len(s)) :
        if s[index] == 'b' :
            if len(small) > 0 : small.pop()
        elif s[index] == 'B' :
            if len(capital) > 0 : {{completion}}
        elif is_capital(s[index]) : capital.append(index)
        else : small.append(index)
    print("""".join(s[index] for index in sorted(capital + small)))
        ",capital.pop(),small.pop()
"for s in[*open(0)][2::2]:{{completion}}
","t=sum(map(int,s.split()));print('YNEOS'[int(t**.5)**2<t::2])","t=sum(map(int,s.split()));print('YNEOS'[int(t**.5)**2<t::2])"
for siri in[*open(0)][2::2]:{{completion}},"t=sum(map(int,siri.split()));print('YNEOS'[int(t**.5)**2<t::2])","t=sum(map(int,siri.split()));print('YNEOS'[int(t**.5)**2<t::2])"
"import sys

input = lambda: sys.stdin.readline().rstrip()

# k, n = map(int, input().split())

const = 10 ** 9 + 7
for t in range(int(input())):
    a, b, r = map(int, input().split())
    if a < b:
        a, b = b, a
    x = 0
    fl = False
    for i in range(len(bin(a)), -1, -1):
        temp = 1 << i
        if a & temp > b & temp:
            if fl and x + temp <= r:
                {{completion}}
            fl = True
    print((a ^ x) - (b ^ x))

",x += temp,"flag = True
continue"
"import sys
input = sys.stdin.readline
write_output = sys.stdout.write

out = []
def the_solution():
    a, b, r = map(int, input().split())
    ans = 0
    x = 0
    for i in range(60, -1, -1):
        if ((a >> i) & 1) == ((b >> i) & 1):
            continue
        elif ans == 0:
            if ((a >> i) & 1) == 1:
                ans += (1 << i)
            else:
                ans -= (1 << i)
        elif ans > 0:
            if ((a >> i) & 1) == 1:
                if x + (1 << i) > r:
                    {{completion}}
                x += (1 << i)
            ans -= (1 << i)
        elif ans < 0:
            if ((b >> i) & 1) == 1:
                if x + (1 << i) > r:
                    ans -= (1 << i)
                    continue
                x += (1 << i)
            ans += (1 << i)
    out.append(abs(ans))

for _ in range(int(input())):
    the_solution()

write_output('\n'.join(map(str, out)))","ans += (1 << i)
                    continue","flag=True
                continue"
"import sys
input=sys.stdin.readline
from math import log2
t=int(input())
for _ in range(t):
    a,b,r=map(int,input().split())
    if a<b:a,b=b,a
    if a==0:
        print(0)
        continue
    n=int(log2(a))
    flag=False
    ans=0
    for i in range(n,-1,-1):
        m=1<<i
        if not flag:
            if m&a !=0 and m&b ==0:
                {{completion}}
        
        if (m)&a !=0 and (m)&b == 0 and (ans|(m))<=r:
            ans|=(m)
    #print(ans,a^ans,b^ans)
    res=abs((a^ans) - (b^ans))
    sys.stdout.write(str(res)+'\n')





","flag=True
                continue","ans|=(m)
            else:
                flag=True"
"for n in[*open(0)][1:]:{{completion}}
",print('SFeicrosntd'[int(n)%3>0::2]),"print(""First"")"
"for _ in range(int(input())):
    if(int(input())%3==0):
        print(""Second"")
    else:
        {{completion}}","print(""First"")","print(""First"")"
"n=int(input())
for i in range(n):
    m=int(input())
    if m%3==0:
        print(""Second"")
    else:
        {{completion}}
","print(""First"")","print(""First"")"
"for s in[*open(0)][2::2]:
 r=0;t=set()
 for x in s[:-1]:{{completion}}
 print(r)",t|={x};r+=len(t),
"for x in[*open(0)][1:]:
    {{completion}}","a, b = map(int, x.split());
    print(b//2*a)","n,m=map(int,x.split());print(m//2*n)"
"masres=[]
for i in range(int(input())):
    {{completion}}
for x in masres:
    print(x)","n,m=map(int, input().split())
    masres.append((m//2)*n)","a, b = map(int, x.split());
    print(b//2*a)"
"for s in[*open(0)][1:]:{{completion}}
","n,m=map(int,s.split());print(m//2*n)","n,m=map(int,s.split());print(m//2*n)"
"for _ in range(int(input()) * 3):
    s = input()
    for t in ""ABC"":
        if t not in s:
            {{completion}}",print(t),print(t)
"for _ in[0]*int(input()):
 for _ in'***':{{completion}}",print(({*'ABC'}-{*input()}or['']).pop()),print(t)
"t = int(input())

for _ in range(t):
    for i in range(3):
        row = input()
        
        if '?' in row:
            if ""A"" in row:
                if ""B"" in row:
                    print(""C"")
                else:
                    {{completion}}
            else:
                print(""A"")","print(""B"")",print(({*'ABC'}-{*input()}or['']).pop())
"x=int(input())
for i in range(x):
    {{completion}}","a,b,c=map(int,input().split())
    print(a^b^c)",print(j)
"for i in [[int(i) for i in input().split()] for j in range(int(input()))]:
    a, b, c = i[0], i[1], i[2]
    if a==b:
        print(c)
    elif a==c:
        {{completion}}
    else:
        print(a)",print(b),"a,b,c=map(int,input().split())
    print(a^b^c)"
"m=int(input())
for i in range(m):
    x=input().split()
    for j in x :
       l=x.count(j)
       if l==1:
          {{completion}}",print(j),print(j)
"for _ in range(int(input())):
    {{completion}}","n = int(input())
    s = input()
    print(sum([s.count(chr(ord('A') + i)) >= i + 1 for i in range(26)]))","n=int(input())
s=input()
ans=0
for i in range(n):
    if s[i]!='.':
        ans+=1
print(ans)"
"tc = int(input())
 
for _ in range(tc):
    n= int(input())
    st = input()
    di = {}
    for ch in st:
        if di.get(ch):
            di[ch] +=1
        else:
            {{completion}}
    cnt= 0
    for key,value in di.items():
        if ord(key)%64 <= value:
            cnt+=1
            
    print(cnt)",di[ch] =1,"n = int(input())
    s = input()
    print(sum([s.count(chr(ord('A') + i)) >= i + 1 for i in range(26)]))"
"t=int(input())
for _ in range(t):
    a=[0]*26
    n=int(input())
    s=input()
    for i in s:
        z = ord(i)-ord('A')
        a[z]+=1
    ans = 0
    for i in range(26):
        if a[i]>=(i+1):
            {{completion}}
    print(ans)
",ans+=1,"n = int(input())
    s = input()
    print(sum([s.count(chr(ord('A') + i)) >= i + 1 for i in range(26)]))"
for s in[*open(0)][1:]:{{completion}},"print(('Bob','Alice')[sum(map(int,s.split()))%2])","print(['Bob','Alice'][sum(list(map(int,s.split())))%2])"
"


testcase = int(input())

for test in range(0, testcase):
    a, b = map(int, input().split())
    if (a+b)%2==0:
        print(""Bob"", end=""\n"")
    else:
        {{completion}}","print(""Alice"", end=""\n"")","print(['Bob','Alice'][sum(list(map(int,input().split())))%2])"
for i in range(int(input())):{{completion}},"print(['Bob','Alice'][sum(list(map(int,input().split())))%2])","print(('Bob','Alice')[sum(map(int,input().split()))%2])"
